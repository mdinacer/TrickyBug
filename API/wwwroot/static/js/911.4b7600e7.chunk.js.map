{"version":3,"file":"static/js/911.4b7600e7.chunk.js","mappings":"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","sources":["app/components/common/AppPagination.tsx","app/components/common/LoadingComponentSmall.tsx","app/components/common/TextArea.tsx","app/components/common/TextInput.tsx","app/components/projects/projectDetails/ProjectForm.tsx","app/hooks/useProjects.tsx","app/pages/projects/ProjectsPage.tsx"],"sourcesContent":["import { ChevronLeftIcon, ChevronRightIcon } from \"@heroicons/react/solid\";\nimport { useState } from \"react\";\nimport ReactPaginate from \"react-paginate\";\nimport { MetaData } from \"../../models/pagination\";\n\ninterface Props {\n  metaData: MetaData;\n  onPageChange: (page: number) => void;\n}\n\nexport default function AppPagination({ metaData, onPageChange }: Props) {\n  const { currentPage, totalItems, totalPages, itemsPerPage } = metaData;\n  const [pageNumber, setPageNumber] = useState(currentPage);\n\n  function handlePageChange(page: number) {\n    setPageNumber(page);\n    onPageChange(page);\n  }\n\n  return (\n    <div className=\" border-x-2 border-x-inherit px-10 text-inherit w-auto h-auto\">\n      {metaData && metaData.totalPages > 1 && (\n        <div className=\"flex flex-col lg:flex-row justify-between items-center gap-y-2 lg:gap-y-0\">\n          <p className=\"font-Oswald font-thin text-lg lg:text-xl\">\n            Showing {(currentPage - 1) * itemsPerPage + 1} to{\" \"}\n            {(currentPage - 1) * itemsPerPage > totalItems\n              ? totalItems\n              : currentPage * itemsPerPage}{\" \"}\n            of {totalItems} items\n          </p>\n          <ReactPaginate\n            className=\"flex flex-row items-center gap-x-3 py-2 px-5 w-auto \"\n            forcePage={pageNumber - 1}\n            pageClassName=\"font-thin\"\n            activeClassName=\"font-normal\"\n            pageLinkClassName={\"p-2 font-Oswald  text-inherit text-xl\"}\n            breakLabel=\"...\"\n            nextLabel={<ChevronRightIcon className=\"h-6 w-6\" />}\n            onPageChange={({ selected }) => {\n              console.log(selected);\n\n              handlePageChange(selected);\n            }}\n            pageRangeDisplayed={3}\n            pageCount={totalPages}\n            previousLabel={<ChevronLeftIcon className=\"h-6 w-6\" />}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n","import Spinner from \"./Spinner\";\n\ninterface Props {\n  message?: string;\n}\n\nexport default function LoadingComponentSmall({ message = \"Loading\" }: Props) {\n  return (\n    <div className=\"relative  w-full h-full flex items-center justify-center\">\n      <div>\n        <Spinner />\n        <p className=\" font-Oswald text-5xl py-10 uppercase\">{message}</p>\n      </div>\n    </div>\n  );\n}\n","import { useController, UseControllerProps } from \"react-hook-form\";\n\ninterface Props extends UseControllerProps {\n  label: string;\n  type?: string;\n  placeholder: string;\n  rows?: number;\n  //fullWidth?: boolean;\n}\n\nconst styles = {\n  inputContainer:\n    \"w-full border-x-2 border-x-black h-full  bg-slate-200 flex flex-col lg:flex-row items-center\",\n  inputStyle:\n    \"font-Montserrat resize-none font-thin text-base lg:text-xl text-inherit placeholder:text-gray-500 placeholder:font-Oswald pb-2 pt-3 px-5 w-full h-full block bg-transparent focus-within:outline-none\",\n  inputValidationStyle:\n    \"h-auto font-Oswald text-xl leading-none w-full font-thin px-5 py-5 lg:py-0 text-gray-200\",\n};\n\nexport default function AppTextArea(props: Props) {\n  const { fieldState, field } = useController({ ...props, defaultValue: \"\" });\n\n  return (\n    <div\n      className={`\n      ${fieldState.error ? \"border-x-red-500\" : \"border-x-inherit\"}  \n      ${styles.inputContainer}`}\n    >\n      <textarea\n        className={styles.inputStyle}\n        aria-label={props.label}\n        type={props.type}\n        {...props}\n        {...field}\n      />\n      {fieldState.error && (\n        <p className={styles.inputValidationStyle}>\n          {fieldState.error.message}\n        </p>\n      )}\n    </div>\n  );\n}\n","import { useController, UseControllerProps } from \"react-hook-form\";\n\ninterface Props extends UseControllerProps {\n  label: string;\n  type?: string;\n  placeholder: string;\n  //fullWidth?: boolean;\n  autoComplete?: string | undefined;\n}\n\nconst styles = {\n  inputContainer:\n    \"w-full border-x-2 border-x-black bg-slate-200 flex flex-col lg:flex-row items-center \",\n  inputStyle:\n    \" font-Montserrat font-thin text-lg lg:text-xl text-inherit placeholder:capitalize placeholder:text-gray-500  placeholder:font-Oswald pb-2 pt-3 px-5 w-full h-auto block bg-transparent focus-within:outline-none\",\n  inputValidationStyle:\n    \" h-auto font-Oswald text-xl leading-none w-full text-center lg:text-left font-thin px-5 lg:py-0 text-gray-400 py-2 \",\n};\n\nexport default function AppTextInput(props: Props) {\n  const { fieldState, field } = useController({ ...props, defaultValue: \"\" });\n\n  return (\n    <div\n      className={` ${\n        fieldState.error ? \"border-r-red-500\" : \"border-x-inherit \"\n      } ${styles.inputContainer}`}\n    >\n      <input\n        className={`${styles.inputStyle}`}\n        aria-label={props.label}\n        type={props.type}\n        {...props}\n        {...field}\n      />\n      {fieldState.error && (\n        <p className={styles.inputValidationStyle}>\n          {fieldState.error.message}\n        </p>\n      )}\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { useForm, FieldValues } from \"react-hook-form\";\nimport agent from \"../../../api/agent\";\nimport { CreateMember, ProjectMember } from \"../../../models/member\";\nimport { ProjectDetails } from \"../../../models/project\";\nimport { updateProject, setProject } from \"../../../slices/projectSlice\";\nimport { useAppDispatch } from \"../../../store/configureStore\";\nimport useMediaQuery from \"../../../util/mediaQuery\";\nimport MediaDropZone from \"../../common/MediaDropZone\";\nimport AppTextArea from \"../../common/TextArea\";\nimport AppTextInput from \"../../common/TextInput\";\nimport MembersForm from \"../../Forms/MembersForm\";\n\ninterface Props {\n  project?: ProjectDetails | null;\n  handleClose: () => void;\n}\n\nexport default function ProjectForm({ project, handleClose }: Props) {\n  const [projectId, setProjectId] = useState<string | null>(null);\n  const [members, setMembers] = useState<CreateMember[]>([]);\n  const isEdit = !!project;\n  const isMobile = useMediaQuery(\"(max-width: 1024px)\");\n\n  const {\n    control,\n    watch,\n    handleSubmit,\n    reset,\n    formState: { isSubmitting, isDirty },\n  } = useForm({\n    mode: \"all\",\n    //resolver: yupResolver<any>(productValidation)\n  });\n\n  const watchFile = watch(\"file\", null);\n  const dispatch = useAppDispatch();\n\n  async function handleSubmitData(data: FieldValues) {\n    const item: any = { id: project?.id ?? 0, ...data };\n    const hasChanged =\n      project &&\n      (project.title !== item.title ||\n        project.description !== item.description ||\n        item.file !== null);\n    console.log(hasChanged);\n\n    try {\n      if (isEdit && hasChanged) {\n        const result = await agent.Projects.update(item);\n        dispatch(updateProject({ id: project.id, changes: { ...result } }));\n      }\n\n      if (!isEdit) {\n        const result = await agent.Projects.create(item);\n        dispatch(setProject(result));\n        setProjectId(result.id);\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n    }\n  }\n\n  useEffect(() => {\n    if (project) {\n      setProjectId(project.id);\n      if (!watchFile && !isDirty) {\n        const item = {\n          title: project.title,\n          description: project.description,\n        };\n        reset(item, { keepTouched: true });\n      }\n    }\n\n    return () => {\n      if (watchFile) URL.revokeObjectURL(watchFile.preview);\n    };\n  }, [reset, watchFile, isDirty, project]);\n\n  return (\n    <div className=\"w-screen min-h-screen h-full py-16 bg-slate-100\">\n      <div className=\"container mx-auto px-5\">\n        <div className=\"container mx-auto py-5 border-b-2 border-b-black px-5 lg:px-0 \">\n          <p className=\" font-Oswald text-5xl\">\n            {isSubmitting\n              ? \"Please wait\"\n              : isEdit\n              ? \"Edit Project\"\n              : \"New Project\"}\n          </p>\n        </div>\n\n        <div>\n          <form className=\"py-10\">\n            <div className=\"grid lg:grid-cols-2 gap-10\">\n              <div className=\"flex flex-col gap-y-5 max-w-xl w-full mx-auto\">\n                <p className=\"font-Oswald text-3xl font-thin pb-4\">\n                  Project Info\n                </p>\n                <AppTextInput\n                  control={control}\n                  name=\"title\"\n                  label=\"Title\"\n                  placeholder=\"Title\"\n                  rules={{ required: \"Title is required\" }}\n                />\n                <AppTextArea\n                  name=\"description\"\n                  placeholder=\"Description\"\n                  label=\"Description\"\n                  rows={7}\n                  control={control}\n                  rules={{ required: \"Description is required\" }}\n                />\n\n                <div className=\"h-auto border-x-2 p-5  border-x-black  bg-slate-200 flex-auto\">\n                  <MediaDropZone control={control} name=\"file\" />\n                </div>\n\n                <div className=\"flex flex-row h-full w-full border-x-2 px-5 border-x-black  bg-slate-200\">\n                  <div className=\" mx-auto flex items-center justify-center\">\n                    {watchFile ? (\n                      <img\n                        className=\" object-auto w-auto object-center max-h-[200px]\"\n                        src={watchFile.preview}\n                        alt=\"preview\"\n                      />\n                    ) : (\n                      <img\n                        className=\" object-auto w-auto object-center max-h-[200px]\"\n                        src={project?.photo}\n                        alt={project?.title}\n                      />\n                    )}\n                  </div>\n                </div>\n                <div className=\"flex flex-row gap-x-0 mx-auto w-full justify-center py-5\">\n                  <input\n                    className=\"cursor-pointer border-slate-800 border-2 text-slate-800 py-1 px-5 uppercase font-Oswald text-xl font-thin\"\n                    type=\"button\"\n                    value=\"Cancel\"\n                    onClick={() => handleClose()}\n                  />\n                  <input\n                    className=\"cursor-pointer bg-slate-800 text-white py-1 px-5 uppercase font-Oswald text-xl font-thin\"\n                    type=\"submit\"\n                    value={isEdit ? \"Update Project\" : \"Create Project\"}\n                  />\n                </div>\n              </div>\n              {/* \n              <div>\n                <p className=\"font-Oswald text-3xl font-thin pb-4\">Members</p>\n                <MembersForm\n                  projectId={projectId!}\n                  isEdit={isEdit}\n                  members={members}\n                  setMembers={setMembers}\n                />\n              </div> */}\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useEffect } from \"react\";\nimport { fetchProjectsAsync, projectSelectors } from \"../slices/projectSlice\";\nimport { useAppDispatch, useAppSelector } from \"../store/configureStore\";\n\nexport default function useProjects() {\n  const projects = useAppSelector(projectSelectors.selectAll);\n  const { projectsLoaded, metaData } = useAppSelector((state) => state.project);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (!projectsLoaded) {\n      dispatch(fetchProjectsAsync());\n    }\n  }, [dispatch, projects, projectsLoaded]);\n  return {\n    projects,\n    projectsLoaded,\n    metaData,\n  };\n}\n","import { lazy, useState } from \"react\";\nimport AppPagination from \"../../components/common/AppPagination\";\nimport LoadingComponentSmall from \"../../components/common/LoadingComponentSmall\";\nimport ProjectForm from \"../../components/projects/projectDetails/ProjectForm\";\nimport useProjects from \"../../hooks/useProjects\";\nimport { setPageNumber } from \"../../slices/projectSlice\";\nimport { useAppDispatch } from \"../../store/configureStore\";\n\nconst ProjectFilters = lazy(\n  () => import(\"../../components/projects/ProjectFilters\")\n);\nconst ProjectsList = lazy(\n  () => import(\"../../components/projects/ProjectsList\")\n);\n\nexport default function ProjectsPage() {\n  const dispatch = useAppDispatch();\n  const { projects, projectsLoaded, metaData } = useProjects();\n  const [isEdit, setIsEdit] = useState(false);\n\n  // if (!projectsLoaded)\n  //   return (\n  //     <div className=\"py-20 w-screen h-screen bg-slate-300 flex items-center justify-center\">\n  //       <LoadingComponent message=\"Loading Projects...\" />\n  //     </div>\n  //   );\n\n  if (isEdit) return <ProjectForm handleClose={() => setIsEdit(false)} />;\n\n  return (\n    <div className=\"h-full min-h-screen w-screen bg-slate-100 pt-20 flex\">\n      <div className=\"flex-auto container lg:px-10 mx-auto h-auto flex flex-col\">\n        <div className=\" w-full flex flex-col lg:flex-row justify-between lg:items-center py-5 px-5 lg:px-0\">\n          <h1 className=\"flex-initial font-Oswald text-5xl lg:text-7xl pb-5 lg:pb-10 uppercase\">\n            projects\n          </h1>\n          <button\n            type=\"button\"\n            className=\"px-2 py-1 bg-slate-600 text-white\"\n            onClick={() => setIsEdit(true)}\n          >\n            <p className=\"font-Oswald text-lg font-thin uppercase\">\n              Add Project\n            </p>\n          </button>\n        </div>\n        <div className=\"flex flex-col justify-between\">\n          <ProjectFilters />\n        </div>\n\n        <div className=\"relative container mx-auto flex-auto lg:p-10 lg:py-16 py-10 \">\n          {projectsLoaded ? (\n            <ProjectsList projects={projects} />\n          ) : (\n            <LoadingComponentSmall />\n          )}\n        </div>\n        {metaData && (\n          <div className=\"py-5 border-black w-full\">\n            <AppPagination\n              metaData={metaData}\n              onPageChange={(page: number) =>\n                dispatch(setPageNumber({ pageNumber: page + 1 }))\n              }\n            />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":["AppPagination","metaData","onPageChange","currentPage","totalItems","totalPages","itemsPerPage","useState","pageNumber","setPageNumber","handlePageChange","page","className","forcePage","pageClassName","activeClassName","pageLinkClassName","breakLabel","nextLabel","selected","console","log","pageRangeDisplayed","pageCount","previousLabel","LoadingComponentSmall","message","styles","AppTextArea","props","useController","defaultValue","fieldState","field","error","label","type","AppTextInput","ProjectForm","project","handleClose","setProjectId","isEdit","useMediaQuery","useForm","mode","control","watch","reset","handleSubmit","formState","isSubmitting","isDirty","watchFile","useAppDispatch","useEffect","id","item","title","description","keepTouched","URL","revokeObjectURL","preview","name","placeholder","rules","required","rows","src","alt","photo","value","onClick","useProjects","projects","useAppSelector","projectSelectors","state","projectsLoaded","dispatch","fetchProjectsAsync","ProjectFilters","lazy","ProjectsList","ProjectsPage","setIsEdit"],"sourceRoot":""}