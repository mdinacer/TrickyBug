{"version":3,"file":"static/js/311.af586ed2.chunk.js","mappings":"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","sources":["app/components/common/TextArea.tsx","app/components/common/TextInput.tsx","../node_modules/@heroicons/react/solid/esm/PlusIcon.js","app/components/Forms/MembersForm.tsx","app/components/projects/projectDetails/ProjectForm.tsx","app/pages/projects/ProjectDetailsPage.tsx","../node_modules/@heroicons/react/solid/esm/PencilAltIcon.js","../node_modules/@heroicons/react/solid/esm/TrashIcon.js"],"sourcesContent":["import { useController, UseControllerProps } from \"react-hook-form\";\n\ninterface Props extends UseControllerProps {\n  label: string;\n  type?: string;\n  placeholder: string;\n  rows?: number;\n  fullWidth?: boolean;\n}\n\nconst styles = {\n  inputContainer:\n    \"border-x-2 border-x-black h-full  bg-slate-200 flex flex-col lg:flex-row items-center\",\n  inputStyle:\n    \"font-Montserrat resize-none font-thin text-base lg:text-xl text-inherit placeholder:text-gray-500 placeholder:font-Oswald pb-2 pt-3 px-5 w-full h-full block bg-transparent focus-within:outline-none\",\n  inputValidationStyle:\n    \"h-auto font-Oswald text-xl leading-none w-full font-thin px-5 py-5 lg:py-0 text-gray-200\",\n};\n\nexport default function AppTextArea(props: Props) {\n  const { fieldState, field } = useController({ ...props, defaultValue: \"\" });\n\n  return (\n    <div\n      className={`\n      ${props.fullWidth ? \"w-full\" : \"w-full max-w-sm\"}\n      ${fieldState.error ? \"border-x-red-500\" : \"border-x-inherit\"}  \n      ${styles.inputContainer}`}\n    >\n      <textarea\n        className={styles.inputStyle}\n        aria-label={props.label}\n        type={props.type}\n        {...props}\n        {...field}\n      />\n      {fieldState.error && (\n        <p className={styles.inputValidationStyle}>\n          {fieldState.error.message}\n        </p>\n      )}\n    </div>\n  );\n}\n","import { useController, UseControllerProps } from \"react-hook-form\";\n\ninterface Props extends UseControllerProps {\n  label: string;\n  type?: string;\n  placeholder: string;\n  fullWidth?: boolean;\n  autoComplete?: string | undefined;\n}\n\nconst styles = {\n  inputContainer:\n    \" border-x-2 border-x-black bg-slate-200 flex flex-row items-center \",\n  inputStyle:\n    \" font-Montserrat font-thin text-base lg:text-xl text-inherit placeholder:capitalize placeholder:text-gray-500  placeholder:font-Oswald pb-2 pt-3 px-5 w-full h-auto block bg-transparent focus-within:outline-none\",\n  inputValidationStyle:\n    \" h-auto font-Oswald text-xl leading-none w-full text-left font-thin px-5 py-0 text-gray-200 \",\n};\n\nexport default function AppTextInput(props: Props) {\n  const { fieldState, field } = useController({ ...props, defaultValue: \"\" });\n\n  return (\n    <div\n      className={` ${props.fullWidth ? \"w-full\" : \"w-full max-w-sm \"} ${\n        fieldState.error ? \"border-r-red-500\" : \"border-x-inherit \"\n      } ${styles.inputContainer}`}\n    >\n      <input\n        className={`${styles.inputStyle} autofill:bg-yellow-200 `}\n        aria-label={props.label}\n        type={props.type}\n        {...props}\n        {...field}\n      />\n      {fieldState.error && (\n        <p className={styles.inputValidationStyle}>\n          {fieldState.error.message}\n        </p>\n      )}\n    </div>\n  );\n}\n","import * as React from \"react\";\n\nfunction PlusIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(PlusIcon);\nexport default ForwardRef;","import { PlusIcon } from \"@heroicons/react/solid\";\nimport { useEffect, useState } from \"react\";\nimport agent from \"../../api/agent\";\nimport { CreateMember } from \"../../models/member\";\nimport { AppUserFull } from \"../../models/user\";\n\ninterface Props {\n  isEdit: boolean;\n  projectId: string;\n  members: CreateMember[];\n  setMembers: (members: CreateMember[]) => void;\n}\n\nexport type MemberItemStatus = \"Added\" | \"Updated\" | \"Removed\";\n\nexport default function MembersForm({\n  isEdit,\n  projectId,\n  members,\n  setMembers,\n}: Props) {\n  const [users, setUsers] = useState<AppUserFull[]>([]);\n  const [usersLoaded, setUsersLoaded] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [addedMembers, setAddedMembers] = useState<string[]>([]);\n  const [removedMembers, setRemovedMembers] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (!usersLoaded) {\n      setLoading(true);\n      agent.Account.listAll()\n        .then((response) => {\n          setUsers(response);\n          setUsersLoaded(true);\n        })\n        .catch((err) => console.log(err))\n        .finally(() => setLoading(false));\n    }\n  }, [usersLoaded]);\n\n  // const loadMembers = useCallback(\n  //   (projectId: string) => {\n  //     setLoading(true);\n  //     agent.Projects.listMembers(projectId)\n  //       .then((members: ProjectMember[]) => {\n  //         const membersList = members.map((member) => ({\n  //           userId: member.userId,\n  //           username: member.userName,\n  //           projectId,\n  //           isLeader: member.isLeader,\n  //         }));\n  //         const userIds = members.map((m) => m.userId);\n  //         setMembers(members);\n  //         setAddedMembers(userIds);\n  //         reset({ members: membersList });\n  //       })\n  //       .catch((err) => console.log(err))\n  //       .finally(() => setLoading(false));\n  //   },\n  //   [reset]\n  // );\n\n  // useEffect(() => {\n  //   if (projectId && usersLoaded) {\n  //     loadMembers(projectId);\n  //   }\n  // }, [loadMembers, projectId, usersLoaded]);\n\n  // function handleAddMember(user: AppUserFull) {\n  //   append({\n  //     userId: user.id,\n  //     username: user.displayName,\n  //     projectId,\n  //     isLeader: false,\n  //     role: \"\",\n  //   });\n  //   setAddedMembers([...addedMembers, user.id]);\n  //}\n\n  // function handleRemoveMember(index: number, userId: string) {\n  //   remove(index);\n  //   const items = addedMembers.filter((m) => m !== userId);\n\n  //   if (isEdit) {\n  //     setRemovedMembers([...removedMembers, userId]);\n  //   }\n  //   setAddedMembers(items);\n  // }\n\n  const itemExists = (userId: string) => {\n    return addedMembers.some((m) => m === userId);\n  };\n\n  //if (loading) return <LoadingComponent message=\"Loading users, please wait\" />;\n  if (usersLoaded && users.length === 0) return <p>no users</p>;\n\n  const handleAddUser = (user: AppUserFull) => {\n    if (members.some((m) => m.userId === user.id)) {\n      const items = members.filter((m) => m.userId !== user.id);\n      setMembers(items);\n    } else {\n      const item: CreateMember = {\n        userId: user.id,\n        isLeader: false,\n      };\n      setMembers([...members, item]);\n    }\n  };\n\n  const styles = {\n    menu: `list-none flex flex-col flex-wrap gap-2`,\n    menuItem: `relative bg-slate-200 px-3 rounded-sm flex flex-row justify-start items-center w-full h-auto`,\n    menuItemText: `font-Oswald font-thin text-2xl`,\n  };\n\n  return (\n    <div className=\"w-full h-full bg-slate-100 overflow-hidden py-5\">\n      <ul className={styles.menu}>\n        {users.map((user) => (\n          <li key={user.id} className={`${styles.menuItem} py-2 pl-5 pr-10`}>\n            <div className=\"w-full\">\n              <p className={`${styles.menuItemText} w-full`}>\n                {user.displayName}\n              </p>\n              <p className=\" font-Montserrat font-thin text-gray-500 uppercase\">\n                {user.title}\n              </p>\n            </div>\n            {!itemExists(user.id) ? (\n              <button\n                type=\"button\"\n                title=\"add member\"\n                onClick={() => {}}\n                className=\"\"\n              >\n                <PlusIcon className=\"h-6 w-6\" />\n              </button>\n            ) : (\n              <p className=\" font-Oswald font-thin text-lg text-gray-500\">\n                Added\n              </p>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { useForm, FieldValues } from \"react-hook-form\";\nimport agent from \"../../../api/agent\";\nimport { CreateMember, ProjectMember } from \"../../../models/member\";\nimport { ProjectDetails } from \"../../../models/project\";\nimport { updateProject, setProject } from \"../../../slices/projectSlice\";\nimport { useAppDispatch } from \"../../../store/configureStore\";\nimport useMediaQuery from \"../../../util/mediaQuery\";\nimport MediaDropZone from \"../../common/MediaDropZone\";\nimport AppTextArea from \"../../common/TextArea\";\nimport AppTextInput from \"../../common/TextInput\";\nimport MembersForm from \"../../Forms/MembersForm\";\n\ninterface Props {\n  project?: ProjectDetails | null;\n  handleClose: () => void;\n}\n\nexport default function ProjectForm({ project, handleClose }: Props) {\n  const [projectId, setProjectId] = useState<string | null>(null);\n  const [members, setMembers] = useState<CreateMember[]>([]);\n  const isEdit = !!project;\n  const isMobile = useMediaQuery(\"(max-width: 1024px)\");\n\n  const {\n    control,\n    watch,\n    handleSubmit,\n    reset,\n    formState: { isSubmitting, isDirty },\n  } = useForm({\n    mode: \"all\",\n    //resolver: yupResolver<any>(productValidation)\n  });\n\n  const watchFile = watch(\"file\", null);\n  const dispatch = useAppDispatch();\n\n  async function handleSubmitData(data: FieldValues) {\n    const item: any = { id: project?.id ?? 0, ...data };\n    const hasChanged =\n      project &&\n      (project.title !== item.title ||\n        project.description !== item.description ||\n        item.file !== null);\n    console.log(hasChanged);\n\n    try {\n      if (isEdit && hasChanged) {\n        const result = await agent.Projects.update(item);\n        dispatch(updateProject({ id: project.id, changes: { ...result } }));\n      }\n\n      if (!isEdit) {\n        const result = await agent.Projects.create(item);\n        dispatch(setProject(result));\n        setProjectId(result.id);\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n    }\n  }\n\n  useEffect(() => {\n    if (project) {\n      setProjectId(project.id);\n      if (!watchFile && !isDirty) {\n        const item = {\n          title: project.title,\n          description: project.description,\n        };\n        reset(item, { keepTouched: true });\n      }\n    }\n\n    return () => {\n      if (watchFile) URL.revokeObjectURL(watchFile.preview);\n    };\n  }, [reset, watchFile, isDirty, project]);\n\n  return (\n    <div className=\"w-screen min-h-screen h-full py-16 bg-slate-100\">\n      <div className=\"container mx-auto px-5\">\n        <div className=\"container mx-auto py-5 border-b-2 border-b-black px-5 lg:px-0 \">\n          <p className=\" font-Oswald text-5xl\">\n            {isSubmitting\n              ? \"Please wait\"\n              : isEdit\n              ? \"Edit Project\"\n              : \"New Project\"}\n          </p>\n        </div>\n\n        <div>\n          <form className=\"py-10\">\n            <div className=\"grid lg:grid-cols-2 gap-10\">\n              <div className=\"flex flex-col gap-y-5 max-w-xl w-full mx-auto\">\n                <p className=\"font-Oswald text-3xl font-thin pb-4\">\n                  Project Info\n                </p>\n                <AppTextInput\n                  control={control}\n                  name=\"title\"\n                  label=\"Title\"\n                  placeholder=\"Title\"\n                  rules={{ required: \"Title is required\" }}\n                  fullWidth={!isMobile}\n                />\n                <AppTextArea\n                  name=\"description\"\n                  placeholder=\"Description\"\n                  label=\"Description\"\n                  fullWidth={!isMobile}\n                  rows={7}\n                  control={control}\n                  rules={{ required: \"Description is required\" }}\n                />\n\n                <div className=\"h-auto border-x-2 p-5  border-x-black  bg-slate-200 flex-auto\">\n                  <MediaDropZone control={control} name=\"file\" />\n                </div>\n\n                <div className=\"flex flex-row h-full w-full border-x-2 px-5 border-x-black  bg-slate-200\">\n                  <div className=\" mx-auto flex items-center justify-center\">\n                    {watchFile ? (\n                      <img\n                        className=\" object-auto w-auto object-center max-h-[200px]\"\n                        src={watchFile.preview}\n                        alt=\"preview\"\n                      />\n                    ) : (\n                      <img\n                        className=\" object-auto w-auto object-center max-h-[200px]\"\n                        src={project?.photo}\n                        alt={project?.title}\n                      />\n                    )}\n                  </div>\n                </div>\n              </div>\n\n              <div>\n                <p className=\"font-Oswald text-3xl font-thin pb-4\">Members</p>\n                <MembersForm\n                  projectId={projectId!}\n                  isEdit={isEdit}\n                  members={members}\n                  setMembers={setMembers}\n                />\n              </div>\n            </div>\n            <div className=\"flex flex-row gap-x-0 mx-auto w-full justify-center py-10\">\n              <input\n                className=\"cursor-pointer border-slate-800 border-2 text-slate-800 py-1 px-5 uppercase font-Oswald text-xl font-thin\"\n                type=\"button\"\n                value=\"Cancel\"\n                onClick={() => handleClose()}\n              />\n              <input\n                className=\"cursor-pointer bg-slate-800 text-white py-1 px-5 uppercase font-Oswald text-xl font-thin\"\n                type=\"submit\"\n                value={isEdit ? \"Update Project\" : \"Create Project\"}\n              />\n            </div>\n          </form>\n        </div>\n      </div>\n      {/* <div className=\"flex-auto my-auto mx-auto\">\n        <div className=\"container mx-auto py-5 border-b-2 border-b-black px-5 lg:px-0 \">\n          <p className=\" font-Oswald text-5xl\">\n            {isSubmitting\n              ? \"Please wait\"\n              : isEdit\n              ? \"Edit Project\"\n              : \"New Project\"}\n          </p>\n\n          <div>\n            <p className=\"font-Oswald text-3xl font-thin pb-4\">Project Info</p>\n          </div>\n        </div> */}\n\n      {/* <div className=\"my-auto h-full flex-auto\">\n          <div className=\"container mx-auto pt-16\">\n            <form onSubmit={handleSubmit(handleSubmitData)}>\n              <div className=\"grid grid-cols-1 lg:grid-cols-1 mx-auto w-full gap-10 px-5 lg:px-0 border-black\">\n                <div className=\" w-full flex flex-col h-full\">\n                  <p className=\"font-Oswald text-3xl font-thin pb-4\">\n                    Project Info\n                  </p>\n\n                  <div className=\" flex flex-col gap-y-5\">\n                    <div>\n                      <AppTextInput\n                        control={control}\n                        name=\"title\"\n                        label=\"Title\"\n                        placeholder=\"Title\"\n                        rules={{ required: \"Title is required\" }}\n                        fullWidth={!isMobile}\n                      />\n                    </div>\n\n                    <div className=\"flex-auto\">\n                      <AppTextArea\n                        name=\"description\"\n                        placeholder=\"Description\"\n                        label=\"Description\"\n                        fullWidth={!isMobile}\n                        rows={7}\n                        control={control}\n                        rules={{ required: \"Description is required\" }}\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"w-full flex flex-col h-full\">\n                  <p className=\"font-Oswald text-3xl font-thin pb-4 flex-initial\">\n                    Project Image\n                  </p>\n                  <div className=\"flex flex-col gap-y-5\">\n                    <div className=\"h-auto border-x-2 p-5  border-x-black  bg-slate-200 flex-auto\">\n                      <MediaDropZone control={control} name=\"file\" />\n                    </div>\n                    <div className=\"flex flex-row h-full w-full border-x-2 px-5 border-x-black  bg-slate-200\">\n                      <div className=\" mx-auto flex items-center justify-center\">\n                        {watchFile ? (\n                          <img\n                            className=\" object-auto w-auto object-center max-h-[200px]\"\n                            src={watchFile.preview}\n                            alt=\"preview\"\n                          />\n                        ) : (\n                          <img\n                            className=\" object-auto w-auto object-center max-h-[200px]\"\n                            src={project?.photo}\n                            alt={project?.title}\n                          />\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"w-full flex flex-col h-full\">\n                  <p className=\"font-Oswald text-3xl font-thin pb-4\">\n                    Image Preview\n                  </p>\n                  <div className=\"flex flex-row h-full w-full border-x-2 px-5 border-x-black  bg-slate-200\">\n                    <div className=\" mx-auto flex items-center justify-center\">\n                      {watchFile ? (\n                        <img\n                          className=\" object-auto w-auto object-center max-h-[200px]\"\n                          src={watchFile.preview}\n                          alt=\"preview\"\n                        />\n                      ) : (\n                        <img\n                          className=\" object-auto w-auto object-center max-h-[200px]\"\n                          src={project?.photo}\n                          alt={project?.title}\n                        />\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"py-5\">\n                <MembersForm\n                  projectId={projectId!}\n                  isEdit={isEdit}\n                  members={members}\n                  setMembers={setMembers}\n                />\n              </div>\n\n              <div className=\"flex flex-row gap-x-0 mx-auto w-full justify-center py-10\">\n                <input\n                  className=\"cursor-pointer border-slate-800 border-2 text-slate-800 py-1 px-5 uppercase font-Oswald text-xl font-thin\"\n                  type=\"button\"\n                  value=\"Cancel\"\n                  onClick={() => handleClose()}\n                />\n                <input\n                  className=\"cursor-pointer bg-slate-800 text-white py-1 px-5 uppercase font-Oswald text-xl font-thin\"\n                  type=\"submit\"\n                  value={isEdit ? \"Update Project\" : \"Create Project\"}\n                />\n              </div>\n            </form>\n          </div>\n\n         \n        </div> */}\n    </div>\n  );\n}\n","import { PencilAltIcon, TrashIcon } from \"@heroicons/react/solid\";\nimport { lazy, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport agent from \"../../api/agent\";\nimport LoadingComponent from \"../../components/common/LoadingComponent\";\nimport ProjectForm from \"../../components/projects/projectDetails/ProjectForm\";\nimport { ProjectDetails } from \"../../models/project\";\nimport { useAppSelector } from \"../../store/configureStore\";\n\nconst ProjectHeader = lazy(\n  () => import(\"../../components/projects/projectDetails/ProjectHeader\")\n);\nconst ProjectInfo = lazy(\n  () => import(\"../../components/projects/projectDetails/ProjectInfo\")\n);\n\nconst ProjectPhases = lazy(\n  () => import(\"../../components/projects/projectDetails/ProjectPhases\")\n);\n\nconst ProjectMembers = lazy(\n  () => import(\"../../components/projects/projectDetails/ProjectMembers\")\n);\n\nconst ProjectTickets = lazy(\n  () => import(\"../../components/projects/projectDetails/ProjectTickets\")\n);\n\nconst ProjectActions = lazy(\n  () => import(\"../../components/projects/projectDetails/ProjectActions\")\n);\n\nexport default function ProjectDetailsPage() {\n  const { user } = useAppSelector((state) => state.account);\n  const { slug } = useParams<{ slug: string }>();\n  const [project, setProject] = useState<ProjectDetails | undefined>(undefined);\n  const [loading, setLoading] = useState(false);\n  const [isPermitted, setIsPermitted] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n\n  useEffect(() => {\n    if (user && project) {\n      setIsPermitted(user.roles.includes(\"Admin\") || project.isLeader);\n    }\n  }, [project, user]);\n\n  useEffect(() => {\n    setLoading(true);\n    if (slug) {\n      agent.Projects.details(slug)\n        .then((response) => {\n          setProject(response);\n        })\n        .catch((err) => console.log(err))\n        .finally(() => setLoading(false));\n    }\n    return () => {\n      setProject(undefined);\n    };\n  }, [slug]);\n\n  if (loading)\n    return <LoadingComponent message=\"Loading Project, please wait...\" />;\n  if (!project)\n    return (\n      <div className=\"py-20 w-screen h-screen bg-slate-300 flex items-center justify-center\">\n        <p className=\" font-Montserrat text-xl\">Cant find Project</p>\n      </div>\n    );\n\n  if (isEdit)\n    return (\n      <ProjectForm project={project} handleClose={() => setIsEdit(false)} />\n    );\n\n  return (\n    <div className=\" w-full h-full min-h-screen bg-slate-100 pt-16 lg:pt-20\">\n      <div className=\"container mx-auto flex flex-col gap-y-5 py-10\">\n        <div className=\"px-5 flex flex-row justify-end items-start gap-x-5 py-3\">\n          <button\n            className=\"flex flex-row gap-x-2 items-center\"\n            onClick={() => setIsEdit(true)}\n          >\n            <PencilAltIcon className=\"h-6 w-6\" />\n            <p className=\" font-Oswald text-lg font-thin uppercase\">Edit</p>\n          </button>\n\n          <button\n            className=\"flex flex-row gap-x-2 items-center\"\n            onClick={() => {}}\n          >\n            <TrashIcon className=\"h-6 w-6 text-red-600\" />\n            <p className=\" font-Oswald text-lg font-thin uppercase\">Delete</p>\n          </button>\n        </div>\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-5\">\n          <div className=\" w-full h-full px-5 py-10 lg:p-10 bg-white text-black drop-shadow-md\">\n            <ProjectHeader project={project} />\n          </div>\n\n          <div className=\" w-full h-auto px-5 py-10 lg:p-10 bg-white text-black drop-shadow-md\">\n            <ProjectInfo project={project} />\n          </div>\n          <div className=\" w-full h-auto px-5 py-10 lg:p-10 bg-white text-black drop-shadow-md\">\n            <ProjectMembers projectId={project.id} />\n          </div>\n        </div>\n\n        <div className=\" w-full py-10 lg:p-10 bg-white text-black drop-shadow-md h-auto\">\n          <ProjectPhases\n            projectId={project.id}\n            projectSlug={project.slug}\n            isPermitted={isPermitted}\n          />\n        </div>\n        <div className=\" w-full py-10 lg:p-10 bg-white text-black drop-shadow-md h-auto\">\n          <ProjectActions\n            projectId={project.id}\n            projectSlug={project.slug}\n            isPermitted={isPermitted}\n          />\n        </div>\n        <div className=\" w-full py-10 lg:p-10 bg-white text-black drop-shadow-md h-auto\">\n          <ProjectTickets\n            projectId={project.id}\n            projectSlug={project.slug}\n            isPermitted={isPermitted}\n          />\n        </div>\n      </div>\n    </div>\n    // <div className=\"h-full min-h-screen w-screen bg-slate-300 pb-10 pt-16 lg:pt-20  flex\">\n    //   <div className=\"lg:container lg:px-5 mx-auto flex flex-col rounded-md overflow-hidden flex-auto\">\n    //     <div className=\"flex-auto w-full flex flex-col  gap-y-5 lg:gap-y-0 lg:flex-row h-auto\">\n    //       <div className=\"relative py-10 px-5 lg:px-0 lg:py-5 w-full lg:w-1/3 bg-slate-700 lg:rounded-md overflow-hidden text-white flex flex-col\">\n    //         {isPermitted && (\n    //           <div className=\"absolute top-0 right-0 w-full flex justify-end p-1 \">\n    //             <button\n    //               title=\"edit members\"\n    //               className=\" ml-auto font-Montserrat text-sm uppercase h-12 w-12 m-3  lg:py-1 lg:px-2 text-white rounded-md\"\n    //               type=\"button\"\n    //               onClick={() => setIsEdit((prev) => !prev)}\n    //             >\n    //               <PencilAltIcon className=\"h-8 w-8\" />\n    //             </button>\n    //           </div>\n    //         )}\n    //         <div className=\"lg:h-1/3\">\n    //           <ProjectHeader project={project} />\n    //         </div>\n    //         <div className=\"lg:h-1/3\">\n    //           <ProjectInfo project={project} />\n    //         </div>\n    //         <div className=\"lg:h-1/3\">\n    //           <ProjectMembers projectId={project.id} />\n    //         </div>\n    //       </div>\n    //       <div className=\" relative lg:w-2/3 lg:px-5\">\n    //         <div className=\"lg:h-1/3 \">\n    //           <ProjectPhases\n    //             projectId={project.id}\n    //             projectSlug={project.slug}\n    //             isPermitted={isPermitted}\n    //           />\n    //         </div>\n\n    //         <div className=\"lg:h-1/3  py-5\">\n    //           <ProjectTickets\n    //             projectId={project.id}\n    //             projectSlug={project.slug}\n    //             isPermitted={isPermitted}\n    //           />\n    //         </div>\n\n    //         <div className=\"lg:h-1/3 \">\n    //           <ProjectActions\n    //             projectId={project.id}\n    //             projectSlug={project.slug}\n    //             isPermitted={isPermitted}\n    //           />\n    //         </div>\n    //       </div>\n    //     </div>\n    //   </div>\n    // </div>\n  );\n}\n","import * as React from \"react\";\n\nfunction PencilAltIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(PencilAltIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction TrashIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(TrashIcon);\nexport default ForwardRef;"],"names":["styles","AppTextArea","props","useController","defaultValue","fieldState","field","className","fullWidth","error","label","type","message","AppTextInput","React","svgRef","Object","assign","xmlns","viewBox","fill","ref","fillRule","d","clipRule","MembersForm","isEdit","projectId","members","setMembers","useState","users","setUsers","usersLoaded","setUsersLoaded","setLoading","addedMembers","useEffect","agent","then","response","catch","err","console","log","finally","length","map","user","displayName","title","userId","id","some","m","onClick","ProjectForm","project","handleClose","setProjectId","isMobile","useMediaQuery","useForm","mode","control","watch","reset","handleSubmit","formState","isSubmitting","isDirty","watchFile","useAppDispatch","item","description","keepTouched","URL","revokeObjectURL","preview","name","placeholder","rules","required","rows","MediaDropZone","src","alt","photo","value","ProjectHeader","lazy","ProjectInfo","ProjectPhases","ProjectMembers","ProjectTickets","ProjectActions","ProjectDetailsPage","useAppSelector","state","account","slug","useParams","undefined","setProject","loading","isPermitted","setIsPermitted","setIsEdit","roles","includes","isLeader","projectSlug","ForwardRef"],"sourceRoot":""}