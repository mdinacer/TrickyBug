{"version":3,"file":"static/js/852.e4cb6787.chunk.js","mappings":"+LAKMA,GAAcC,EAAAA,EAAAA,OAAK,kBAAM,iCAMhB,SAASC,EAAT,GAA+C,IAArBC,EAAoB,EAApBA,UACvC,GAA8BC,EAAAA,EAAAA,UAA0B,IAAxD,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAUR,OATIN,IAAcI,GAChBG,EAAAA,EAAAA,SAAAA,YAA2BP,GACxBQ,MAAK,SAACC,GACLN,EAAWM,MAEZC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAC3BG,SAAQ,kBAAMT,GAAU,MAGtB,WACLF,EAAW,OAEZ,CAACC,EAAQJ,KAGV,iBAAKe,UAAU,qDAAf,WACE,cAAGA,UAAU,mEAAb,kBAGCb,EAAQc,OAAS,GAChB,SAACnB,EAAD,CAAaK,QAASA,KAEtB,cAAGa,UAAU,6BAAb","sources":["app/components/projects/projectDetails/ProjectMembers.tsx"],"sourcesContent":["import { PencilIcon } from \"@heroicons/react/solid\";\nimport { lazy, useEffect, useState } from \"react\";\nimport agent from \"../../../api/agent\";\nimport { ProjectMember } from \"../../../models/member\";\n\nconst MembersList = lazy(() => import(\"../../Members/MembersList\"));\n\ninterface Props {\n  projectId: string;\n}\n\nexport default function ProjectMembers({ projectId }: Props) {\n  const [members, setMembers] = useState<ProjectMember[]>([]);\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    if (projectId && !loaded) {\n      agent.Projects.listMembers(projectId)\n        .then((response) => {\n          setMembers(response);\n        })\n        .catch((err) => console.log(err))\n        .finally(() => setLoaded(false));\n    }\n\n    return () => {\n      setMembers([]);\n    };\n  }, [loaded, projectId]);\n\n  return (\n    <div className=\"max-w-md mx-auto my-10 mt-auto flex-initial w-full\">\n      <p className=\"font-Oswald text-3xl pb-4 font-thin uppercase underline-offset-2\">\n        Team\n      </p>\n      {members.length > 0 ? (\n        <MembersList members={members} />\n      ) : (\n        <p className=\" font-Montserrat text-base\">The members list is empty</p>\n      )}\n    </div>\n  );\n}\n"],"names":["MembersList","lazy","ProjectMembers","projectId","useState","members","setMembers","loaded","setLoaded","useEffect","agent","then","response","catch","err","console","log","finally","className","length"],"sourceRoot":""}