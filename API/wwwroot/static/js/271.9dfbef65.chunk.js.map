{"version":3,"file":"static/js/271.9dfbef65.chunk.js","mappings":"yMAMMA,GAAcC,EAAAA,EAAAA,OAAK,kBAAM,yDACzBC,GAAaD,EAAAA,EAAAA,OAAK,kBAAM,iCAQf,SAASE,EAAT,GAIJ,IAHTC,EAGQ,EAHRA,UACAC,EAEQ,EAFRA,YACAC,EACQ,EADRA,YAEA,GAA8BC,EAAAA,EAAAA,UAA0B,IAAxD,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA4BJ,EAAAA,EAAAA,WAAS,GAArC,eAAOK,EAAP,KAAeC,EAAf,KAEMC,GAAqBC,EAAAA,EAAAA,cAAY,WACrCC,EAAAA,EAAAA,SAAAA,kBAAiCZ,GAC9Ba,MAAK,SAACC,GACLT,EAAWS,MAEZC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAC3BG,SAAQ,kBAAMZ,GAAU,QAC1B,CAACP,KAEJoB,EAAAA,EAAAA,YAAU,WAIR,OAHIpB,IAAcM,GAChBI,IAEK,WACLL,EAAW,OAEZ,CAACK,EAAoBJ,EAAQN,IAOhC,OAAIQ,GAAUR,GACL,SAACF,EAAD,CAAYE,UAAWA,EAAWqB,QANrB,WACpBX,IACAD,GAAU,OAMV,iBAAKa,UAAU,gDAAf,WACE,iBAAKA,UAAU,mFAAf,WACE,cAAGA,UAAU,yDAAb,6BAGA,iBAAKA,UAAU,mCAAf,UACGrB,IACC,mBACEsB,QAAS,kBAAMd,GAAU,IACzBa,UAAU,oCACVE,KAAK,SAHP,UAKE,cAAGF,UAAU,0CAAb,2BAKJ,SAAC,KAAD,CACEA,UAAU,oCACVG,GAAI,CACFC,SAAS,aAAD,OAAexB,EAAf,aAHZ,UAME,cAAGoB,UAAU,0CAAb,mCAMN,gBAAKA,UAAU,OAAf,SACGlB,EAAQuB,OAAS,GAChB,SAAC/B,EAAD,CAAaQ,QAASA,KAEtB,gBAAKkB,UAAU,+CAAf,UACE,cAAGA,UAAU,wCAAb","sources":["app/components/projects/projectDetails/ProjectTickets.tsx"],"sourcesContent":["import { lazy, useCallback, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport agent from \"../../../api/agent\";\nimport { ProjectTicket } from \"../../../models/ticket\";\n//import TicketForm from \"../../Tickets/TicketForm\";\n\nconst TicketsList = lazy(() => import(\"../../Tickets/TicketsList\"));\nconst TicketForm = lazy(() => import(\"../../Tickets/TicketForm\"));\n\ninterface Props {\n  projectId: string;\n  projectSlug: string;\n  isPermitted: boolean;\n}\n\nexport default function ProjectRecentTickets({\n  projectId,\n  isPermitted,\n  projectSlug,\n}: Props) {\n  const [tickets, setTickets] = useState<ProjectTicket[]>([]);\n  const [loaded, setLoaded] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const loadProjectTickets = useCallback(() => {\n    agent.Projects.listRecentTickets(projectId)\n      .then((response) => {\n        setTickets(response);\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setLoaded(false));\n  }, [projectId]);\n\n  useEffect(() => {\n    if (projectId && !loaded) {\n      loadProjectTickets();\n    }\n    return () => {\n      setTickets([]);\n    };\n  }, [loadProjectTickets, loaded, projectId]);\n\n  const handleOnClose = () => {\n    loadProjectTickets();\n    setIsOpen(false);\n  };\n\n  if (isOpen && projectId)\n    return <TicketForm projectId={projectId} onClose={handleOnClose} />;\n  return (\n    <div className=\"relative h-full flex flex-col overflow-hidden\">\n      <div className=\"flex-initial flex flex-col lg:flex-row lg:items-end justify-between px-5 lg:px-0\">\n        <p className=\"font-Oswald text-3xl font-thin uppercase leading-loose\">\n          Recent Tickets\n        </p>\n        <div className=\"flex flex-row self-start gap-x-2\">\n          {isPermitted && (\n            <button\n              onClick={() => setIsOpen(true)}\n              className=\"px-2 py-1 bg-slate-600 text-white\"\n              type=\"button\"\n            >\n              <p className=\"font-Oswald text-lg font-thin uppercase\">\n                Add Ticket\n              </p>\n            </button>\n          )}\n          <Link\n            className=\"px-2 py-1 bg-slate-600 text-white\"\n            to={{\n              pathname: `/projects/${projectSlug}/tickets`,\n            }}\n          >\n            <p className=\"font-Oswald text-lg font-thin uppercase\">\n              View Tickets\n            </p>\n          </Link>\n        </div>\n      </div>\n      <div className=\"px-5\">\n        {tickets.length > 0 ? (\n          <TicketsList tickets={tickets} />\n        ) : (\n          <div className=\"h-40 w-full flex items-center justify-center\">\n            <p className=\"font-Montserrat text-xl text-gray-400\">EMPTY</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":["TicketsList","lazy","TicketForm","ProjectRecentTickets","projectId","isPermitted","projectSlug","useState","tickets","setTickets","loaded","setLoaded","isOpen","setIsOpen","loadProjectTickets","useCallback","agent","then","response","catch","err","console","log","finally","useEffect","onClose","className","onClick","type","to","pathname","length"],"sourceRoot":""}