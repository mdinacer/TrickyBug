{"version":3,"file":"static/js/537.a2c02b54.chunk.js","mappings":"iRAEaA,EAAwBC,EAAAA,GAAW,CAE5CC,MAAOD,EAAAA,KAAaC,QAAQC,SAAS,qBACrCC,SAAUH,EAAAA,KAELE,SAAS,0B,SCCH,SAASE,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACTC,GAAsBC,EAAAA,EAAAA,MAAtBD,MACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAQ,CACvBC,KAAM,MACNC,UAAUC,EAAAA,EAAAA,GAAYhB,KAGtBiB,EAIEL,EAJFK,SACAC,EAGEN,EAHFM,SACAC,EAEEP,EAFFO,aAHF,EAKIP,EADFQ,UAAaC,EAJf,EAIeA,aAAcC,EAJ7B,EAI6BA,QAZK,wCAelC,WAA0BC,GAA1B,kGAEUjB,GAASkB,EAAAA,EAAAA,IAAWD,IAF9B,OAGUE,GAAY,OAALjB,QAAK,IAALA,GAAA,UAAAA,EAAOiB,YAAP,eAAaC,WAAY,IACtChB,EAASe,GAJb,gDAMIE,QAAQC,IAAR,MANJ,0DAfkC,sBAgClC,OAPAC,EAAAA,EAAAA,YAAU,WACR,IAAM3B,EAAK,OAAGM,QAAH,IAAGA,OAAH,EAAGA,EAAON,MACjBA,GACFe,EAAS,QAASf,KAEnB,CAACe,EAAD,OAAWT,QAAX,IAAWA,OAAX,EAAWA,EAAON,SAGnB,gBAAK4B,UAAU,2DAAf,UACE,gBAAKA,UAAU,qGAAf,UACE,iBAAKA,UAAU,mBAAf,WACE,cAAGA,UAAU,mDAAb,sBAIA,kBACEC,SAAUZ,GAzCc,8CA0CxBW,UAAU,gCAFZ,WAIE,kBACEA,UAAU,8CACVE,QAAQ,aAFV,oBAMA,0BACEC,aAAa,MACbC,GAAG,aACHC,KAAM,QACNC,YAAY,kBACZN,UAAU,6DACNZ,EAAS,YAGf,kBACEY,UAAU,8CACVE,QAAQ,gBAFV,uBAOA,0BACEE,GAAG,gBACHC,KAAM,WACNC,YAAY,qBACZN,UAAU,wDACNZ,EAAS,eAGf,kBACEY,UAAS,UACPR,EAAU,gBAAkB,gBADrB,8EAGTa,KAAK,SACLE,UAAWf,EACXgB,MAAOjB,EAAe,cAAgB,cAG1C,SAAC,KAAD,CACEkB,GAAIC,EACJV,UAAU,2CAFZ,UAIE,cAAGA,UAAU,4BAAb,sDAUZ,IAAMU,EAAe","sources":["app/pages/account/loginValidation.ts","app/pages/account/LoginPage.tsx"],"sourcesContent":["import * as yup from \"yup\";\n\nexport const loginValidationSchema = yup.object({\n\n    email: yup.string().email().required(\"Email is required\"),\n    password: yup\n        .string()\n        .required(\"Password is required\")\n    ,\n});\n","import { yupResolver } from \"@hookform/resolvers/yup/dist/yup\";\nimport { useEffect } from \"react\";\nimport { FieldValues, useForm } from \"react-hook-form\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport { signInUser } from \"../../slices/accountSlice\";\nimport { useAppDispatch } from \"../../store/configureStore\";\nimport { loginValidationSchema } from \"./loginValidation\";\n\nexport default function LoginPage() {\n  const dispatch = useAppDispatch();\n  const { state }: any | null = useLocation();\n  const navigate = useNavigate();\n  const newLocal = useForm({\n    mode: \"all\",\n    resolver: yupResolver(loginValidationSchema),\n  });\n  const {\n    setValue,\n    register,\n    handleSubmit,\n    formState: { isSubmitting, isValid },\n  } = newLocal;\n\n  async function submitForm(data: FieldValues) {\n    try {\n      await dispatch(signInUser(data));\n      const from = state?.from?.pathname || \"/\";\n      navigate(from);\n    } catch (error: any) {\n      console.log(error);\n    }\n  }\n\n  useEffect(() => {\n    const email = state?.email;\n    if (email) {\n      setValue(\"email\", email);\n    }\n  }, [setValue, state?.email]);\n\n  return (\n    <div className=\"py-20 h-screen w-screen flex items-center justify-center\">\n      <div className=\"h-auto p-20 w-full max-w-xl bg-gray-300 drop-shadow-md rounded-md flex items-center justify-center\">\n        <div className=\"max-w-lg w-full \">\n          <p className=\" font-Oswald text-7xl text-center pb-5 uppercase\">\n            Sing In\n          </p>\n\n          <form\n            onSubmit={handleSubmit(submitForm)}\n            className=\"flex flex-col gap-y-2 mx-auto\"\n          >\n            <label\n              className=\"font-Montserrat text-sm uppercase font-bold\"\n              htmlFor=\"emailInput\"\n            >\n              Email\n            </label>\n            <input\n              autoComplete=\"off\"\n              id=\"emailInput\"\n              type={\"email\"}\n              placeholder=\"Type your email\"\n              className=\"max-w-md w-full py-2 px-5 rounded-md font-Montserrat mb-4\"\n              {...register(\"email\")}\n            />\n\n            <label\n              className=\"font-Montserrat text-sm uppercase font-bold\"\n              htmlFor=\"passwordInput\"\n            >\n              Password\n            </label>\n\n            <input\n              id=\"passwordInput\"\n              type={\"password\"}\n              placeholder=\"Type your password\"\n              className=\"max-w-md w-full py-2 px-5 rounded-md font-Montserrat\"\n              {...register(\"password\")}\n            />\n\n            <input\n              className={`${\n                isValid ? \"bg-orange-600\" : \"bg-orange-300\"\n              } text-white uppercase font-Montserrat font-bold  py-2 px-5 rounded-md my-5`}\n              type=\"submit\"\n              disabled={!isValid}\n              value={isSubmitting ? \"Please wait\" : \"Login\"}\n            />\n          </form>\n          <Link\n            to={registerPath}\n            className=\"underline underline-offset-2 text-center\"\n          >\n            <p className=\" font-Montserrat text-sm \">\n              Don't have an account!, Sign Up\n            </p>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst registerPath = \"/account/register\";\n"],"names":["loginValidationSchema","yup","email","required","password","LoginPage","dispatch","useAppDispatch","state","useLocation","navigate","useNavigate","newLocal","useForm","mode","resolver","yupResolver","setValue","register","handleSubmit","formState","isSubmitting","isValid","data","signInUser","from","pathname","console","log","useEffect","className","onSubmit","htmlFor","autoComplete","id","type","placeholder","disabled","value","to","registerPath"],"sourceRoot":""}