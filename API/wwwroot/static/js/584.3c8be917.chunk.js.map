{"version":3,"file":"static/js/584.3c8be917.chunk.js","mappings":"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","sources":["app/util/flattenObject.ts","app/components/Tickets/TicketForm.tsx","app/components/common/Dropdown.tsx","app/components/common/LabelItem.tsx","app/components/common/TextArea.tsx","app/components/common/TextInput.tsx","app/models/enums.ts","app/components/comments/CommentForm.tsx","app/components/comments/CommentsContainerHeader.tsx","app/components/comments/CommentsListItem.tsx","app/components/comments/CommentsList.tsx","app/components/comments/CommentsContainer.tsx","app/components/ticketDetails/TicketHeader.tsx","app/components/ticketDetails/TicketInfo.tsx","app/hooks/useComments.tsx","app/pages/Tickets/TicketDetailsPage.tsx","app/util/enumToArray.ts"],"sourcesContent":["export const flattenObj = (ob: any) => {\n\n    // The object which contains the\n    // final result\n    let result: any = {};\n\n    // loop through the object \"ob\"\n    for (const i in ob) {\n\n        // We check the type of the i using\n        // typeof() function and recursively\n        // call the function again\n        if ((typeof ob[i]) === 'object' && !Array.isArray(ob[i])) {\n            const temp = flattenObj(ob[i]);\n            for (const j in temp) {\n\n                // Store temp in result\n                result[i + '.' + j] = temp[j];\n            }\n        }\n\n        // Else store ob[i] in result directly\n        else {\n            result[i] = ob[i];\n        }\n    }\n    return result;\n};","import { useCallback, useEffect, useState } from \"react\";\nimport { FieldValues, useForm } from \"react-hook-form\";\nimport agent from \"../../api/agent\";\nimport {\n  IssueNature,\n  IssueOccurrence,\n  IssueSeverity,\n  TicketPriority,\n  TicketStatus,\n} from \"../../models/enums\";\nimport { ProjectMember } from \"../../models/member\";\nimport { Project } from \"../../models/project\";\nimport { ProjectTicketFull } from \"../../models/ticket\";\nimport { EnumToArray } from \"../../util/enumToArray\";\nimport { flattenObj } from \"../../util/flattenObject\";\nimport Dropdown from \"../common/Dropdown\";\nimport MediaDropZone from \"../common/MediaDropZone\";\nimport AppTextArea from \"../common/TextArea\";\nimport AppTextInput from \"../common/TextInput\";\n\ninterface Props {\n  projectId: string;\n  ticketId?: number | null;\n  isFullScreen?: boolean;\n  onClose: () => void;\n}\n\nexport default function TicketForm({ projectId, ticketId, onClose }: Props) {\n  const [ticket, setTicket] = useState<ProjectTicketFull | null>(null);\n  const isEdit = !!ticket;\n  const [project, setProject] = useState<Project | null>(null);\n  const projectLoaded = !!project;\n  const [members, setMembers] = useState<{ name: string; value: string }[]>([]);\n  const {\n    control,\n    watch,\n    handleSubmit,\n    reset,\n    setValue,\n    formState: { isDirty },\n  } = useForm({\n    mode: \"all\",\n  });\n  const watchFile = watch(\"file\", null);\n  const loadMembers = useCallback(async (id: string) => {\n    try {\n      const result = await agent.Projects.listMembers(id);\n      const items = result.map((member: ProjectMember) => ({\n        name: member.userName,\n        value: member.userId,\n      }));\n      setMembers(items);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  const loadProject = useCallback(\n    async (id: string) => {\n      try {\n        const project = await agent.Projects.detailsById(id);\n        setProject(project);\n        setValue(\"projectId\", project.id);\n        await loadMembers(project.id);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    [loadMembers, setValue]\n  );\n\n  const loadTicket = useCallback(async (id: number) => {\n    try {\n      const result = await agent.Tickets.details(id);\n      setTicket(result);\n      console.log(\"ticket\", result);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (projectId) {\n      loadProject(projectId);\n    }\n  }, [loadProject, projectId]);\n\n  useEffect(() => {\n    if (ticketId) {\n      loadTicket(ticketId);\n    }\n  }, [loadTicket, ticketId]);\n\n  useEffect(() => {\n    if (ticket && !watchFile && !isDirty) {\n      reset(ticket);\n    }\n\n    return () => {\n      if (watchFile) URL.revokeObjectURL(watchFile.preview);\n    };\n  }, [isDirty, reset, ticket, watchFile]);\n\n  const handleOnChange = (name: any, value: any) => {\n    setValue(name, value);\n  };\n\n  async function handleSubmitData(data: FieldValues) {\n    if (!projectLoaded) return;\n    const { file, description } = data; //{ ...data, projectId: project.id };\n\n    const obj = {\n      id: ticket ? ticket.id : 0,\n      subject: data.subject,\n      body: data.body,\n      priority: data.priority,\n      projectId: project.id,\n      status: data.status,\n      assignedMemberId: data.assignedMemberId,\n      description,\n    };\n\n    const flatObj = { ...flattenObj(obj), \"description.file\": file };\n    if (!project) return;\n    try {\n      if (isEdit) {\n        await agent.Tickets.update(flatObj);\n      }\n\n      if (!isEdit) {\n        await agent.Tickets.create(flatObj);\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      onClose();\n    }\n  }\n\n  return (\n    <div className=\"lg:fixed top-0 left-0 h-full min-h-screen w-screen bg-slate-500 z-[5] px-5 lg:px-0 flex items-center  py-20\">\n      <div className=\"container mx-auto flex flex-col text-white max-w-4xl\">\n        <div className=\"flex flex-col lg:flex-row justify-between border-b border-b-white py-1 lg:items-end \">\n          <p className=\"font-Oswald text-5xl uppercase\">\n            {isEdit ? \"Edit Ticket\" : \"New Ticket\"}\n          </p>\n          <p className=\"font-Oswald text-xl uppercase font-thin\">\n            {project?.title}\n          </p>\n        </div>\n\n        <form\n          onSubmit={handleSubmit(handleSubmitData)}\n          className=\"w-full flex flex-col gap-y-5\"\n        >\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 text-black  lg:gap-x-10\">\n            <div className=\"flex flex-col gap-y-5 py-5\">\n              <AppTextInput\n                type=\"text\"\n                control={control}\n                label=\"Ticket Title\"\n                placeholder=\"Ticket Title\"\n                name=\"subject\"\n                fullWidth\n                rules={{\n                  required: \"Subject is required\",\n                }}\n              />\n              <AppTextInput\n                type=\"text\"\n                control={control}\n                label=\"Operating System\"\n                placeholder=\"Operating System\"\n                name=\"description.operatingSystem\"\n                fullWidth\n              />\n\n              <AppTextInput\n                type=\"text\"\n                control={control}\n                label=\"Browser\"\n                placeholder=\"Browser\"\n                name=\"description.browser\"\n                fullWidth\n              />\n\n              <AppTextArea\n                rows={4}\n                type=\"text\"\n                control={control}\n                label=\"Ticket Description\"\n                placeholder=\"Ticket Description\"\n                name=\"body\"\n                fullWidth\n                rules={{\n                  required: \"Description is required\",\n                }}\n              />\n            </div>\n            <div className=\"flex flex-col gap-y-5 py-5\">\n              <div className=\" w-full flex flex-col  gap-y-5 \">\n                <Dropdown\n                  title=\"Priority\"\n                  fullWidth\n                  items={EnumToArray(TicketPriority)}\n                  onChange={(value) => handleOnChange(\"priority\", value)}\n                  selectedValue={ticket?.priority}\n                />\n                {isEdit && (\n                  <Dropdown\n                    title=\"Status\"\n                    fullWidth\n                    items={EnumToArray(TicketStatus)}\n                    onChange={(value) => handleOnChange(\"status\", value)}\n                    selectedValue={ticket?.status}\n                  />\n                )}\n                {isEdit && (\n                  <Dropdown\n                    title=\"Assigned Member\"\n                    fullWidth\n                    items={members}\n                    onChange={(value) =>\n                      handleOnChange(\"assignedMemberId\", value)\n                    }\n                    selectedValue={ticket?.assignedMember}\n                  />\n                )}\n                <Dropdown\n                  title=\"Occurrence\"\n                  fullWidth\n                  items={EnumToArray(IssueOccurrence)}\n                  onChange={(value) =>\n                    handleOnChange(\"description.occurrence\", value)\n                  }\n                  selectedValue={ticket?.description.occurrence}\n                />\n                <Dropdown\n                  title=\"Severity\"\n                  fullWidth\n                  items={EnumToArray(IssueSeverity)}\n                  onChange={(value) =>\n                    handleOnChange(\"description.severity\", value)\n                  }\n                  selectedValue={ticket?.description.severity}\n                />\n                <Dropdown\n                  title=\"Nature\"\n                  fullWidth\n                  items={EnumToArray(IssueNature)}\n                  onChange={(value) =>\n                    handleOnChange(\"description.nature\", value)\n                  }\n                  selectedValue={ticket?.description.nature}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-x-10 lg:h-[200px]\">\n            <div className=\"h-auto border-x-2 px-5 py-5 border-x-white text-white bg-slate-500 bg-opacity-50 flex-auto\">\n              <MediaDropZone control={control} name=\"file\" />\n            </div>\n            <div className=\"flex flex-row h-full w-full border-x-2 px-5 border-x-white text-white bg-slate-500 bg-opacity-50\">\n              <div className=\" mx-auto flex items-center justify-center\">\n                {watchFile ? (\n                  <img\n                    className=\" object-auto w-auto object-center max-h-[200px]\"\n                    src={watchFile.preview}\n                    alt=\"preview\"\n                  />\n                ) : (\n                  <img\n                    className=\" object-auto w-auto object-center max-h-[200px]\"\n                    src={ticket?.description.photo}\n                    alt={ticket?.subject}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-row gap-x-0 mx-auto w-full justify-center lg:justify-end py-5\">\n            <input\n              className=\"cursor-pointer border-slate-800 border-2 text-slate-800 py-1 px-5 uppercase font-Oswald text-xl font-thin\"\n              type=\"button\"\n              value=\"Cancel\"\n              onClick={onClose}\n            />\n            <input\n              className=\"cursor-pointer bg-slate-800 text-white py-1 px-5 uppercase font-Oswald text-xl font-thin\"\n              type=\"submit\"\n              value={isEdit ? \"Update Ticket\" : \"Create Ticket\"}\n            />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import { ChevronDownIcon } from \"@heroicons/react/solid\";\nimport { useEffect, useState } from \"react\";\n\ninterface Props {\n  title: string;\n  items: { name: string; value: string | number }[];\n  fullWidth?: boolean;\n  onChange: (value: any) => void;\n  selectedValue: any;\n  addAllItem?: boolean;\n}\n\nconst styles = {\n  dropdownContainer: \"relative border-x-2 border-x-slate-200 bg-slate-200\",\n  dropdownButton:\n    \"pb-2 pt-3 px-5 font-Oswald font-thin inline-flex justify-between items-center w-full\",\n  dropdownButtonText:\n    \"flex flex-row items-center justify-between w-full gap-x-5 text-lg lg:text-2xl\",\n  dropdownButtonPlaceholder: \"text-lg lg:text-2xl text-gray-400\",\n  inputValidationStyle:\n    \"h-auto font-Oswald text-lg leading-none w-full font-thin px-5 py-0 text-gray-600\",\n  dropdownButtonIcon: \"w-8 h-8 ml-2 text-inherit\",\n  dropdownListContainer:\n    \"absolute bg-white text-base z-50 drop-shadow-md list-none divide-y  divide-gray-100 rounded shadow my-4  w-full px-5\",\n  dropdownList: \"py-5 list-none flex flex-col gap-y-2 font-Montserrat\",\n  dropdownListItem:\n    \"font-Montserrat text-left text-black text-lg font-thin cursor-pointer\",\n};\n\nexport default function Dropdown({\n  title,\n  items,\n  fullWidth = false,\n  onChange,\n  selectedValue,\n}: Props) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState<{\n    name: string;\n    value: string | number;\n  } | null>(null);\n\n  useEffect(() => {\n    if (selectedValue && selectedItem == null) {\n      const item = items.find((i) => i.name === selectedValue);\n      setSelectedItem(item ? item : null);\n    }\n  }, [items, selectedItem, selectedValue]);\n\n  type ItemType = { name: string; value: string | number };\n\n  const handleOnSelectItem = (item: ItemType) => {\n    setSelectedItem(item);\n    onChange(item.value);\n    setIsOpen(false);\n  };\n  return (\n    <div\n      className={`\n    ${fullWidth ? \"w-full\" : \"max-w-sm w-full\"}\n    ${!selectedValue ? \"border-x-red-500\" : \"border-x-white\"}  \n    ${styles.dropdownContainer}`}\n    >\n      <button\n        type=\"button\"\n        className={styles.dropdownButton}\n        onClick={() => setIsOpen((prev) => !prev)}\n      >\n        {selectedItem ? (\n          <p className={styles.dropdownButtonText}>\n            <span className=\"text-gray-500 opacity-50  capitalize \">\n              {title}{\" \"}\n            </span>\n            <span className=\"uppercase text-inherit\">{selectedItem.name}</span>\n          </p>\n        ) : (\n          <p className={styles.dropdownButtonPlaceholder}>{title}</p>\n        )}\n        <ChevronDownIcon className={styles.dropdownButtonIcon} />\n      </button>\n\n      <div\n        className={`${isOpen ? \"block \" : \"hidden\"}  ${\n          styles.dropdownListContainer\n        }`}\n        id=\"dropdown\"\n      >\n        <ul className={styles.dropdownList} aria-labelledby=\"dropdown\">\n          {items.map((item) => (\n            <li\n              key={item.value}\n              value={item.value}\n              onClick={() => handleOnSelectItem(item)}\n              className={styles.dropdownListItem}\n            >\n              {item.name}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","interface Props {\n  title: string;\n  value: any | null;\n  fallbackValue?: any;\n  isCol?: boolean;\n}\n\nexport default function LabelItem({\n  title,\n  value,\n  fallbackValue = \"Unavailable\",\n  isCol = false,\n}: Props) {\n  return (\n    <p\n      className={`${\n        isCol ? \"flex-col items-start\" : \"flex-row items-center\"\n      } flex w-full justify-between font-Montserrat border-b border-b-inherit`}\n    >\n      <span className=\"text-xl uppercase font-Oswald font-thin min-w-[7rem] text-gray-500\">\n        {title}\n      </span>\n      {value ? (\n        <span className=\"text-lg first-letter:capitalize\">{value}</span>\n      ) : (\n        <span className=\"text-base uppercase font-thin text-gray-500\">\n          {fallbackValue}\n        </span>\n      )}\n    </p>\n  );\n}\n","import { useController, UseControllerProps } from \"react-hook-form\";\n\ninterface Props extends UseControllerProps {\n  label: string;\n  type?: string;\n  placeholder: string;\n  rows?: number;\n  fullWidth?: boolean;\n}\n\nconst styles = {\n  inputContainer:\n    \"border-x-2 border-x-slate-200 h-full bg-slate-200 flex flex-col lg:flex-row items-center\",\n  inputStyle:\n    \"font-Montserrat resize-none font-thin text-base lg:text-xl text-inherit placeholder:text-gray-500 placeholder:font-Oswald pb-2 pt-3 px-5 w-full h-full block bg-transparent focus-within:outline-none\",\n  inputValidationStyle:\n    \"h-auto font-Oswald text-xl leading-none w-full font-thin px-5 py-5 lg:py-0 text-gray-200\",\n};\n\nexport default function AppTextArea(props: Props) {\n  const { fieldState, field } = useController({ ...props, defaultValue: \"\" });\n\n  return (\n    <div\n      className={`\n      ${props.fullWidth ? \"w-full\" : \"w-full max-w-sm\"}\n      ${fieldState.error ? \"border-x-red-500\" : \"border-x-white\"}  \n      ${styles.inputContainer}`}\n    >\n      <textarea\n        className={styles.inputStyle}\n        aria-label={props.label}\n        type={props.type}\n        {...props}\n        {...field}\n      />\n      {fieldState.error && (\n        <p className={styles.inputValidationStyle}>\n          {fieldState.error.message}\n        </p>\n      )}\n    </div>\n  );\n}\n","import { useController, UseControllerProps } from \"react-hook-form\";\n\ninterface Props extends UseControllerProps {\n  label: string;\n  type?: string;\n  placeholder: string;\n  fullWidth?: boolean;\n  autoComplete?: string | undefined;\n}\n\nconst styles = {\n  inputContainer:\n    \" border-x-2 border-x-slate-200 bg-slate-200 flex flex-row items-center \",\n  inputStyle:\n    \" font-Montserrat font-thin text-base lg:text-xl text-inherit placeholder:capitalize placeholder:text-gray-500  placeholder:font-Oswald pb-2 pt-3 px-5 w-full h-auto block bg-transparent focus-within:outline-none\",\n  inputValidationStyle:\n    \" h-auto font-Oswald text-xl leading-none w-full text-left font-thin px-5 py-0 text-gray-200 \",\n};\n\nexport default function AppTextInput(props: Props) {\n  const { fieldState, field } = useController({ ...props, defaultValue: \"\" });\n\n  return (\n    <div\n      className={` ${props.fullWidth ? \"w-full\" : \"w-full max-w-sm \"} ${\n        fieldState.error ? \"border-r-red-500\" : \"border-x-white \"\n      } ${styles.inputContainer}`}\n    >\n      <input\n        className={`${styles.inputStyle} autofill:bg-yellow-200 `}\n        aria-label={props.label}\n        type={props.type}\n        {...props}\n        {...field}\n      />\n      {fieldState.error && (\n        <p className={styles.inputValidationStyle}>\n          {fieldState.error.message}\n        </p>\n      )}\n    </div>\n  );\n}\n","export enum IssueOccurrence {\n    Persistent,\n    Frequent,\n    Random,\n    Rare\n}\n\nexport enum TicketStatus {\n    New,\n    Assigned,\n    Open,\n    Fixed,\n    Pending,\n    Retest,\n    Verified,\n    Reopen,\n    Closed,\n    Duplicate,\n    Rejected,\n    Deferred,\n    NotBug\n}\n\nexport enum TicketPriority {\n    Low,\n    Medium,\n    High,\n    Urgent\n}\n\nexport enum IssueSeverity {\n    Low,\n    Medium,\n    High,\n    Critical\n}\n\nexport enum IssueNature {\n    Functional,\n    Performance,\n    Usability,\n    Compatibility,\n    Security\n}","import { useForm, FieldValues } from \"react-hook-form\";\nimport agent from \"../../api/agent\";\nimport useComments from \"../../hooks/useComments\";\nimport AppTextArea from \"../common/TextArea\";\nimport { HubConnection, HubConnectionState } from \"@microsoft/signalr\";\n\ninterface Props {\n  ticketId: number;\n}\n\nexport default function CommentForm({ ticketId }: Props) {\n  const { control, reset, handleSubmit } = useForm({\n    mode: \"all\",\n  });\n\n  async function handleSubmitData(data: FieldValues) {\n    agent.Comments.create(ticketId, data)\n      .then(() => {})\n      .catch((error) => console.log(error))\n      .finally(() => reset({ body: \"\" }));\n  }\n  return (\n    <form\n      onSubmit={handleSubmit(handleSubmitData)}\n      className=\"flex flex-col lg:flex-row px-5 lg:px-0\"\n    >\n      <AppTextArea\n        rows={4}\n        fullWidth\n        control={control}\n        label=\"comment\"\n        placeholder=\"post a comment\"\n        name=\"body\"\n        rules={{ required: \"Comment cant be empty\" }}\n      />\n      <input\n        className=\"cursor-pointer bg-slate-400 text-white py-5 px-5 uppercase font-Oswald text-xl font-thin\"\n        type=\"submit\"\n        value={\"Post\"}\n      />\n    </form>\n  );\n}\n","interface Props {\n  commentsCount: number;\n}\n\nexport default function CommentsContainerHeader({ commentsCount }: Props) {\n  return (\n    <div className=\"flex flex-col lg:flex-row lg:justify-between w-full\">\n      <p className=\" font-Oswald font-thin uppercase text-3xl\">Comments</p>\n\n      <p className=\" font-Oswald text-lg uppercase font-thin text-gray-400\">\n        {commentsCount <= 0\n          ? \"No Comments\"\n          : commentsCount === 1\n          ? \"1 Comment\"\n          : `${commentsCount} comments`}\n      </p>\n    </div>\n  );\n}\n","import { formatDistance } from \"date-fns\";\nimport { TicketComment } from \"../../models/comment\";\n\ninterface Props {\n  comment: TicketComment;\n}\n\nexport default function CommentsListItem({ comment }: Props) {\n  return (\n    <>\n      <div className=\"flex flex-row justify-between w-full items-center border-b border-gray-400 mb-3\">\n        <p className=\" font-Oswald font-thin text-xl leading-loose\">\n          {comment.author}\n        </p>\n\n        <p className=\" font-Montserrat text-sm  text-gray-700\">\n          {formatDistance(new Date(comment.creationDate), new Date(), {\n            addSuffix: true,\n          })}\n        </p>\n      </div>\n      <p className=\" font-Montserrat text-sm lg:text-lg lg:min-w-[12rem] w-full whitespace-pre-line\">\n        {comment.body}\n      </p>\n    </>\n  );\n}\n","import { TicketComment } from \"../../models/comment\";\nimport CommentsListItem from \"./CommentsListItem\";\n\ninterface Props {\n  comments: TicketComment[];\n}\n\nexport default function CommentsList({ comments }: Props) {\n  return (\n    <ul className=\"flex flex-col gap-y-5 h-auto px-5\">\n      {comments.map((comment, index) => (\n        <li\n          key={index}\n          className=\"w-full  overflow-auto bg-gray-100 drop-shadow-md lg:px-10 px-5 lg:rounded-sm h-auto py-3  flex flex-col justify-start items-start\"\n        >\n          <CommentsListItem comment={comment} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { TicketComment } from \"../../models/comment\";\nimport CommentForm from \"./CommentForm\";\nimport CommentsContainerHeader from \"./CommentsContainerHeader\";\nimport CommentsList from \"./CommentsList\";\n\ninterface Props {\n  ticketId: number;\n  comments: TicketComment[];\n}\n\nexport default function CommentsContainer({ comments, ticketId }: Props) {\n  return (\n    <div className=\"h-full flex flex-col gap-y-5\">\n      <div className=\"flex-initial px-5 lg:px-0\">\n        <CommentsContainerHeader commentsCount={comments.length} />\n      </div>\n      <div className=\" overflow-y-scroll overflow-x-hidden flex-auto h-full py-5 max-h-[60vh]\">\n        <CommentsList comments={comments} />\n      </div>\n\n      <div className=\" flex-initial py-5\">\n        <CommentForm ticketId={ticketId} />\n      </div>\n    </div>\n  );\n}\n","import { format } from \"date-fns\";\nimport { ProjectTicketFull } from \"../../models/ticket\";\n\ninterface Props {\n  ticket: ProjectTicketFull;\n}\n\nexport default function TicketHeader({ ticket }: Props) {\n  return (\n    <div className=\"flex flex-col gap-y-5 h-full\">\n      <div className=\"flex lg:flex-row flex-col justify-between lg:items-end border-b-2 border-black pb-1 flex-initial\">\n        <p className=\" font-Oswald text-4xl\">{ticket.project}</p>\n        <p className=\" font-Oswald text-lg uppercase font-thin\">\n          Ticket #{ticket.id}\n        </p>\n      </div>\n\n      <div className=\"w-full flex-initial\">\n        <p className=\" font-Oswald leading-loose font-thin text-xl  uppercase\">\n          Subject\n        </p>\n        <p className=\" font-Montserrat text-lg pb-3\">{ticket.subject}</p>\n      </div>\n\n      <div className=\"w-full flex-auto\">\n        <p className=\" font-Oswald leading-loose font-thin text-xl  uppercase\">\n          Description\n        </p>\n        <p className=\"font-Montserrat text-base\">{ticket.body}</p>\n      </div>\n\n      <div className=\"pt-5 flex flex-col fla\">\n        <p className=\" font-Oswald uppercase text-gray-600 pt-3 text-right font-thin flex flex-row gap-x-2 justify-end\">\n          <span>Posted the</span>\n          <span>{format(new Date(ticket.creationDate), \"EE dd MMM yy\")}</span>\n          <span>by</span>\n          <span>{ticket.author}</span>\n        </p>\n      </div>\n    </div>\n  );\n}\n","import { ProjectTicketFull } from \"../../models/ticket\";\nimport LabelItem from \"../common/LabelItem\";\n\ninterface Props {\n  ticket: ProjectTicketFull;\n}\n\nexport default function TicketInfo({ ticket }: Props) {\n  return (\n    <div className=\"flex flex-col gap-y-3 border-b-black\">\n      <LabelItem title=\"Priority\" value={ticket.priority} />\n      <LabelItem title=\"Status\" value={ticket.status} />\n      <LabelItem\n        title=\"Related Phase\"\n        value={ticket.phase?.title}\n        fallbackValue=\"undefined\"\n      />\n\n      {ticket.description && (\n        <>\n          <LabelItem title=\"Occurrence\" value={ticket.description.occurrence} />\n          <LabelItem title=\"Nature\" value={ticket.description.nature} />\n          <LabelItem title=\"Severity\" value={ticket.description.severity} />\n        </>\n      )}\n      <LabelItem\n        title=\"Assigned member\"\n        value={ticket.assignedMember}\n        fallbackValue=\"Unassigned\"\n      />\n\n      <div className=\"py-2 border-b-black flex flex-col gap-y-3\">\n        <LabelItem\n          title=\"Operating system\"\n          value={ticket.description.operatingSystem}\n          isCol\n        />\n\n        <LabelItem\n          title=\"Browser version\"\n          value={ticket.description.browser}\n          isCol\n        />\n      </div>\n      <div className=\" flex flex-row items-end  w-full justify-between font-Montserrat border-b border-b-black \">\n        <p className=\"text-lg uppercase font-Oswald font-thin min-w-[7rem]\">\n          Screenshot\n        </p>\n        {ticket.description.photo ? (\n          <button className=\"text-lg uppercase font-Oswald font-thin\">\n            View\n          </button>\n        ) : (\n          <p className=\"text-base uppercase font-thin text-gray-500\">\n            Unavailable\n          </p>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { useCallback, useEffect, useState } from \"react\";\nimport agent from \"../api/agent\";\nimport { TicketComment } from \"../models/comment\";\nimport { MetaData } from \"../models/pagination\";\nimport { PaginationParams } from \"../models/pagingParams\";\n\nexport default function useComments() {\n  const [ticketId, setTicketId] = useState<number | null>(null);\n  const [comments, setComments] = useState<TicketComment[]>([]);\n  const [commentsLoaded, setCommentsLoaded] = useState(false);\n  const [paginationParams, setPaginationParams] = useState<PaginationParams>({\n    pageNumber: 1,\n    pageSize: 10,\n  });\n  const [metaData, setMetaData] = useState<MetaData | null>(null);\n\n  function getParams(paginationParams: PaginationParams) {\n    const params = new URLSearchParams();\n    params.append(\"pageNumber\", paginationParams.pageNumber.toString());\n    params.append(\"pageSize\", paginationParams.pageSize.toString());\n    return params;\n  }\n\n  const loadTickets = useCallback(\n    (id: number) => {\n      const params = getParams(paginationParams);\n      agent.Tickets.listComments(id, params)\n        .then((response) => {\n          setMetaData(response.metaData);\n          setComments(response.items);\n          setCommentsLoaded(true);\n        })\n        .catch((error) => console.log(error));\n    },\n    [paginationParams]\n  );\n\n  useEffect(() => {\n    if (!commentsLoaded && ticketId) {\n      loadTickets(ticketId);\n    }\n  }, [commentsLoaded, loadTickets, ticketId]);\n\n  function setParams(value: any) {\n    setPaginationParams({ ...value });\n    setCommentsLoaded(false);\n  }\n\n  return {\n    comments,\n    commentsLoaded,\n    metaData,\n    setParams,\n    setTicketId,\n    setCommentsLoaded,\n  };\n}\n","import { PencilAltIcon, TrashIcon } from \"@heroicons/react/solid\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport agent from \"../../api/agent\";\nimport CommentsContainer from \"../../components/comments/CommentsContainer\";\nimport LoadingComponent from \"../../components/common/LoadingComponent\";\nimport TicketHeader from \"../../components/ticketDetails/TicketHeader\";\nimport TicketInfo from \"../../components/ticketDetails/TicketInfo\";\nimport TicketForm from \"../../components/Tickets/TicketForm\";\nimport useComments from \"../../hooks/useComments\";\nimport { ProjectTicketFull } from \"../../models/ticket\";\nimport { useAppSelector } from \"../../store/configureStore\";\n\nexport default function TicketDetailsPage() {\n  const { id } = useParams<{ id: string }>();\n  const [ticket, setTicket] = useState<ProjectTicketFull | null>(null);\n  const [loaded, setLoaded] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { status: ticketStatus } = useAppSelector((state) => state.ticket);\n  const { comments, setTicketId } = useComments();\n  const [isEdit, setIsEdit] = useState(false);\n  const [isDelete, setIsDelete] = useState(false);\n  const navigate = useNavigate();\n\n  const loadTicket = useCallback((id: number) => {\n    setLoading(true);\n    agent.Tickets.details(id)\n      .then((response) => {\n        setTicket(response);\n        setLoaded(true);\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setLoading(false));\n  }, []);\n\n  useEffect(() => {\n    if (id && !loaded && !loading) {\n      setLoading(true);\n      loadTicket(parseInt(id));\n    }\n  }, [id, loadTicket, loaded, loading]);\n\n  useEffect(() => {\n    if (ticket) {\n      setTicketId(ticket.id);\n    }\n\n    return () => {\n      setTicketId(null);\n    };\n  }, [setTicketId, ticket]);\n\n  const handleDeleteTicket = (id: number) => {\n    agent.Tickets.delete(id).then(() => {\n      setIsDelete(false);\n      navigate(\"/projects\");\n    });\n  };\n\n  if (ticketStatus.includes(\"pending\"))\n    return <LoadingComponent message=\"Loading ticket...\" />;\n\n  if (!ticket) return <div>not found</div>;\n\n  if (isDelete)\n    return (\n      <div className=\"h-screen w-screen bg-slate-100 flex items-center justify-center\">\n        <div className=\"bg-white h-auto max-w-lg w-full p-5 lg:p-10 rounded-lg drop-shadow-md\">\n          <p className=\" font-Oswald text-2xl uppercase font-thin border-b-2 border-b-red-500\">\n            Attention\n          </p>\n\n          <p className=\" font-Montserrat text-lg py-5\">\n            This Ticket will be deleted permanently, do you want to proceed?\n          </p>\n          <div className=\"flex flex-row gap-x-5 mx-auto w-full justify-center lg:justify-end \">\n            <button\n              className=\"cursor-pointer border-slate-800 border-2 text-slate-800 py-1 px-5 uppercase font-Oswald text-xl font-thin\"\n              type=\"button\"\n              onClick={() => setIsDelete(false)}\n            >\n              No\n            </button>\n            <button\n              className=\"cursor-pointer bg-red-600 text-white py-1 px-5 uppercase font-Oswald text-xl font-thin\"\n              type=\"button\"\n              onClick={() => handleDeleteTicket(ticket.id)}\n            >\n              Yes\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  return (\n    <div className=\" w-full h-full min-h-screen bg-slate-100 pt-16 lg:pt-20\">\n      {isEdit ? (\n        <TicketForm\n          projectId={ticket.projectId}\n          ticketId={ticket.id}\n          onClose={() => {\n            loadTicket(ticket.id);\n            setIsEdit(false);\n          }}\n        />\n      ) : (\n        <div className=\"container mx-auto flex flex-col gap-y-5 py-10\">\n          <div className=\"px-5 flex flex-row justify-end items-start gap-x-5 py-3\">\n            <button\n              className=\"flex flex-row gap-x-2 items-center\"\n              onClick={() => setIsEdit(true)}\n            >\n              <PencilAltIcon className=\"h-6 w-6\" />\n              <p className=\" font-Oswald text-lg font-thin uppercase\">Edit</p>\n            </button>\n\n            <button\n              className=\"flex flex-row gap-x-2 items-center\"\n              onClick={() => setIsDelete(true)}\n            >\n              <TrashIcon className=\"h-6 w-6 text-red-600\" />\n              <p className=\" font-Oswald text-lg font-thin uppercase\">Delete</p>\n            </button>\n          </div>\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-5\">\n            <div className=\"relative w-full h-full p-10 bg-white text-black drop-shadow-md\">\n              <TicketHeader ticket={ticket} />\n            </div>\n\n            <div className=\" w-full h-auto p-10 bg-white text-black drop-shadow-md\">\n              <TicketInfo ticket={ticket} />\n            </div>\n          </div>\n\n          <div className=\" w-full py-10 lg:p-10 bg-white text-black drop-shadow-md h-auto\">\n            <CommentsContainer ticketId={ticket.id} comments={comments} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","export function EnumToArray(object: any): { name: string, value: any }[] {\n    const arrayObjects = [];\n\n    for (const [propertyKey, propertyValue] of Object.entries(object)) {\n        if (!Number.isNaN(Number(propertyKey))) {\n            continue;\n        }\n        arrayObjects.push({ name: propertyKey, value: propertyValue });\n    }\n    return arrayObjects;\n}"],"names":["flattenObj","ob","result","i","Array","isArray","temp","j","TicketForm","projectId","ticketId","onClose","useState","ticket","setTicket","isEdit","project","setProject","projectLoaded","members","setMembers","useForm","mode","control","watch","handleSubmit","reset","setValue","isDirty","formState","watchFile","loadMembers","useCallback","id","agent","items","map","member","name","userName","value","userId","console","log","loadProject","loadTicket","useEffect","URL","revokeObjectURL","preview","handleOnChange","data","file","description","obj","subject","body","priority","status","assignedMemberId","flatObj","className","title","onSubmit","type","label","placeholder","fullWidth","rules","required","rows","Dropdown","EnumToArray","TicketPriority","onChange","selectedValue","TicketStatus","assignedMember","IssueOccurrence","occurrence","IssueSeverity","severity","IssueNature","nature","MediaDropZone","src","alt","photo","onClick","styles","isOpen","setIsOpen","selectedItem","setSelectedItem","item","find","prev","handleOnSelectItem","LabelItem","fallbackValue","isCol","AppTextArea","props","useController","defaultValue","fieldState","field","error","message","AppTextInput","CommentForm","then","catch","finally","CommentsContainerHeader","commentsCount","CommentsListItem","comment","author","formatDistance","Date","creationDate","addSuffix","CommentsList","comments","index","CommentsContainer","length","TicketHeader","format","TicketInfo","phase","operatingSystem","browser","useComments","setTicketId","setComments","commentsLoaded","setCommentsLoaded","pageNumber","pageSize","paginationParams","setPaginationParams","metaData","setMetaData","loadTickets","params","URLSearchParams","append","toString","getParams","response","setParams","TicketDetailsPage","useParams","loaded","setLoaded","loading","setLoading","ticketStatus","useAppSelector","state","setIsEdit","isDelete","setIsDelete","navigate","useNavigate","err","parseInt","includes","LoadingComponent","handleDeleteTicket","PencilAltIcon","TrashIcon","object","arrayObjects","Object","entries","propertyKey","propertyValue","Number","isNaN","push"],"sourceRoot":""}