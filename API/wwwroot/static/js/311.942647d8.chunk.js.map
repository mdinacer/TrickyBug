{"version":3,"file":"static/js/311.942647d8.chunk.js","mappings":"iPASMA,GAAgBC,EAAAA,EAAAA,OACpB,kBAAM,iCAEFC,GAAcD,EAAAA,EAAAA,OAClB,kBAAM,iCAGFE,GAAgBF,EAAAA,EAAAA,OACpB,kBAAM,gCAGFG,GAAiBH,EAAAA,EAAAA,OACrB,kBAAM,iCAGFI,GAAiBJ,EAAAA,EAAAA,OACrB,kBAAM,iCAGFK,GAAiBL,EAAAA,EAAAA,OACrB,kBAAM,iCAGO,SAASM,IACtB,IAAQC,GAASC,EAAAA,EAAAA,KAAe,SAACC,GAAD,OAAWA,EAAMC,WAAzCH,KACAI,GAASC,EAAAA,EAAAA,MAATD,KACR,GAA8BE,EAAAA,EAAAA,eAAqCC,GAAnE,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KACA,GAAsCL,EAAAA,EAAAA,WAAS,GAA/C,eAAOM,EAAP,KAAoBC,EAApB,KACA,GAA4BP,EAAAA,EAAAA,WAAS,GAArC,eAAOQ,EAAP,KAAeC,EAAf,KAuBA,OArBAC,EAAAA,EAAAA,YAAU,WACJhB,GAAQQ,GACVK,EAAeb,EAAKiB,MAAMC,SAAS,UAAYV,EAAQW,YAExD,CAACX,EAASR,KAEbgB,EAAAA,EAAAA,YAAU,WAUR,OATAL,GAAW,GACPP,GACFgB,EAAAA,EAAAA,SAAAA,QAAuBhB,GACpBiB,MAAK,SAACC,GACLb,EAAWa,MAEZC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAC3BG,SAAQ,kBAAMhB,GAAW,MAEvB,WACLF,OAAWF,MAEZ,CAACH,IAEAM,GACK,SAAC,IAAD,CAAkBkB,QAAQ,oCAC9BpB,EAODM,GAEA,SAAC,IAAD,CAAaN,QAASA,EAASqB,YAAa,kBAAMd,GAAU,OAI9D,gBAAKe,UAAU,uEAAf,UACE,gBAAKA,UAAU,kFAAf,UACE,iBAAKA,UAAU,wEAAf,WACE,iBAAKA,UAAU,0HAAf,UACGlB,IACC,gBAAKkB,UAAU,sDAAf,UACE,mBACEC,MAAM,eACND,UAAU,kGACVE,KAAK,SACLC,QAAS,kBAAMlB,GAAU,SAACmB,GAAD,OAAWA,MAJtC,UAME,SAAC,IAAD,CAAeJ,UAAU,iBAI/B,gBAAKA,UAAU,WAAf,UACE,SAACtC,EAAD,CAAegB,QAASA,OAE1B,gBAAKsB,UAAU,WAAf,UACE,SAACpC,EAAD,CAAac,QAASA,OAExB,gBAAKsB,UAAU,WAAf,UACE,SAAClC,EAAD,CAAgBuC,UAAW3B,EAAQ4B,WAGvC,iBAAKN,UAAU,6BAAf,WACE,gBAAKA,UAAU,YAAf,UACE,SAACnC,EAAD,CACEwC,UAAW3B,EAAQ4B,GACnBC,YAAa7B,EAAQJ,KACrBQ,YAAaA,OAIjB,gBAAKkB,UAAU,iBAAf,UACE,SAACjC,EAAD,CACEsC,UAAW3B,EAAQ4B,GACnBC,YAAa7B,EAAQJ,KACrBQ,YAAaA,OAIjB,gBAAKkB,UAAU,YAAf,UACE,SAAChC,EAAD,CACEqC,UAAW3B,EAAQ4B,GACnBC,YAAa7B,EAAQJ,KACrBQ,YAAaA,iBA1DvB,gBAAKkB,UAAU,wEAAf,UACE,cAAGA,UAAU,2BAAb,mC,mCChDR,IAAMQ,EAAaC,EAAAA,YAhBnB,SAAuBC,EAAOC,GAC5B,OAAoBF,EAAAA,cAAoB,MAAOG,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,QAAS,YACTC,KAAM,eACN,cAAe,OACfC,IAAKN,GACJD,GAAqBD,EAAAA,cAAoB,OAAQ,CAClDS,EAAG,kFACYT,EAAAA,cAAoB,OAAQ,CAC3CU,SAAU,UACVD,EAAG,yFACHE,SAAU,gBAKd","sources":["app/pages/projects/ProjectDetailsPage.tsx","../node_modules/@heroicons/react/solid/esm/PencilAltIcon.js"],"sourcesContent":["import { PencilAltIcon } from \"@heroicons/react/solid\";\nimport { lazy, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport agent from \"../../api/agent\";\nimport LoadingComponent from \"../../components/common/LoadingComponent\";\nimport ProjectForm from \"../../components/projects/projectDetails/ProjectForm\";\nimport { ProjectDetails } from \"../../models/project\";\nimport { useAppSelector } from \"../../store/configureStore\";\n\nconst ProjectHeader = lazy(\n  () => import(\"../../components/projects/projectDetails/ProjectHeader\")\n);\nconst ProjectInfo = lazy(\n  () => import(\"../../components/projects/projectDetails/ProjectInfo\")\n);\n\nconst ProjectPhases = lazy(\n  () => import(\"../../components/projects/projectDetails/ProjectPhases\")\n);\n\nconst ProjectMembers = lazy(\n  () => import(\"../../components/projects/projectDetails/ProjectMembers\")\n);\n\nconst ProjectTickets = lazy(\n  () => import(\"../../components/projects/projectDetails/ProjectTickets\")\n);\n\nconst ProjectActions = lazy(\n  () => import(\"../../components/projects/projectDetails/ProjectActions\")\n);\n\nexport default function ProjectDetailsPage() {\n  const { user } = useAppSelector((state) => state.account);\n  const { slug } = useParams<{ slug: string }>();\n  const [project, setProject] = useState<ProjectDetails | undefined>(undefined);\n  const [loading, setLoading] = useState(false);\n  const [isPermitted, setIsPermitted] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n\n  useEffect(() => {\n    if (user && project) {\n      setIsPermitted(user.roles.includes(\"Admin\") || project.isLeader);\n    }\n  }, [project, user]);\n\n  useEffect(() => {\n    setLoading(true);\n    if (slug) {\n      agent.Projects.details(slug)\n        .then((response) => {\n          setProject(response);\n        })\n        .catch((err) => console.log(err))\n        .finally(() => setLoading(false));\n    }\n    return () => {\n      setProject(undefined);\n    };\n  }, [slug]);\n\n  if (loading)\n    return <LoadingComponent message=\"Loading Project, please wait...\" />;\n  if (!project)\n    return (\n      <div className=\"py-20 w-screen h-screen bg-slate-300 flex items-center justify-center\">\n        <p className=\" font-Montserrat text-xl\">Cant find Project</p>\n      </div>\n    );\n\n  if (isEdit)\n    return (\n      <ProjectForm project={project} handleClose={() => setIsEdit(false)} />\n    );\n\n  return (\n    <div className=\"h-full min-h-screen w-screen bg-slate-300 pb-10 pt-16 lg:pt-20  flex\">\n      <div className=\"lg:container lg:px-5 mx-auto flex flex-col rounded-md overflow-hidden flex-auto\">\n        <div className=\"flex-auto w-full flex flex-col  gap-y-5 lg:gap-y-0 lg:flex-row h-auto\">\n          <div className=\"relative py-10 px-5 lg:px-0 lg:py-5 w-full lg:w-1/3 bg-slate-700 lg:rounded-md overflow-hidden text-white flex flex-col\">\n            {isPermitted && (\n              <div className=\"absolute top-0 right-0 w-full flex justify-end p-1 \">\n                <button\n                  title=\"edit members\"\n                  className=\" ml-auto font-Montserrat text-sm uppercase h-12 w-12 m-3  lg:py-1 lg:px-2 text-white rounded-md\"\n                  type=\"button\"\n                  onClick={() => setIsEdit((prev) => !prev)}\n                >\n                  <PencilAltIcon className=\"h-8 w-8\" />\n                </button>\n              </div>\n            )}\n            <div className=\"lg:h-1/3\">\n              <ProjectHeader project={project} />\n            </div>\n            <div className=\"lg:h-1/3\">\n              <ProjectInfo project={project} />\n            </div>\n            <div className=\"lg:h-1/3\">\n              <ProjectMembers projectId={project.id} />\n            </div>\n          </div>\n          <div className=\" relative lg:w-2/3 lg:px-5\">\n            <div className=\"lg:h-1/3 \">\n              <ProjectPhases\n                projectId={project.id}\n                projectSlug={project.slug}\n                isPermitted={isPermitted}\n              />\n            </div>\n\n            <div className=\"lg:h-1/3  py-5\">\n              <ProjectTickets\n                projectId={project.id}\n                projectSlug={project.slug}\n                isPermitted={isPermitted}\n              />\n            </div>\n\n            <div className=\"lg:h-1/3 \">\n              <ProjectActions\n                projectId={project.id}\n                projectSlug={project.slug}\n                isPermitted={isPermitted}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import * as React from \"react\";\n\nfunction PencilAltIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(PencilAltIcon);\nexport default ForwardRef;"],"names":["ProjectHeader","lazy","ProjectInfo","ProjectPhases","ProjectMembers","ProjectTickets","ProjectActions","ProjectDetailsPage","user","useAppSelector","state","account","slug","useParams","useState","undefined","project","setProject","loading","setLoading","isPermitted","setIsPermitted","isEdit","setIsEdit","useEffect","roles","includes","isLeader","agent","then","response","catch","err","console","log","finally","message","handleClose","className","title","type","onClick","prev","projectId","id","projectSlug","ForwardRef","React","props","svgRef","Object","assign","xmlns","viewBox","fill","ref","d","fillRule","clipRule"],"sourceRoot":""}