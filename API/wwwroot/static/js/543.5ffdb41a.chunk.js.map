{"version":3,"file":"static/js/543.5ffdb41a.chunk.js","mappings":"uLAGe,SAASA,EAAT,GAMX,IALFC,EAKC,EALDA,SACAC,EAIC,EAJDA,MAKQC,GAASC,EAAAA,EAAAA,KAAe,SAACC,GAAD,OAAWA,EAAMC,WAAzCH,KACJI,GAAWC,EAAAA,EAAAA,MAEf,IAAKL,EACH,OAAO,SAAC,KAAD,CAAUM,GAAG,iBAAiBJ,MAAO,CAAEK,KAAMH,KAGtD,IAAMI,EACJR,GAAQD,IAAR,OAAiBA,QAAjB,IAAiBA,OAAjB,EAAiBA,EAAOU,MAAK,SAACC,GAAD,uBAAOV,EAAKD,aAAZ,aAAO,EAAYY,SAASD,OAE3D,OAAIX,IAAUS,GACZI,QAAQC,IAAI,oCACL,SAAC,KAAD,CAAUP,GAAG,OAGfR","sources":["app/layout/PrivateRoute.tsx"],"sourcesContent":["import { useLocation, Navigate } from \"react-router-dom\";\nimport { useAppSelector } from \"../store/configureStore\";\n\nexport default function PrivateRoute({\n  children,\n  roles,\n}: {\n  children: JSX.Element;\n  roles?: string[];\n}) {\n  const { user } = useAppSelector((state) => state.account);\n  let location = useLocation();\n\n  if (!user) {\n    return <Navigate to=\"/account/login\" state={{ from: location }} />;\n  }\n\n  const userHasRequiredRole =\n    user && roles && roles?.some((r) => user.roles?.includes(r));\n\n  if (roles && !userHasRequiredRole) {\n    console.log(\"You are not allowed to go there\");\n    return <Navigate to=\"/\" />;\n  }\n\n  return children;\n}\n"],"names":["PrivateRoute","children","roles","user","useAppSelector","state","account","location","useLocation","to","from","userHasRequiredRole","some","r","includes","console","log"],"sourceRoot":""}