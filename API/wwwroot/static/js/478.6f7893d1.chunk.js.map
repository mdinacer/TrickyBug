{"version":3,"file":"static/js/478.6f7893d1.chunk.js","mappings":"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","sources":["app/components/common/TextInput.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","app/pages/account/registerValidation.ts","app/pages/account/RegisterPage.tsx"],"sourcesContent":["import { useController, UseControllerProps } from \"react-hook-form\";\n\ninterface Props extends UseControllerProps {\n  label: string;\n  type?: string;\n  placeholder: string;\n  //fullWidth?: boolean;\n  autoComplete?: string | undefined;\n}\n\nconst styles = {\n  inputContainer:\n    \"w-full border-x-2 border-x-black bg-slate-200 flex flex-col lg:flex-row items-center \",\n  inputStyle:\n    \" font-Montserrat font-thin text-lg lg:text-xl text-inherit placeholder:capitalize placeholder:text-gray-500  placeholder:font-Oswald pb-2 pt-3 px-5 w-full h-auto block bg-transparent focus-within:outline-none\",\n  inputValidationStyle:\n    \" h-auto font-Oswald text-xl leading-none w-full text-center lg:text-left font-thin px-5 lg:py-0 text-gray-400 py-2 \",\n};\n\nexport default function AppTextInput(props: Props) {\n  const { fieldState, field } = useController({ ...props, defaultValue: \"\" });\n\n  return (\n    <div\n      className={` ${\n        fieldState.error ? \"border-r-red-500\" : \"border-x-inherit \"\n      } ${styles.inputContainer}`}\n    >\n      <input\n        className={`${styles.inputStyle}`}\n        aria-label={props.label}\n        type={props.type}\n        {...props}\n        {...field}\n      />\n      {fieldState.error && (\n        <p className={styles.inputValidationStyle}>\n          {fieldState.error.message}\n        </p>\n      )}\n    </div>\n  );\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import * as yup from \"yup\";\n\nexport const registerValidationSchema = yup.object({\n  displayName: yup.string().required(\"Email is required\"),\n  username: yup.string().required(\"Email is required\"),\n  title: yup.string().required(\"Title is required\"),\n  email: yup.string().email().required(\"Email is required\"),\n  password: yup\n    .string()\n    .required(\"Password is required\")\n    .matches(\n      /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/,\n      \"Weak password\"\n    ),\n  password2: yup.string().oneOf([yup.ref('password'), null], 'Passwords must match')\n});\n","import { FieldValues, useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport { registerValidationSchema } from \"./registerValidation\";\nimport { yupResolver } from \"@hookform/resolvers/yup/dist/yup\";\nimport agent from \"../../api/agent\";\nimport AppTextInput from \"../../components/common/TextInput\";\nimport { useState } from \"react\";\n\nexport default function RegisterPage() {\n  const [registerSuccess, setRegisterSuccess] = useState(false);\n  const {\n    control,\n    handleSubmit,\n    formState: { isSubmitting, isValid },\n  } = useForm({ mode: \"all\", resolver: yupResolver(registerValidationSchema) });\n\n  async function submitForm(data: FieldValues) {\n    const { password2, ...user } = data;\n    agent.Account.register(user)\n      .then((response) => {\n        setRegisterSuccess(true);\n      })\n      .catch((err) => console.log(err));\n  }\n  return (\n    <div className=\"py-10 h-screen w-screen flex items-center justify-center bg-gray-100\">\n      <div className=\"h-auto p-5 lg:p-20 w-full lg:max-w-xl  drop-shadow-md rounded-md flex items-center justify-center\">\n        {!registerSuccess ? (\n          <div className=\"max-w-lg w-full \">\n            <p className=\" font-Oswald text-7xl text-center pb-10 uppercase\">\n              Sign Up\n            </p>\n\n            <form\n              autoComplete=\"off\"\n              onSubmit={handleSubmit(submitForm)}\n              className=\"flex flex-col gap-y-5 mx-auto\"\n            >\n              <AppTextInput\n                autoComplete=\"off\"\n                type=\"text\"\n                control={control}\n                label=\"Full Name\"\n                name=\"displayName\"\n                placeholder=\"Full Name\"\n              />\n\n              <AppTextInput\n                autoComplete=\"off\"\n                type=\"text\"\n                control={control}\n                label=\"Username\"\n                name=\"username\"\n                placeholder=\"Username\"\n              />\n\n              <AppTextInput\n                autoComplete=\"off\"\n                type=\"text\"\n                control={control}\n                label=\"Title\"\n                name=\"title\"\n                placeholder=\"Title (ex: Designer, Developer ...)\"\n              />\n\n              <AppTextInput\n                autoComplete=\"off\"\n                type=\"email\"\n                control={control}\n                label=\"Email\"\n                name=\"email\"\n                placeholder=\"Email\"\n              />\n\n              <AppTextInput\n                autoComplete=\"off\"\n                type=\"password\"\n                control={control}\n                label=\"Password\"\n                name=\"password\"\n                placeholder=\"Password\"\n              />\n\n              <AppTextInput\n                autoComplete=\"off\"\n                type=\"password\"\n                control={control}\n                label=\"Confirm your password\"\n                name=\"password2\"\n                placeholder=\"Confirm your password\"\n              />\n\n              <input\n                disabled={!isValid}\n                className={`${\n                  isValid ? \"opacity-100\" : \"opacity-50\"\n                } cursor-pointer bg-slate-800 text-white py-2 my-10 px-5 uppercase font-Oswald text-xl font-thin`}\n                type=\"submit\"\n                value={isSubmitting ? \"Please wait\" : \"Create Account\"}\n              />\n            </form>\n            <Link\n              to={loginPath}\n              className=\"underline underline-offset-2 text-center\"\n            >\n              <p className=\" font-Montserrat text-lg \">\n                Have an account!, Sign In\n              </p>\n            </Link>\n          </div>\n        ) : (\n          <div className=\" w-full flex items-center justify-center\">\n            <div>\n              <p className=\" font-Oswald text-3xl font-thin pb-3\">\n                Registration successful\n              </p>\n              <p className=\"font-Montserrat text-lg\">\n                A confirmation email was sent to your email address for\n                confirmation.\n              </p>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst loginPath = \"/account/login\";\n"],"names":["styles","AppTextInput","props","useController","defaultValue","fieldState","field","className","error","label","type","message","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","registerValidationSchema","yup","displayName","required","username","title","email","password","matches","password2","oneOf","RegisterPage","useState","registerSuccess","setRegisterSuccess","useForm","mode","resolver","yupResolver","control","handleSubmit","formState","isSubmitting","isValid","data","user","agent","then","response","catch","err","console","log","autoComplete","onSubmit","name","placeholder","disabled","value","to","loginPath"],"sourceRoot":""}