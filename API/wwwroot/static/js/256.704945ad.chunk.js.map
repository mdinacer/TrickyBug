{"version":3,"file":"static/js/256.704945ad.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/solid/esm/ChevronDownIcon.js","app/components/common/Dropdown.tsx","../node_modules/@heroicons/react/solid/esm/CheckIcon.js","app/components/common/AppCheckbox.tsx","app/components/projects/ProjectFilters.tsx"],"sourcesContent":["import * as React from \"react\";\n\nfunction ChevronDownIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ChevronDownIcon);\nexport default ForwardRef;","import { ChevronDownIcon } from \"@heroicons/react/solid\";\nimport { useEffect, useState } from \"react\";\n\ninterface Props {\n  title: string;\n  items: { name: string; value: string | number }[];\n  fullWidth?: boolean;\n  onChange: (value: any) => void;\n  selectedValue: any;\n  addAllItem?: boolean;\n}\n\nconst styles = {\n  dropdownContainer: \"relative border-x-2 border-x-slate-200 bg-slate-500\",\n  dropdownButton:\n    \"pb-2 pt-3 px-5 font-Oswald font-thin inline-flex justify-between items-center w-full\",\n  dropdownButtonText:\n    \"flex flex-row items-center justify-between w-full gap-x-5 text-2xl\",\n  dropdownButtonPlaceholder: \"text-2xl text-gray-300\",\n  inputValidationStyle:\n    \"h-auto font-Oswald text-lg leading-none w-full font-thin px-5 py-0 text-gray-600\",\n  dropdownButtonIcon: \"w-8 h-8 ml-2 text-white\",\n  dropdownListContainer:\n    \"absolute bg-white text-base z-50 drop-shadow-md list-none divide-y  divide-gray-100 rounded shadow my-4  w-full px-5\",\n  dropdownList: \"py-5 list-none flex flex-col gap-y-2 font-Montserrat\",\n  dropdownListItem:\n    \"font-Montserrat text-left text-black text-lg font-thin cursor-pointer\",\n};\n\nexport default function Dropdown({\n  title,\n  items,\n  fullWidth = false,\n  onChange,\n  selectedValue,\n}: Props) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState<{\n    name: string;\n    value: string | number;\n  } | null>(null);\n\n  useEffect(() => {\n    if (selectedValue && selectedItem == null) {\n      const item = items.find((i) => i.name === selectedValue);\n      setSelectedItem(item ? item : null);\n    }\n  }, [items, selectedItem, selectedValue]);\n\n  type ItemType = { name: string; value: string | number };\n\n  const handleOnSelectItem = (item: ItemType) => {\n    setSelectedItem(item);\n    onChange(item.value);\n    setIsOpen(false);\n  };\n  return (\n    <div\n      className={`\n    ${fullWidth ? \"w-full\" : \"max-w-sm w-full\"}\n    ${!selectedValue ? \"border-x-red-500\" : \"border-x-white\"}  \n    ${styles.dropdownContainer}`}\n    >\n      <button\n        type=\"button\"\n        className={styles.dropdownButton}\n        onClick={() => setIsOpen((prev) => !prev)}\n      >\n        {selectedItem ? (\n          <p className={styles.dropdownButtonText}>\n            <span className=\"text-gray-300 opacity-50  capitalize \">\n              {title}{\" \"}\n            </span>\n            <span className=\"uppercase text-white\">{selectedItem.name}</span>\n          </p>\n        ) : (\n          <p className={styles.dropdownButtonPlaceholder}>{title}</p>\n        )}\n        <ChevronDownIcon className={styles.dropdownButtonIcon} />\n      </button>\n\n      <div\n        className={`${isOpen ? \"block \" : \"hidden\"}  ${\n          styles.dropdownListContainer\n        }`}\n        id=\"dropdown\"\n      >\n        <ul className={styles.dropdownList} aria-labelledby=\"dropdown\">\n          {items.map((item) => (\n            <li\n              key={item.value}\n              value={item.value}\n              onClick={() => handleOnSelectItem(item)}\n              className={styles.dropdownListItem}\n            >\n              {item.name}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import * as React from \"react\";\n\nfunction CheckIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(CheckIcon);\nexport default ForwardRef;","import {\n  CheckCircleIcon,\n  CheckIcon,\n  XCircleIcon,\n} from \"@heroicons/react/solid\";\n\ninterface Props {\n  label: string;\n  isChecked: boolean;\n  onChange: (value: boolean) => void;\n}\n\nconst styles = {\n  buttonStyle:\n    \"flex pb-2 pt-3 px-5 text-white flex-row gap-x-2 items-center border-x-2 border-x-slate-200 bg-slate-500 transition-all duration-300\",\n};\n\nexport default function AppCheckbox({ label, isChecked, onChange }: Props) {\n  return (\n    <button\n      type=\"button\"\n      title=\"checkbox\"\n      className={styles.buttonStyle}\n      onClick={() => onChange(!isChecked)}\n    >\n      <div className=\"w-6 h-6 border-2 rounded-sm \">\n        {isChecked && <CheckIcon className=\"h-full w-full\" />}\n      </div>\n      <p className=\" font-Oswald text-2xl capitalize font-thin\">{label}</p>\n    </button>\n  );\n}\n","import { useState } from \"react\";\nimport { FieldValues, useForm } from \"react-hook-form\";\nimport { SortOptions } from \"../../models/dataLists\";\nimport { setProjectParams } from \"../../slices/projectSlice\";\nimport { useAppDispatch } from \"../../store/configureStore\";\nimport AppCheckbox from \"../common/AppCheckbox\";\nimport Dropdown from \"../common/Dropdown\";\nimport AppTextInput from \"../common/TextInput\";\n\n// interface Props {\n//   selectedSort: any;\n//   setSelectedSort: (value: any) => void;\n// }\n\nexport default function ProjectFilters() {\n  const dispatch = useAppDispatch();\n  const [selectedSort, setSelectedSort] = useState(\"Name\");\n  const [isMemberOnly, setIsMemberOnly] = useState(false);\n  const { control, handleSubmit } = useForm({\n    mode: \"all\",\n    //resolver: yupResolver<any>(productValidation)\n  });\n\n  function handleSortChange(value: any) {\n    setSelectedSort(value);\n    dispatch(setProjectParams({ orderBy: value }));\n  }\n\n  function handleIsMemberOnlyChange(value: boolean) {\n    setIsMemberOnly(value);\n    dispatch(setProjectParams({ isMember: value }));\n  }\n\n  function handleSubmitData(data: FieldValues) {\n    dispatch(setProjectParams(data));\n  }\n  return (\n    <div className=\"w-full h-auto ml-auto flex-initial z-[3] flex flex-row gap-x-5 items-center justify-start\">\n      <Dropdown\n        items={SortOptions}\n        title=\"Order By\"\n        onChange={handleSortChange}\n        selectedValue={selectedSort}\n      />\n\n      <form onSubmit={handleSubmit(handleSubmitData)} className=\"flex flex-row\">\n        <AppTextInput\n          control={control}\n          label=\"search\"\n          placeholder=\"search\"\n          name=\"searchTerm\"\n        />\n        <input\n          className=\"cursor-pointer bg-slate-800 text-white py-1 px-5 uppercase font-Oswald text-xl font-thin\"\n          type=\"submit\"\n          value={\"Search\"}\n        />\n      </form>\n\n      <AppCheckbox\n        label=\"I'm a member\"\n        isChecked={isMemberOnly}\n        onChange={handleIsMemberOnlyChange}\n      />\n    </div>\n  );\n}\n"],"names":["React","props","svgRef","Object","assign","xmlns","viewBox","fill","ref","fillRule","d","clipRule","styles","Dropdown","title","items","fullWidth","onChange","selectedValue","useState","isOpen","setIsOpen","selectedItem","setSelectedItem","useEffect","item","find","i","name","className","type","onClick","prev","id","map","value","handleOnSelectItem","AppCheckbox","label","isChecked","ProjectFilters","dispatch","useAppDispatch","selectedSort","setSelectedSort","isMemberOnly","setIsMemberOnly","useForm","mode","control","handleSubmit","SortOptions","setProjectParams","orderBy","onSubmit","data","placeholder","isMember"],"sourceRoot":""}