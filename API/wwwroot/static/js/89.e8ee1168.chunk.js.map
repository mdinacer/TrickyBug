{"version":3,"file":"static/js/89.e8ee1168.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/solid/esm/CheckIcon.js","app/components/common/AppCheckbox.tsx","app/hooks/useProjects.tsx","app/hooks/useTickets.tsx","app/models/enums.ts","app/components/Admin/ProjectsList.tsx","app/components/Admin/TicketsList.tsx","app/components/Admin/RolesForm.tsx","app/components/Admin/UsersList.tsx","app/pages/admin/AdminPanel.tsx","../node_modules/@heroicons/react/solid/esm/PencilAltIcon.js","../node_modules/@heroicons/react/solid/esm/TrashIcon.js"],"sourcesContent":["import * as React from \"react\";\n\nfunction CheckIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(CheckIcon);\nexport default ForwardRef;","import { CheckIcon } from \"@heroicons/react/solid\";\n\ninterface Props {\n  label: string;\n  isChecked: boolean;\n  onChange: (value: boolean) => void;\n}\n\nconst styles = {\n  buttonStyle:\n    \"flex bg-slate-200 text-inherit flex-row gap-x-2 items-center  border-inherit w-full\",\n};\n\nexport default function AppCheckbox({ label, isChecked, onChange }: Props) {\n  return (\n    <button\n      type=\"button\"\n      title=\"checkbox\"\n      className={styles.buttonStyle}\n      onClick={() => onChange(!isChecked)}\n    >\n      <div className=\"pb-2 pt-3 px-3 h-full w-auto border-2 border-inherit  rounded-sm bg-slate-800 text-white \">\n        {isChecked ? (\n          <CheckIcon className=\"w-6 h-6\" />\n        ) : (\n          <div className=\"w-6 h-6\"></div>\n        )}\n      </div>\n      <p className=\" font-Oswald text-lg lg:text-2xl capitalize font-thin pr-5\">\n        {label}\n      </p>\n    </button>\n  );\n}\n","import { useEffect } from \"react\";\nimport { fetchProjectsAsync, projectSelectors } from \"../slices/projectSlice\";\nimport { useAppDispatch, useAppSelector } from \"../store/configureStore\";\n\nexport default function useProjects() {\n  const projects = useAppSelector(projectSelectors.selectAll);\n  const { projectsLoaded, metaData } = useAppSelector((state) => state.project);\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (!projectsLoaded) {\n      dispatch(fetchProjectsAsync());\n    }\n  }, [dispatch, projects, projectsLoaded]);\n  return {\n    projects,\n    projectsLoaded,\n    metaData,\n  };\n}\n","import { useEffect } from \"react\";\nimport { fetchTicketsAsync, ticketSelectors } from \"../slices/ticketSlice\";\nimport { useAppDispatch, useAppSelector } from \"../store/configureStore\";\n\nexport default function useTickets() {\n  const tickets = useAppSelector(ticketSelectors.selectAll);\n  const { ticketsLoaded, metaData, ticketParams } = useAppSelector(\n    (state) => state.ticket\n  );\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    if (!ticketsLoaded) {\n      dispatch(fetchTicketsAsync());\n    }\n  }, [dispatch, tickets, ticketsLoaded]);\n  return {\n    tickets,\n    ticketParams,\n    ticketsLoaded,\n    metaData,\n  };\n}\n","export enum IssueOccurrence {\n    Persistent,\n    Frequent,\n    Random,\n    Rare\n}\n\nexport enum TicketStatus {\n    New,\n    Assigned,\n    Open,\n    Fixed,\n    Pending,\n    Retest,\n    Verified,\n    Reopen,\n    Closed,\n    Duplicate,\n    Rejected,\n    Deferred,\n    NotBug\n}\n\nexport enum TicketPriority {\n    Low,\n    Medium,\n    High,\n    Urgent\n}\n\nexport enum IssueSeverity {\n    Low,\n    Medium,\n    High,\n    Critical\n}\n\nexport enum IssueNature {\n    Functional,\n    Performance,\n    Usability,\n    Compatibility,\n    Security\n}","import { TrashIcon } from \"@heroicons/react/solid\";\nimport { Link } from \"react-router-dom\";\nimport useProjects from \"../../hooks/useProjects\";\n\nexport default function AdminProjectsList() {\n  const { projects, projectsLoaded, metaData } = useProjects();\n\n  return (\n    <div>\n      {projectsLoaded && projects.length > 0 && (\n        <ul className=\"list-none\">\n          {projects.map((project) => (\n            <li key={project.id} className=\"relative list-item \">\n              <div className=\" flex flex-col lg:flex-row justify-between border-b border-b-gray-400 gap-y-3 lg:gap-y-0 lg:items-end py-5\">\n                <div className=\"flex-auto\">\n                  {!project.isActive && (\n                    <p className=\"font-Oswald text-base font-thin text-gray-500\">\n                      Archived\n                    </p>\n                  )}\n                  <Link to={`/projects/${project.slug}`}>\n                    <p className=\"font-Oswald font-thin text-2xl \">\n                      <span>{project.title}</span>\n                    </p>\n                  </Link>\n                  <p className=\" font-Montserrat font-thin text-lg max-w-3xl \">\n                    {project.description}\n                  </p>\n                </div>\n\n                <div className=\"px-10 self-end ml-auto flex-initial\">\n                  <button\n                    type=\"button\"\n                    title=\"edit\"\n                    className=\"flex flex-row gap-x-2\"\n                    onClick={() => {}}\n                  >\n                    <TrashIcon className=\"h6 w-6 text-red-500\" />\n                    <p className=\" font-Oswald text-lg font-thin\">\n                      {project.isActive ? \"Archive\" : \"Delete\"}\n                    </p>\n                  </button>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n","import { TrashIcon } from \"@heroicons/react/solid\";\nimport { format } from \"date-fns\";\nimport { Link } from \"react-router-dom\";\nimport useTickets from \"../../hooks/useTickets\";\nimport { TicketStatus, TicketPriority } from \"../../models/enums\";\n\nexport default function AdminTicketsList() {\n  const { tickets, ticketParams, metaData, ticketsLoaded } = useTickets();\n  return (\n    <div>\n      {ticketsLoaded && tickets.length > 0 && (\n        <ul className=\"list-none\">\n          {tickets.map((ticket) => (\n            <li key={ticket.id}>\n              <div className=\" flex flex-col gap-y-5 lg:gap-y-0 lg:flex-row justify-between border-b border-b-gray-400 items-end py-5\">\n                <div className=\"\">\n                  {!ticket.isActive && (\n                    <p className=\"font-Oswald text-base font-thin text-gray-500\">\n                      Archived\n                    </p>\n                  )}\n                  <Link to={`/tickets/${ticket.id}`}>\n                    <p className=\" font-Oswald font-thin leading-loose text-2xl\">\n                      {ticket.subject}\n                    </p>\n                  </Link>\n                  <p className=\" font-Montserrat font-thin text-lg pr-5 \">\n                    {ticket.body}\n                  </p>\n                </div>\n                <div className=\"grid grid-flow-col max-w-xl gap-x-10 ml-auto\">\n                  <div>\n                    <p className=\" font-Oswald text-base uppercase font-thin text-gray-500\">\n                      Created\n                    </p>\n                    <p className=\"font-Oswald text-xl font-thin\">\n                      {format(new Date(ticket.creationDate), \"dd/MM/yy\")}\n                    </p>\n                  </div>\n\n                  <div>\n                    <p className=\" font-Oswald text-base uppercase font-thin text-gray-500\">\n                      Status\n                    </p>\n                    <p className=\"font-Oswald text-xl font-thin uppercase\">\n                      {TicketStatus[ticket.status]}\n                    </p>\n                  </div>\n                  <div>\n                    <p className=\" font-Oswald text-base uppercase font-thin text-gray-500\">\n                      Priority\n                    </p>\n                    <p className=\"font-Oswald text-xl font-thin uppercase\">\n                      {TicketPriority[ticket.priority]}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"px-10 self-end ml-auto flex-initial\">\n                  <button\n                    type=\"button\"\n                    title=\"edit\"\n                    className=\"flex flex-row gap-x-2 \"\n                    onClick={() => {}}\n                  >\n                    <TrashIcon className=\"h6 w-6  text-red-500\" />\n                    <p className=\" font-Oswald text-lg font-thin\">\n                      {ticket.isActive ? \"Archive\" : \"Delete\"}\n                    </p>\n                  </button>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n","import { useCallback, useEffect, useState } from \"react\";\nimport agent from \"../../api/agent\";\nimport AppCheckbox from \"../common/AppCheckbox\";\nimport { AppUserFull } from \"../../models/user\";\n\ninterface Props {\n  user: AppUserFull;\n  handleClose: () => void;\n}\n\nexport default function AdminRolesForm({ user, handleClose }: Props) {\n  const [rolesLoaded, setRolesLoaded] = useState(false);\n  const [rolesLoading, setRolesLoading] = useState(false);\n  const [roles, setRoles] = useState<string[]>([]);\n  const [userRolesLoaded, setUserRolesLoaded] = useState(false);\n  const [userRolesLoading, setUserRolesLoading] = useState(false);\n  const [userRoles, setUserRoles] = useState<string[]>([]);\n\n  const loadRoles = useCallback(async () => {\n    try {\n      var result = await agent.Admin.listRoles();\n      setRoles(result);\n      setRolesLoaded(true);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setRolesLoading(false);\n    }\n  }, []);\n\n  const loadUserRoles = useCallback(async (id: string) => {\n    try {\n      var result = await agent.Admin.listUserRoles(id);\n      setUserRoles(result);\n      setUserRolesLoaded(true);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setUserRolesLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (user && !userRolesLoaded && !userRolesLoading) {\n      setUserRolesLoading(true);\n      loadUserRoles(user.id);\n    }\n  }, [loadUserRoles, user, userRolesLoaded, userRolesLoading]);\n\n  useEffect(() => {\n    if (!rolesLoading && !rolesLoaded) {\n      setRolesLoading(true);\n      loadRoles();\n    }\n  }, [loadRoles, rolesLoaded, rolesLoading]);\n\n  const handleRoleChange = (role: string, checked: boolean) => {\n    if (!checked) {\n      const items = userRoles.filter((r) => r !== role);\n      setUserRoles(items);\n      removeRoleAsync(user.id, role);\n    } else {\n      setUserRoles([...userRoles, role]);\n      addRoleAsync(user.id, role);\n    }\n  };\n\n  const addRoleAsync = async (id: string, role: string) => {\n    await agent.Admin.addRole(user.id, role);\n  };\n\n  const removeRoleAsync = async (id: string, role: string) => {\n    await agent.Admin.removeRole(user.id, role);\n  };\n\n  return (\n    <div className=\"py-4 flex items-center justify-center\">\n      <div className=\" max-w-md w-full\">\n        <p className=\" font-Oswald text-4xl font-thin  py-5\">\n          {`${user.displayName}'s Roles`}\n        </p>\n        <div>\n          {roles && roles.length > 0 && (\n            <ul className=\" list-none flex flex-col gap-y-5 w-full\">\n              {roles.map((role, index) => (\n                <li key={index}>\n                  <div>\n                    <AppCheckbox\n                      label={role}\n                      isChecked={userRoles.includes(role)}\n                      onChange={(value) => handleRoleChange(role, value)}\n                    />\n                  </div>\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n        <div className=\"flex flex-row gap-x-0 mx-auto w-full justify-center py-5\">\n          <button\n            className=\"cursor-pointer bg-slate-800 text-white py-1 px-5 uppercase font-Oswald text-xl font-thin\"\n            type=\"submit\"\n            onClick={handleClose}\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { PencilAltIcon, TrashIcon } from \"@heroicons/react/solid\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport agent from \"../../api/agent\";\nimport { AppUserFull } from \"../../models/user\";\nimport AdminRolesForm from \"./RolesForm\";\n\nexport default function AdminUsersList() {\n  const [users, setUsers] = useState<AppUserFull[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [selectedUser, setSelectedUser] = useState<AppUserFull | null>(null);\n  const isEditRoles = !!selectedUser;\n\n  const loadUsers = useCallback(async () => {\n    try {\n      setIsLoading(true);\n      const result = await agent.Account.listAll();\n      setUsers(result);\n      setIsLoaded(true);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!isLoaded) {\n      loadUsers();\n    }\n  }, [isLoaded, loadUsers]);\n\n  return (\n    <div>\n      {!isEditRoles ? (\n        <ul>\n          {users.map((user) => (\n            <li key={user.id}>\n              <div className=\" flex flex-col lg:flex-row justify-between border-b border-b-gray-400 gap-y-3 lg:gap-y-0 lg:items-end py-5\">\n                <div className=\"flex-auto\">\n                  {!user.isActive && (\n                    <p className=\"font-Oswald text-base font-thin text-gray-500\">\n                      Archived\n                    </p>\n                  )}\n                  <p className=\" font-Oswald font-thin text-2xl \">\n                    {user.displayName}\n                  </p>\n                  <p className=\" font-Montserrat font-thin text-lg max-w-3xl \">\n                    {user.title}\n                  </p>\n                </div>\n\n                <div className=\"px-10 self-end ml-auto flex-initial flex flex-row gap-x-5\">\n                  <button\n                    type=\"button\"\n                    title=\"edit\"\n                    className=\"flex flex-row gap-x-2\"\n                    onClick={() => setSelectedUser(user)}\n                  >\n                    <PencilAltIcon className=\"h6 w-6\" />\n                    <p className=\" font-Oswald text-lg font-thin\">Roles</p>\n                  </button>\n\n                  <button\n                    type=\"button\"\n                    title=\"edit\"\n                    className=\"flex flex-row gap-x-2 \"\n                    onClick={() => setSelectedUser(user)}\n                  >\n                    <TrashIcon className=\"h6 w-6  text-red-500\" />\n                    <p className=\" font-Oswald text-lg font-thin\">\n                      {user.isActive ? \"Archive\" : \"Delete\"}\n                    </p>\n                  </button>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <AdminRolesForm\n          user={selectedUser}\n          handleClose={() => setSelectedUser(null)}\n        />\n      )}\n    </div>\n  );\n}\n","import { useState } from \"react\";\nimport AdminProjectsList from \"../../components/Admin/ProjectsList\";\nimport AdminTicketsList from \"../../components/Admin/TicketsList\";\nimport AdminUsersList from \"../../components/Admin/UsersList\";\n\nexport default function AdminPanel() {\n  const [selectedIndex, setSelectedIndex] = useState(0);\n\n  const getPage = (index: number) => {\n    switch (index) {\n      case 0:\n        return <AdminUsersList />;\n      case 1:\n        return <AdminProjectsList />;\n\n      case 2:\n        return <AdminTicketsList />;\n    }\n  };\n  return (\n    <div className=\" w-full h-full min-h-screen bg-slate-100 pt-16 lg:pt-20\">\n      <div className=\"container mx-auto flex flex-col gap-y-5 py-10\">\n        <h1 className=\"flex-initial text-4xl lg:text-5xl font-Oswald mb-5 uppercase\">\n          Administration Panel\n        </h1>\n\n        <div className=\"relative w-full h-full p-10 bg-white text-black drop-shadow-md flex items-center justify-center\">\n          <ul className=\" list-none flex flex-row gap-x-5 mx-auto\">\n            {pages.map((page, index) => (\n              <li\n                className={`${\n                  selectedIndex === index\n                    ? \" border-b-red-600\"\n                    : \" border-b-transparent\"\n                } border-b-2 list-item transition-all duration-300`}\n                key={index}\n              >\n                <button type=\"button\" onClick={() => setSelectedIndex(index)}>\n                  <p className=\"font-Oswald text-2xl font-thin uppercase \">\n                    {page}\n                  </p>\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n        <div className=\"relative w-full h-full min-h-screen p-10 bg-white text-black drop-shadow-md\">\n          <p className=\"font-Oswald text-3xl font-thin uppercase leading-loose flex-initial\">\n            {pages[selectedIndex]}\n          </p>\n          {getPage(selectedIndex)}\n        </div>\n        {/* <div className=\"relative w-full h-full p-10 bg-white text-black drop-shadow-md\">\n          <AdminUsersList />\n        </div>\n\n        <div className=\"relative w-full h-full p-10 bg-white text-black drop-shadow-md\">\n          <AdminProjectsList />\n        </div>\n\n        <div className=\"relative w-full h-full p-10 bg-white text-black drop-shadow-md\">\n          <AdminTicketsList />\n        </div> */}\n      </div>\n    </div>\n  );\n}\n\nconst pages = [\"Users\", \"Projects\", \"Tickets\"];\n","import * as React from \"react\";\n\nfunction PencilAltIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(PencilAltIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction TrashIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(TrashIcon);\nexport default ForwardRef;"],"names":["React","props","svgRef","Object","assign","xmlns","viewBox","fill","ref","fillRule","d","clipRule","styles","AppCheckbox","label","isChecked","onChange","type","title","className","onClick","useProjects","projects","useAppSelector","projectSelectors","state","project","projectsLoaded","metaData","dispatch","useAppDispatch","useEffect","fetchProjectsAsync","useTickets","tickets","ticketSelectors","ticket","ticketsLoaded","ticketParams","fetchTicketsAsync","IssueOccurrence","TicketStatus","TicketPriority","IssueSeverity","IssueNature","AdminProjectsList","length","map","isActive","to","slug","description","TrashIcon","id","AdminTicketsList","subject","body","format","Date","creationDate","status","priority","AdminRolesForm","user","handleClose","useState","rolesLoaded","setRolesLoaded","rolesLoading","setRolesLoading","roles","setRoles","userRolesLoaded","setUserRolesLoaded","userRolesLoading","setUserRolesLoading","userRoles","setUserRoles","loadRoles","useCallback","agent","result","console","log","loadUserRoles","addRoleAsync","role","removeRoleAsync","displayName","index","includes","value","checked","items","filter","r","handleRoleChange","AdminUsersList","users","setUsers","setIsLoading","isLoaded","setIsLoaded","selectedUser","setSelectedUser","isEditRoles","loadUsers","PencilAltIcon","AdminPanel","selectedIndex","setSelectedIndex","pages","page","getPage","ForwardRef"],"sourceRoot":""}