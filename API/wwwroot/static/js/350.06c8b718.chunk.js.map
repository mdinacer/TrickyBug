{"version":3,"file":"static/js/350.06c8b718.chunk.js","mappings":"sJAOe,SAASA,EAAT,GAKJ,IAJTC,EAIQ,EAJRA,MACAC,EAGQ,EAHRA,MAGQ,IAFRC,cAAAA,OAEQ,MAFQ,cAER,MADRC,MAAAA,OACQ,SACR,OACE,eACEC,UAAS,UACPD,EAAQ,uBAAyB,wBAD1B,0EADX,WAKE,iBAAMC,UAAU,uDAAhB,SACGJ,IAEFC,GACC,iBAAMG,UAAU,kCAAhB,SAAmDH,KAEnD,iBAAMG,UAAU,8CAAhB,SACGF,S,sFChBLG,EAEF,+EAFEA,EAIF,0LAJEA,EAMF,mFAGW,SAASC,EAAYC,GAClC,OAA8BC,EAAAA,EAAAA,KAAc,kBAAKD,GAAN,IAAaE,aAAc,MAA9DC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,MAEpB,OACE,iBACEP,UAAS,kBACPG,EAAMK,UAAY,SAAW,kBADtB,mBAEPF,EAAWG,MAAQ,mBAAqB,iBAFjC,qBAGPR,GAJJ,WAME,qCACED,UAAWC,EACX,aAAYE,EAAMO,MAClBC,KAAMR,EAAMQ,MACRR,GACAI,IAELD,EAAWG,QACV,cAAGT,UAAWC,EAAd,SACGK,EAAWG,MAAMG,e,yIClCb,SAASC,IACtB,OAAkCC,EAAAA,EAAAA,IAAQ,CACxCC,KAAM,QADAC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,aAQjB,OACE,kBAAMC,SAAUD,GAJlB,SAA0BE,OAIwBnB,UAAU,gBAA1D,WACE,SAAC,IAAD,CACEoB,KAAM,EACNZ,WAAS,EACTQ,QAASA,EACTN,MAAM,SACNW,YAAY,iBACZC,KAAK,gBAEP,kBACEtB,UAAU,2FACVW,KAAK,SACLd,MAAO,YCtBA,SAAS0B,EAAT,GAAiE,IAAD,IAA7BC,cAAAA,OAA6B,MAAb,GAAa,EAC7E,OACE,iCACE,cAAGxB,UAAU,kCAAb,uBAEA,cAAGA,UAAU,2CAAb,SACGwB,GAAiB,EACd,cACkB,IAAlBA,EACA,YADA,UAEGA,EAFH,kB,wBC2BG,SAASC,EAAWC,EAAeC,IAChDC,EAAAA,EAAAA,GAAa,EAAGC,WAChB,IAAIC,GAAWC,EAAAA,EAAAA,GAAOL,GAClBM,GAAYD,EAAAA,EAAAA,GAAOJ,GACnBM,EAAOH,EAASI,UAAYF,EAAUE,UAE1C,OAAID,EAAO,GACD,EACCA,EAAO,EACT,EAEAA,ECtBI,SAASE,EAA2BT,EAAeC,IAChEC,EAAAA,EAAAA,GAAa,EAAGC,WAChB,IAAIC,GAAWC,EAAAA,EAAAA,GAAOL,GAClBM,GAAYD,EAAAA,EAAAA,GAAOJ,GACnBS,EAAWN,EAASO,cAAgBL,EAAUK,cAC9CC,EAAYR,EAASS,WAAaP,EAAUO,WAChD,OAAkB,GAAXH,EAAgBE,ECTV,SAASE,EAASC,IAC/Bb,EAAAA,EAAAA,GAAa,EAAGC,WAChB,IAAIa,GAAOX,EAAAA,EAAAA,GAAOU,GAElB,OADAC,EAAKC,SAAS,GAAI,GAAI,GAAI,KACnBD,ECJM,SAASE,EAAWH,IACjCb,EAAAA,EAAAA,GAAa,EAAGC,WAChB,IAAIa,GAAOX,EAAAA,EAAAA,GAAOU,GACdI,EAAQH,EAAKH,WAGjB,OAFAG,EAAKI,YAAYJ,EAAKL,cAAeQ,EAAQ,EAAG,GAChDH,EAAKC,SAAS,GAAI,GAAI,GAAI,KACnBD,ECLM,SAASK,EAAiBN,IACvCb,EAAAA,EAAAA,GAAa,EAAGC,WAChB,IAAIa,GAAOX,EAAAA,EAAAA,GAAOU,GAClB,OAAOD,EAASE,GAAMR,YAAcU,EAAWF,GAAMR,UCDxC,SAASc,EAAmBtB,EAAeC,IACxDC,EAAAA,EAAAA,GAAa,EAAGC,WAChB,IAIIoB,EAJAnB,GAAWC,EAAAA,EAAAA,GAAOL,GAClBM,GAAYD,EAAAA,EAAAA,GAAOJ,GACnBuB,EAAOzB,EAAWK,EAAUE,GAC5BmB,EAAaC,KAAKC,IAAIlB,EAA2BL,EAAUE,IAG/D,GAAImB,EAAa,EACfF,EAAS,MACJ,CACuB,IAAxBnB,EAASS,YAAoBT,EAASwB,UAAY,IAGpDxB,EAASyB,QAAQ,IAGnBzB,EAAS0B,SAAS1B,EAASS,WAAaW,EAAOC,GAG/C,IAAIM,EAAqBhC,EAAWK,EAAUE,MAAgBkB,EAE1DH,GAAiBhB,EAAAA,EAAAA,GAAOL,KAAkC,IAAfyB,GAA6D,IAAzC1B,EAAWC,EAAeM,KAC3FyB,GAAqB,GAGvBR,EAASC,GAAQC,EAAaO,OAAOD,IAIvC,OAAkB,IAAXR,EAAe,EAAIA,EC7Bb,SAASU,EAAyB7B,EAAUE,GAEzD,OADAJ,EAAAA,EAAAA,GAAa,EAAGC,YACTE,EAAAA,EAAAA,GAAOD,GAAUI,WAAYH,EAAAA,EAAAA,GAAOC,GAAWE,UC/BxD,IAAI0B,EAAc,CAChBC,KAAMT,KAAKS,KACXC,MAAOV,KAAKU,MACZC,MAAOX,KAAKW,MACZC,MAAO,SAAUnE,GACf,OAAOA,EAAQ,EAAIuD,KAAKS,KAAKhE,GAASuD,KAAKW,MAAMlE,KAK9C,SAASoE,EAAkBC,GAChC,OAAOA,EAASN,EAAYM,GAAUN,EAAW,MCqBpC,SAASO,EAAoBrC,EAAUE,EAAWoC,IAC/DxC,EAAAA,EAAAA,GAAa,EAAGC,WAChB,IAAII,EAAO0B,EAAyB7B,EAAUE,GAAa,IAC3D,OAAOiC,EAA8B,OAAZG,QAAgC,IAAZA,OAAqB,EAASA,EAAQC,eAA5EJ,CAA4FhC,G,cClCtF,SAASqC,EAAYC,GAClC,OCFa,SAAgBC,EAAQD,GACrC,GAAc,MAAVC,EACF,MAAM,IAAIC,UAAU,iEAKtB,IAAK,IAAIC,KAFTH,EAAcA,GAAe,GAGvBI,OAAOC,UAAUC,eAAeC,KAAKP,EAAaG,KACpDF,EAAOE,GAAYH,EAAYG,IAInC,OAAOF,EDXAO,CAAO,GAAIR,G,cEMhBS,EAAiB,KAEjBC,EAAmB,MA+GR,SAASC,EAAezC,EAAW0C,GAChD,IAAIf,EAAUvC,UAAUuD,OAAS,QAAsBC,IAAjBxD,UAAU,GAAmBA,UAAU,GAAK,IAClFD,EAAAA,EAAAA,GAAa,EAAGC,WAChB,IAAIyD,EAASlB,EAAQkB,QAAUC,EAAAA,EAE/B,IAAKD,EAAOJ,eACV,MAAM,IAAIM,WAAW,+CAGvB,IAAIC,EAAahE,EAAWgB,EAAW0C,GAEvC,GAAIO,MAAMD,GACR,MAAM,IAAID,WAAW,sBAGvB,IAGI1D,EACAE,EAJA2D,EAAkBrB,EAAYF,GAClCuB,EAAgBC,UAAYC,QAAQzB,EAAQwB,WAC5CD,EAAgBF,WAAaA,EAIzBA,EAAa,GACf3D,GAAWC,EAAAA,EAAAA,GAAOoD,GAClBnD,GAAYD,EAAAA,EAAAA,GAAOU,KAEnBX,GAAWC,EAAAA,EAAAA,GAAOU,GAClBT,GAAYD,EAAAA,EAAAA,GAAOoD,IAGrB,IAGIW,EAHAC,EAAU5B,EAAoBnC,EAAWF,GACzCkE,IAAmBC,EAAAA,EAAAA,GAAgCjE,IAAaiE,EAAAA,EAAAA,GAAgCnE,IAAa,IAC7GoE,EAAU9C,KAAKU,OAAOiC,EAAUC,GAAmB,IAGvD,GAAIE,EAAU,EACZ,OAAI9B,EAAQ+B,eACNJ,EAAU,EACLT,EAAOJ,eAAe,mBAAoB,EAAGS,GAC3CI,EAAU,GACZT,EAAOJ,eAAe,mBAAoB,GAAIS,GAC5CI,EAAU,GACZT,EAAOJ,eAAe,mBAAoB,GAAIS,GAC5CI,EAAU,GACZT,EAAOJ,eAAe,cAAe,KAAMS,GACzCI,EAAU,GACZT,EAAOJ,eAAe,mBAAoB,EAAGS,GAE7CL,EAAOJ,eAAe,WAAY,EAAGS,GAG9B,IAAZO,EACKZ,EAAOJ,eAAe,mBAAoB,EAAGS,GAE7CL,EAAOJ,eAAe,WAAYgB,EAASP,GAIjD,GAAIO,EAAU,GACnB,OAAOZ,EAAOJ,eAAe,WAAYgB,EAASP,GAC7C,GAAIO,EAAU,GACnB,OAAOZ,EAAOJ,eAAe,cAAe,EAAGS,GAC1C,GAAIO,EAAUlB,EAAgB,CACnC,IAAIoB,EAAQhD,KAAKU,MAAMoC,EAAU,IACjC,OAAOZ,EAAOJ,eAAe,cAAekB,EAAOT,GAC9C,GAAIO,EAhLoB,KAiL7B,OAAOZ,EAAOJ,eAAe,QAAS,EAAGS,GACpC,GAAIO,EAAUjB,EAAkB,CACrC,IAAIoB,EAAOjD,KAAKU,MAAMoC,EAAUlB,GAChC,OAAOM,EAAOJ,eAAe,QAASmB,EAAMV,GACvC,GAAIO,EAnLe,MAqLxB,OADAJ,EAAS1C,KAAKU,MAAMoC,EAAUjB,GACvBK,EAAOJ,eAAe,eAAgBY,EAAQH,GAKvD,IAFAG,EAAS9C,EAAmBhB,EAAWF,IAE1B,GAAI,CACf,IAAIwE,EAAelD,KAAKU,MAAMoC,EAAUjB,GACxC,OAAOK,EAAOJ,eAAe,UAAWoB,EAAcX,GAEtD,IAAIY,EAAyBT,EAAS,GAClCU,EAAQpD,KAAKW,MAAM+B,EAAS,IAEhC,OAAIS,EAAyB,EACpBjB,EAAOJ,eAAe,cAAesB,EAAOb,GAC1CY,EAAyB,EAC3BjB,EAAOJ,eAAe,aAAcsB,EAAOb,GAE3CL,EAAOJ,eAAe,eAAgBsB,EAAQ,EAAGb,GC3M/C,SAASc,EAAT,GAA8C,EAAlBC,QACzC,OACE,iCACE,iBAAK1G,UAAU,kFAAf,WACE,cAAGA,UAAU,+CAAb,0BAIA,cAAGA,UAAU,0CAAb,SACGkF,EAAe,IAAIyB,KAAK,cAAe,IAAIA,KAAQ,CAClDf,WAAW,UAIjB,cAAG5F,UAAU,iCAAb,mNAMA,cAAGA,UAAU,mBAAb,wDCpBS,SAAS4G,EAAT,GAA4C,IAApBC,EAAmB,EAAnBA,SACrC,OACE,eAAI7G,UAAU,6BAAd,SACG6G,EAASC,KAAI,SAACJ,EAASK,GAAV,OACZ,eAEE/G,UAAU,4FAFZ,UAIE,SAACyG,EAAD,CAAkBC,QAASA,KAHtBK,QCPA,SAASC,IACtB,OACE,iCACE,gBAAKhH,UAAU,oFAAf,UACE,SAACuB,EAAD,OAEF,gBAAKvB,UAAU,2DAAf,UACE,SAAC4G,EAAD,CAAcC,SAAUI,MAAMC,KAAKD,MAAM,IAAIE,aAG/C,SAACtG,EAAD,O,wBCPS,SAASuG,EAAT,GAA0C,IAAlBC,EAAiB,EAAjBA,OACrC,OACE,iCACE,iBAAKrH,UAAU,uEAAf,WACE,cAAGA,UAAU,wBAAb,SAAsCqH,EAAOC,WAC7C,eAAGtH,UAAU,2CAAb,qBACWqH,EAAOE,UAIpB,iBAAKvH,UAAU,OAAf,WACE,cAAGA,UAAU,6DAAb,sBAGA,cAAGA,UAAU,gCAAb,SAA8CqH,EAAOG,WACrD,cAAGxH,UAAU,mDAAb,0BAGA,cAAGA,UAAU,6BAAb,SAA2CqH,EAAOI,QAElD,eAAGzH,UAAU,mGAAb,WACE,0CACA,2BAAO0H,EAAAA,EAAAA,GAAO,IAAIf,KAAKU,EAAOM,cAAe,mBAC7C,kCACA,0BAAON,EAAOO,kB,cCxBT,SAASC,EAAT,GAAwC,IAAD,EAAjBR,EAAiB,EAAjBA,OACnC,OACE,iBAAKrH,UAAU,uCAAf,WACE,SAACL,EAAA,EAAD,CAAWC,MAAM,WAAWC,MAAOwH,EAAOS,YAC1C,SAACnI,EAAA,EAAD,CAAWC,MAAM,SAASC,MAAOwH,EAAOU,UACxC,SAACpI,EAAA,EAAD,CACEC,MAAM,gBACNC,MAAK,UAAEwH,EAAOW,aAAT,aAAE,EAAcpI,MACrBE,cAAc,cAGfuH,EAAOY,cACN,iCACE,SAACtI,EAAA,EAAD,CAAWC,MAAM,aAAaC,MAAOwH,EAAOY,YAAYC,cACxD,SAACvI,EAAA,EAAD,CAAWC,MAAM,SAASC,MAAOwH,EAAOY,YAAYE,UACpD,SAACxI,EAAA,EAAD,CAAWC,MAAM,WAAWC,MAAOwH,EAAOY,YAAYG,eAG1D,SAACzI,EAAA,EAAD,CACEC,MAAM,kBACNC,MAAOwH,EAAOgB,eACdvI,cAAc,gBAGhB,iBAAKE,UAAU,4CAAf,WACE,SAACL,EAAA,EAAD,CACEC,MAAM,mBACNC,MAAOwH,EAAOY,YAAYK,gBAC1BvI,OAAK,KAGP,SAACJ,EAAA,EAAD,CACEC,MAAM,kBACNC,MAAOwH,EAAOY,YAAYM,QAC1BxI,OAAK,QAGT,iBAAKC,UAAU,4FAAf,WACE,cAAGA,UAAU,uDAAb,wBAGCqH,EAAOY,YAAYO,OAClB,mBAAQxI,UAAU,0CAAlB,mBAIA,cAAGA,UAAU,8CAAb,+B,cC3CK,SAASyI,IACtB,IAAQlB,GAAOmB,EAAAA,EAAAA,MAAPnB,GAER,IADiBoB,EAAAA,EAAAA,OACWC,EAAAA,EAAAA,UAAmC,OAA/D,eAAOvB,EAAP,KAAewB,EAAf,KACA,GAA4BD,EAAAA,EAAAA,WAAS,GAArC,eAAOE,EAAP,KAAeC,EAAf,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KACgBC,GAAiBC,EAAAA,EAAAA,KAAe,SAACC,GAAD,OAAWA,EAAM/B,UAAzDU,OAgBR,OAdAsB,EAAAA,EAAAA,YAAU,YACJ9B,GAAOuB,GAAWE,IACpBC,GAAW,GACXK,EAAAA,EAAAA,QAAAA,QAAsBC,SAAShC,IAC5BiC,MAAK,SAACC,GACLZ,EAAUY,GACVV,GAAU,GACVW,QAAQC,IAAIF,MAEbG,OAAM,SAACC,GAAD,OAASH,QAAQC,IAAIE,MAC3BC,SAAQ,kBAAMb,GAAW,SAE7B,CAAC1B,EAAIuB,EAAQE,EAAS3B,IAErB6B,EAAaa,SAAS,YACjB,SAACC,EAAA,EAAD,CAAkBpJ,QAAQ,sBAE9ByG,GAEH,iBAAKrH,UAAU,sFAAf,WACE,iBAAKA,UAAU,6DAAf,WACE,gBAAKA,UAAU,uDAAf,UACE,SAACoH,EAAD,CAAcC,OAAQA,OAGxB,gBAAKrH,UAAU,uDAAf,UACE,SAAC6H,EAAD,CAAYR,OAAQA,UAGxB,gBAAKrH,UAAU,mEAAf,UACE,gBAAKA,UAAU,+EAAf,UACE,SAACgH,EAAD,YAdY","sources":["app/components/common/LabelItem.tsx","app/components/common/TextArea.tsx","app/components/comments/CommentForm.tsx","app/components/comments/CommentsContainerHeader.tsx","../node_modules/date-fns/esm/compareAsc/index.js","../node_modules/date-fns/esm/differenceInCalendarMonths/index.js","../node_modules/date-fns/esm/endOfDay/index.js","../node_modules/date-fns/esm/endOfMonth/index.js","../node_modules/date-fns/esm/isLastDayOfMonth/index.js","../node_modules/date-fns/esm/differenceInMonths/index.js","../node_modules/date-fns/esm/differenceInMilliseconds/index.js","../node_modules/date-fns/esm/_lib/roundingMethods/index.js","../node_modules/date-fns/esm/differenceInSeconds/index.js","../node_modules/date-fns/esm/_lib/cloneObject/index.js","../node_modules/date-fns/esm/_lib/assign/index.js","../node_modules/date-fns/esm/formatDistance/index.js","app/components/comments/CommentsListItem.tsx","app/components/comments/CommentsList.tsx","app/components/comments/CommentsContainer.tsx","app/components/ticketDetails/TicketHeader.tsx","app/components/ticketDetails/TicketInfo.tsx","app/pages/Tickets/TicketDetailsPage.tsx"],"sourcesContent":["interface Props {\n  title: string;\n  value: any | null;\n  fallbackValue?: any;\n  isCol?: boolean;\n}\n\nexport default function LabelItem({\n  title,\n  value,\n  fallbackValue = \"Unavailable\",\n  isCol = false,\n}: Props) {\n  return (\n    <p\n      className={`${\n        isCol ? \"flex-col items-start\" : \"flex-row items-center\"\n      } flex w-full justify-between font-Montserrat border-b border-b-inherit`}\n    >\n      <span className=\"text-xl uppercase font-Oswald font-thin min-w-[7rem]\">\n        {title}\n      </span>\n      {value ? (\n        <span className=\"text-lg first-letter:capitalize\">{value}</span>\n      ) : (\n        <span className=\"text-base uppercase font-thin text-gray-500\">\n          {fallbackValue}\n        </span>\n      )}\n    </p>\n  );\n}\n","import { useController, UseControllerProps } from \"react-hook-form\";\n\ninterface Props extends UseControllerProps {\n  label: string;\n  type?: string;\n  placeholder: string;\n  rows?: number;\n  fullWidth?: boolean;\n}\n\nconst styles = {\n  inputContainer:\n    \"border-x-2 border-x-slate-200 h-full bg-slate-500 flex flex-row items-center\",\n  inputStyle:\n    \"font-Montserrat resize-none font-thin text-2xl text-white placeholder:text-gray-300 placeholder:font-Oswald pb-2 pt-3 px-5 w-full h-full block bg-transparent focus-within:outline-none\",\n  inputValidationStyle:\n    \"h-auto font-Oswald text-lg leading-none w-full font-thin px-5 py-0 text-gray-600\",\n};\n\nexport default function AppTextArea(props: Props) {\n  const { fieldState, field } = useController({ ...props, defaultValue: \"\" });\n\n  return (\n    <div\n      className={`\n      ${props.fullWidth ? \"w-full\" : \"w-full max-w-sm\"}\n      ${fieldState.error ? \"border-x-red-500\" : \"border-x-white\"}  \n      ${styles.inputContainer}`}\n    >\n      <textarea\n        className={styles.inputStyle}\n        aria-label={props.label}\n        type={props.type}\n        {...props}\n        {...field}\n      />\n      {fieldState.error && (\n        <p className={styles.inputValidationStyle}>\n          {fieldState.error.message}\n        </p>\n      )}\n    </div>\n  );\n}\n","import { useForm, FieldValues } from \"react-hook-form\";\nimport AppTextArea from \"../common/TextArea\";\nimport AppTextInput from \"../common/TextInput\";\n\nexport default function CommentForm() {\n  const { control, handleSubmit } = useForm({\n    mode: \"all\",\n    //resolver: yupResolver<any>(productValidation)\n  });\n\n  function handleSubmitData(data: FieldValues) {\n    // dispatch(setProjectParams(data));\n  }\n  return (\n    <form onSubmit={handleSubmit(handleSubmitData)} className=\"flex flex-row\">\n      <AppTextArea\n        rows={4}\n        fullWidth\n        control={control}\n        label=\"search\"\n        placeholder=\"post a comment\"\n        name=\"searchTerm\"\n      />\n      <input\n        className=\"cursor-pointer bg-slate-800 text-white py-1 px-5 uppercase font-Oswald text-xl font-thin\"\n        type=\"submit\"\n        value={\"Post\"}\n      />\n    </form>\n  );\n}\n","interface Props {\n  commentsCount?: number;\n}\n\nexport default function CommentsContainerHeader({ commentsCount = 52 }: Props) {\n  return (\n    <>\n      <p className=\" font-Oswald uppercase text-2xl\">Comments</p>\n\n      <p className=\" font-Oswald text-lg uppercase font-thin\">\n        {commentsCount <= 0\n          ? \"No Comments\"\n          : commentsCount === 1\n          ? \"1 Comment\"\n          : `${commentsCount} comments`}\n      </p>\n    </>\n  );\n}\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\n\nexport default function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\n\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from \"../toDate/index.js\";\nimport endOfDay from \"../endOfDay/index.js\";\nimport endOfMonth from \"../endOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * var result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\n\nexport default function isLastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return endOfDay(date).getTime() === endOfMonth(date).getTime();\n}","import toDate from \"../toDate/index.js\";\nimport differenceInCalendarMonths from \"../differenceInCalendarMonths/index.js\";\nimport compareAsc from \"../compareAsc/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport isLastDayOfMonth from \"../isLastDayOfMonth/index.js\";\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates using trunc as a default rounding method.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  var result; // Check for the difference of less than month\n\n  if (difference < 1) {\n    result = 0;\n  } else {\n    if (dateLeft.getMonth() === 1 && dateLeft.getDate() > 27) {\n      // This will check if the date is end of Feb and assign a higher end of month date\n      // to compare it with Jan\n      dateLeft.setDate(30);\n    }\n\n    dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n    // If so, result must be decreased by 1 in absolute value\n\n    var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign; // Check for cases of one full calendar month\n\n    if (isLastDayOfMonth(toDate(dirtyDateLeft)) && difference === 1 && compareAsc(dirtyDateLeft, dateRight) === 1) {\n      isLastMonthNotFull = false;\n    }\n\n    result = sign * (difference - Number(isLastMonthNotFull));\n  } // Prevent negative zero\n\n\n  return result === 0 ? 0 : result;\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dateLeft, dateRight) {\n  requiredArgs(2, arguments);\n  return toDate(dateLeft).getTime() - toDate(dateRight).getTime();\n}","var roundingMap = {\n  ceil: Math.ceil,\n  round: Math.round,\n  floor: Math.floor,\n  trunc: function (value) {\n    return value < 0 ? Math.ceil(value) : Math.floor(value);\n  } // Math.trunc is not supported by IE\n\n};\nvar defaultRoundingMethod = 'trunc';\nexport function getRoundingMethod(method) {\n  return method ? roundingMap[method] : roundingMap[defaultRoundingMethod];\n}","import differenceInMilliseconds from \"../differenceInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport { getRoundingMethod } from \"../_lib/roundingMethods/index.js\";\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @param {Object} [options] - an object with options.\n * @param {String} [options.roundingMethod='trunc'] - a rounding method (`ceil`, `floor`, `round` or `trunc`)\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dateLeft, dateRight, options) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dateLeft, dateRight) / 1000;\n  return getRoundingMethod(options === null || options === void 0 ? void 0 : options.roundingMethod)(diff);\n}","import assign from \"../assign/index.js\";\nexport default function cloneObject(dirtyObject) {\n  return assign({}, dirtyObject);\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (Object.prototype.hasOwnProperty.call(dirtyObject, property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import compareAsc from \"../compareAsc/index.js\";\nimport differenceInMonths from \"../differenceInMonths/index.js\";\nimport differenceInSeconds from \"../differenceInSeconds/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport cloneObject from \"../_lib/cloneObject/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MINUTES_IN_DAY = 1440;\nvar MINUTES_IN_ALMOST_TWO_DAYS = 2520;\nvar MINUTES_IN_MONTH = 43200;\nvar MINUTES_IN_TWO_MONTHS = 86400;\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `distanceInWords ` to `formatDistance`\n *   to make its name consistent with `format` and `formatRelative`.\n *\n * - The order of arguments is swapped to make the function\n *   consistent with `differenceIn...` functions.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   distanceInWords(\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *\n *   // v2.0.0 onward\n *\n *   formatDistance(\n *     new Date(1986, 3, 4, 11, 32, 0),\n *     new Date(1986, 3, 4, 10, 32, 0),\n *     { addSuffix: true }\n *   ) //=> 'in about 1 hour'\n *   ```\n *\n * @param {Date|Number} date - the date\n * @param {Date|Number} baseDate - the date to compare with\n * @param {Object} [options] - an object with options.\n * @param {Boolean} [options.includeSeconds=false] - distances less than a minute are more detailed\n * @param {Boolean} [options.addSuffix=false] - result indicates if the second date is earlier or later than the first\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @returns {String} the distance in words\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `baseDate` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\n\nexport default function formatDistance(dirtyDate, dirtyBaseDate) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  requiredArgs(2, arguments);\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.formatDistance) {\n    throw new RangeError('locale must contain formatDistance property');\n  }\n\n  var comparison = compareAsc(dirtyDate, dirtyBaseDate);\n\n  if (isNaN(comparison)) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var localizeOptions = cloneObject(options);\n  localizeOptions.addSuffix = Boolean(options.addSuffix);\n  localizeOptions.comparison = comparison;\n  var dateLeft;\n  var dateRight;\n\n  if (comparison > 0) {\n    dateLeft = toDate(dirtyBaseDate);\n    dateRight = toDate(dirtyDate);\n  } else {\n    dateLeft = toDate(dirtyDate);\n    dateRight = toDate(dirtyBaseDate);\n  }\n\n  var seconds = differenceInSeconds(dateRight, dateLeft);\n  var offsetInSeconds = (getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft)) / 1000;\n  var minutes = Math.round((seconds - offsetInSeconds) / 60);\n  var months; // 0 up to 2 mins\n\n  if (minutes < 2) {\n    if (options.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance('lessThanXSeconds', 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance('lessThanXSeconds', 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance('lessThanXSeconds', 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance('halfAMinute', null, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance('lessThanXMinutes', 1, localizeOptions);\n      } else {\n        return locale.formatDistance('xMinutes', minutes, localizeOptions);\n      }\n    } // 2 mins up to 0.75 hrs\n\n  } else if (minutes < 45) {\n    return locale.formatDistance('xMinutes', minutes, localizeOptions); // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance('aboutXHours', 1, localizeOptions); // 1.5 hrs up to 24 hrs\n  } else if (minutes < MINUTES_IN_DAY) {\n    var hours = Math.round(minutes / 60);\n    return locale.formatDistance('aboutXHours', hours, localizeOptions); // 1 day up to 1.75 days\n  } else if (minutes < MINUTES_IN_ALMOST_TWO_DAYS) {\n    return locale.formatDistance('xDays', 1, localizeOptions); // 1.75 days up to 30 days\n  } else if (minutes < MINUTES_IN_MONTH) {\n    var days = Math.round(minutes / MINUTES_IN_DAY);\n    return locale.formatDistance('xDays', days, localizeOptions); // 1 month up to 2 months\n  } else if (minutes < MINUTES_IN_TWO_MONTHS) {\n    months = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('aboutXMonths', months, localizeOptions);\n  }\n\n  months = differenceInMonths(dateRight, dateLeft); // 2 months up to 12 months\n\n  if (months < 12) {\n    var nearestMonth = Math.round(minutes / MINUTES_IN_MONTH);\n    return locale.formatDistance('xMonths', nearestMonth, localizeOptions); // 1 year up to max Date\n  } else {\n    var monthsSinceStartOfYear = months % 12;\n    var years = Math.floor(months / 12); // N years up to 1 years 3 months\n\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance('aboutXYears', years, localizeOptions); // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance('overXYears', years, localizeOptions); // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance('almostXYears', years + 1, localizeOptions);\n    }\n  }\n}","import { formatDistance } from \"date-fns\";\n\ninterface Props {\n  comment: any;\n}\n\nexport default function CommentsListItem({ comment }: Props) {\n  return (\n    <>\n      <div className=\"flex flex-row justify-between w-full items-center border-b border-gray-500 mb-3\">\n        <p className=\" font-Oswald font-thin text-lg leading-loose\">\n          Bob Bobbity\n        </p>\n\n        <p className=\" font-Montserrat text-xs  text-gray-700\">\n          {formatDistance(new Date(\"02-12-2022\"), new Date(), {\n            addSuffix: true,\n          })}\n        </p>\n      </div>\n      <p className=\" font-Montserrat min-w-[12rem]\">\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Quis tempora\n        distinctio minima incidunt praesentium perspiciatis aspernatur. Quia\n        repellat molestiae quaerat maiores! At animi beatae quas?\n      </p>\n\n      <p className=\" font-Montserrat\">\n        Lorem ipsum dolor sit amet consectetur.\n      </p>\n    </>\n  );\n}\n","import CommentsListItem from \"./CommentsListItem\";\n\ninterface Props {\n  comments: any[];\n}\n\nexport default function CommentsList({ comments }: Props) {\n  return (\n    <ul className=\"flex flex-col gap-y-2 pr-5\">\n      {comments.map((comment, index) => (\n        <li\n          key={index}\n          className=\"w-full bg-slate-100 px-10 rounded-md h-auto py-5  flex flex-col justify-start items-start\"\n        >\n          <CommentsListItem comment={comment} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import CommentForm from \"./CommentForm\";\nimport CommentsContainerHeader from \"./CommentsContainerHeader\";\nimport CommentsList from \"./CommentsList\";\n\nexport default function CommentsContainer() {\n  return (\n    <>\n      <div className=\"flex flex-row justify-between items-end border-b-2 border-black pb-1 flex-initial\">\n        <CommentsContainerHeader />\n      </div>\n      <div className=\"flex-auto overflow-y-scroll overflow-x-hidden py-5 my-5 \">\n        <CommentsList comments={Array.from(Array(52).keys())} />\n      </div>\n\n      <CommentForm />\n    </>\n  );\n}\n","import { format } from \"date-fns\";\nimport { ProjectTicketFull } from \"../../models/ticket\";\n\ninterface Props {\n  ticket: ProjectTicketFull;\n}\n\nexport default function TicketHeader({ ticket }: Props) {\n  return (\n    <>\n      <div className=\"flex flex-row justify-between items-end border-b-2 border-black pb-1\">\n        <p className=\" font-Oswald text-4xl\">{ticket.project}</p>\n        <p className=\" font-Oswald text-lg uppercase font-thin\">\n          Ticket #{ticket.id}\n        </p>\n      </div>\n\n      <div className=\"pt-5\">\n        <p className=\" font-Oswald leading-normal font-thin text-base  uppercase\">\n          Subject\n        </p>\n        <p className=\" font-Montserrat text-lg pb-3\">{ticket.subject}</p>\n        <p className=\" font-Oswald leading-normal font-thin  uppercase\">\n          Description\n        </p>\n        <p className=\" font-Montserrat text-base\">{ticket.body}</p>\n\n        <p className=\" font-Oswald uppercase text-gray-600 pt-3 text-right font-thin flex flex-row gap-x-2 justify-end\">\n          <span>Posted the</span>\n          <span>{format(new Date(ticket.creationDate), \"EE dd MMM yy\")}</span>\n          <span>by</span>\n          <span>{ticket.author}</span>\n        </p>\n      </div>\n    </>\n  );\n}\n","import { ProjectTicketFull } from \"../../models/ticket\";\nimport LabelItem from \"../common/LabelItem\";\n\ninterface Props {\n  ticket: ProjectTicketFull;\n}\n\nexport default function TicketInfo({ ticket }: Props) {\n  return (\n    <div className=\"flex flex-col gap-y-3 border-b-black\">\n      <LabelItem title=\"Priority\" value={ticket.priority} />\n      <LabelItem title=\"Status\" value={ticket.status} />\n      <LabelItem\n        title=\"Related Phase\"\n        value={ticket.phase?.title}\n        fallbackValue=\"undefined\"\n      />\n\n      {ticket.description && (\n        <>\n          <LabelItem title=\"Occurrence\" value={ticket.description.occurrence} />\n          <LabelItem title=\"Nature\" value={ticket.description.nature} />\n          <LabelItem title=\"Severity\" value={ticket.description.severity} />\n        </>\n      )}\n      <LabelItem\n        title=\"Assigned member\"\n        value={ticket.assignedMember}\n        fallbackValue=\"Unassigned\"\n      />\n\n      <div className=\"py-2 border-b-black flex flex-col gap-y-3\">\n        <LabelItem\n          title=\"Operating system\"\n          value={ticket.description.operatingSystem}\n          isCol\n        />\n\n        <LabelItem\n          title=\"Browser version\"\n          value={ticket.description.browser}\n          isCol\n        />\n      </div>\n      <div className=\" flex flex-row items-end  w-full justify-between font-Montserrat border-b border-b-black \">\n        <p className=\"text-lg uppercase font-Oswald font-thin min-w-[7rem]\">\n          Screenshot\n        </p>\n        {ticket.description.photo ? (\n          <button className=\"text-lg uppercase font-Oswald font-thin\">\n            View\n          </button>\n        ) : (\n          <p className=\"text-base uppercase font-thin text-gray-500\">\n            Unavailable\n          </p>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport agent from \"../../api/agent\";\nimport CommentsContainer from \"../../components/comments/CommentsContainer\";\nimport LoadingComponent from \"../../components/common/LoadingComponent\";\nimport TicketHeader from \"../../components/ticketDetails/TicketHeader\";\nimport TicketInfo from \"../../components/ticketDetails/TicketInfo\";\nimport { ProjectTicketFull } from \"../../models/ticket\";\nimport { useAppDispatch, useAppSelector } from \"../../store/configureStore\";\n\nexport default function TicketDetailsPage() {\n  const { id } = useParams<{ id: string }>();\n  const dispatch = useAppDispatch();\n  const [ticket, setTicket] = useState<ProjectTicketFull | null>(null);\n  const [loaded, setLoaded] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const { status: ticketStatus } = useAppSelector((state) => state.ticket);\n\n  useEffect(() => {\n    if (id && !loaded && !loading) {\n      setLoading(true);\n      agent.Tickets.details(parseInt(id))\n        .then((response) => {\n          setTicket(response);\n          setLoaded(true);\n          console.log(response);\n        })\n        .catch((err) => console.log(err))\n        .finally(() => setLoading(false));\n    }\n  }, [id, loaded, loading, ticket]);\n\n  if (ticketStatus.includes(\"pending\"))\n    return <LoadingComponent message=\"Loading ticket...\" />;\n\n  if (!ticket) return <div>not found</div>;\n  return (\n    <div className=\" min-h-screen w-full h-screen  bg-slate-600 pb-10 pt-16 flex flex-row items-center \">\n      <div className=\"w-1/3 h-full flex-initial px-10 py-5 flex flex-col gap-y-5\">\n        <div className=\" bg-slate-300 rounded-md overflow-hidden px-10 py-10\">\n          <TicketHeader ticket={ticket} />\n        </div>\n\n        <div className=\" bg-slate-300 rounded-md overflow-hidden px-10 py-10\">\n          <TicketInfo ticket={ticket} />\n        </div>\n      </div>\n      <div className=\"w-2/3 relative h-full flex-auto px-10 py-5 flex flex-col gap-y-5\">\n        <div className=\" bg-slate-300 flex-auto rounded-md overflow-hidden px-10 py-5 flex flex-col \">\n          <CommentsContainer />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":["LabelItem","title","value","fallbackValue","isCol","className","styles","AppTextArea","props","useController","defaultValue","fieldState","field","fullWidth","error","label","type","message","CommentForm","useForm","mode","control","handleSubmit","onSubmit","data","rows","placeholder","name","CommentsContainerHeader","commentsCount","compareAsc","dirtyDateLeft","dirtyDateRight","requiredArgs","arguments","dateLeft","toDate","dateRight","diff","getTime","differenceInCalendarMonths","yearDiff","getFullYear","monthDiff","getMonth","endOfDay","dirtyDate","date","setHours","endOfMonth","month","setFullYear","isLastDayOfMonth","differenceInMonths","result","sign","difference","Math","abs","getDate","setDate","setMonth","isLastMonthNotFull","Number","differenceInMilliseconds","roundingMap","ceil","round","floor","trunc","getRoundingMethod","method","differenceInSeconds","options","roundingMethod","cloneObject","dirtyObject","target","TypeError","property","Object","prototype","hasOwnProperty","call","assign","MINUTES_IN_DAY","MINUTES_IN_MONTH","formatDistance","dirtyBaseDate","length","undefined","locale","defaultLocale","RangeError","comparison","isNaN","localizeOptions","addSuffix","Boolean","months","seconds","offsetInSeconds","getTimezoneOffsetInMilliseconds","minutes","includeSeconds","hours","days","nearestMonth","monthsSinceStartOfYear","years","CommentsListItem","comment","Date","CommentsList","comments","map","index","CommentsContainer","Array","from","keys","TicketHeader","ticket","project","id","subject","body","format","creationDate","author","TicketInfo","priority","status","phase","description","occurrence","nature","severity","assignedMember","operatingSystem","browser","photo","TicketDetailsPage","useParams","useAppDispatch","useState","setTicket","loaded","setLoaded","loading","setLoading","ticketStatus","useAppSelector","state","useEffect","agent","parseInt","then","response","console","log","catch","err","finally","includes","LoadingComponent"],"sourceRoot":""}