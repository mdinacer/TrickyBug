{"version":3,"file":"static/js/353.2e136a44.chunk.js","mappings":"mNAOMA,GAAoBC,EAAAA,EAAAA,OACxB,kBAAM,yDAGO,SAASC,IACtB,IAAQC,GAASC,EAAAA,EAAAA,MAATD,KACR,GAA8BE,EAAAA,EAAAA,eAAqCC,GAAnE,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BH,EAAAA,EAAAA,WAAS,GAArC,eAAOI,EAAP,KAAeC,EAAf,KACA,GAA4BL,EAAAA,EAAAA,UAAyB,IAArD,eAAOM,EAAP,KAAeC,EAAf,KACA,GAA8BP,EAAAA,EAAAA,WAAS,GAAvC,eAAOQ,EAAP,KAAgBC,EAAhB,KAgCA,OA9BAC,EAAAA,EAAAA,YAAU,WAUR,OATAD,GAAW,GACPX,GACFa,EAAAA,EAAAA,SAAAA,QAAuBb,GACpBc,MAAK,SAACC,GACLV,EAAWU,MAEZC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAC3BG,SAAQ,kBAAMT,GAAW,MAEvB,WACLN,OAAWF,MAEZ,CAACH,KAEJY,EAAAA,EAAAA,YAAU,WAUR,OATIR,IAAYE,GACdO,EAAAA,EAAAA,SAAAA,WAA0BT,EAAQiB,IAC/BP,MAAK,SAACC,GACLN,EAAUM,MAEXC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAC3BG,SAAQ,kBAAMb,GAAU,MAGtB,WACLE,EAAU,OAEX,CAACH,EAAQF,IAERM,GACK,SAAC,IAAD,CAAkBY,QAAQ,gCAC9BlB,GAGH,gBAAKmB,UAAU,8DAAf,UACE,iBAAKA,UAAU,qEAAf,WACE,cAAGA,UAAU,+DAAb,qBAGA,eAAIA,UAAU,oDAAd,SACGnB,EAAQoB,QAEVhB,EAAOiB,OAAS,GACf,SAAC5B,EAAD,CACE6B,UAAWtB,EAAQiB,GACnBb,OAAQA,EACRmB,YAAavB,EAAQJ,QAGvB,gBAAKuB,UAAU,+CAAf,UACE,cAAGA,UAAU,0BAAb,iDAnBW,gBAAKA,UAAU,QAAf","sources":["app/pages/projects/ProjectPhasesPage.tsx"],"sourcesContent":["import { useState, useEffect, lazy } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport agent from \"../../api/agent\";\nimport LoadingComponent from \"../../components/common/LoadingComponent\";\nimport { ProjectPhase } from \"../../models/phase\";\nimport { ProjectDetails } from \"../../models/project\";\n\nconst ProjectPhasesList = lazy(\n  () => import(\"../../components/projects/projectPhases/ProjectPhasesList\")\n);\n\nexport default function ProjectPhasesPage() {\n  const { slug } = useParams<{ slug: string }>();\n  const [project, setProject] = useState<ProjectDetails | undefined>(undefined);\n  const [loaded, setLoaded] = useState(false);\n  const [phases, setPhases] = useState<ProjectPhase[]>([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    if (slug) {\n      agent.Projects.details(slug)\n        .then((response) => {\n          setProject(response);\n        })\n        .catch((err) => console.log(err))\n        .finally(() => setLoading(false));\n    }\n    return () => {\n      setProject(undefined);\n    };\n  }, [slug]);\n\n  useEffect(() => {\n    if (project && !loaded) {\n      agent.Projects.listPhases(project.id)\n        .then((response) => {\n          setPhases(response);\n        })\n        .catch((err) => console.log(err))\n        .finally(() => setLoaded(false));\n    }\n\n    return () => {\n      setPhases([]);\n    };\n  }, [loaded, project]);\n\n  if (loading)\n    return <LoadingComponent message=\"Loading Phases, please wait\" />;\n  if (!project) return <div className=\"py-20\">Not Found</div>;\n\n  return (\n    <div className=\"h-full min-h-screen w-screen bg-slate-300 pb-10 pt-20  px-5\">\n      <div className=\"container mx-auto flex flex-col  w-full rounded-md overflow-hidden\">\n        <p className=\"text-2xl font-Oswald uppercase underline underline-offset-2 \">\n          Phases\n        </p>\n        <h1 className=\"flex-initial text-5xl font-Oswald mb-10 uppercase\">\n          {project.title}\n        </h1>\n        {phases.length > 0 ? (\n          <ProjectPhasesList\n            projectId={project.id}\n            phases={phases}\n            projectSlug={project.slug}\n          />\n        ) : (\n          <div className=\"h-20 w-full flex items-center justify-center\">\n            <p className=\"font-Montserrat text-lg\">\n              This project have no phases\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":["ProjectPhasesList","lazy","ProjectPhasesPage","slug","useParams","useState","undefined","project","setProject","loaded","setLoaded","phases","setPhases","loading","setLoading","useEffect","agent","then","response","catch","err","console","log","finally","id","message","className","title","length","projectId","projectSlug"],"sourceRoot":""}