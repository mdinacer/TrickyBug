{"version":3,"file":"static/js/880.ef0a4764.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/solid/esm/ChevronDownIcon.js","app/components/common/Dropdown.tsx","app/util/flattenObject.ts","app/components/Tickets/TicketForm.tsx","app/components/projects/projectDetails/ProjectTickets.tsx","app/models/enums.ts","app/util/enumToArray.ts"],"sourcesContent":["import * as React from \"react\";\n\nfunction ChevronDownIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ChevronDownIcon);\nexport default ForwardRef;","import { ChevronDownIcon } from \"@heroicons/react/solid\";\nimport { useEffect, useState } from \"react\";\n\ninterface Props {\n  title: string;\n  items: { name: string; value: string | number }[];\n  fullWidth?: boolean;\n  onChange: (value: any) => void;\n  selectedValue: any;\n  addAllItem?: boolean;\n}\n\nconst styles = {\n  dropdownContainer: \"relative border-x-2 border-x-slate-200 bg-slate-500\",\n  dropdownButton:\n    \"pb-2 pt-3 px-5 font-Oswald font-thin inline-flex justify-between items-center w-full\",\n  dropdownButtonText:\n    \"flex flex-row items-center justify-between w-full gap-x-5 text-2xl\",\n  dropdownButtonPlaceholder: \"text-2xl text-gray-300\",\n  inputValidationStyle:\n    \"h-auto font-Oswald text-lg leading-none w-full font-thin px-5 py-0 text-gray-600\",\n  dropdownButtonIcon: \"w-8 h-8 ml-2 text-white\",\n  dropdownListContainer:\n    \"absolute bg-white text-base z-50 drop-shadow-md list-none divide-y  divide-gray-100 rounded shadow my-4  w-full px-5\",\n  dropdownList: \"py-5 list-none flex flex-col gap-y-2 font-Montserrat\",\n  dropdownListItem:\n    \"font-Montserrat text-left text-black text-lg font-thin cursor-pointer\",\n};\n\nexport default function Dropdown({\n  title,\n  items,\n  fullWidth = false,\n  onChange,\n  selectedValue,\n}: Props) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedItem, setSelectedItem] = useState<{\n    name: string;\n    value: string | number;\n  } | null>(null);\n\n  useEffect(() => {\n    if (selectedValue && selectedItem == null) {\n      const item = items.find((i) => i.name === selectedValue);\n      setSelectedItem(item ? item : null);\n    }\n  }, [items, selectedItem, selectedValue]);\n\n  type ItemType = { name: string; value: string | number };\n\n  const handleOnSelectItem = (item: ItemType) => {\n    setSelectedItem(item);\n    onChange(item.value);\n    setIsOpen(false);\n  };\n  return (\n    <div\n      className={`\n    ${fullWidth ? \"w-full\" : \"max-w-sm w-full\"}\n    ${!selectedValue ? \"border-x-red-500\" : \"border-x-white\"}  \n    ${styles.dropdownContainer}`}\n    >\n      <button\n        type=\"button\"\n        className={styles.dropdownButton}\n        onClick={() => setIsOpen((prev) => !prev)}\n      >\n        {selectedItem ? (\n          <p className={styles.dropdownButtonText}>\n            <span className=\"text-gray-300 opacity-50  capitalize \">\n              {title}{\" \"}\n            </span>\n            <span className=\"uppercase text-white\">{selectedItem.name}</span>\n          </p>\n        ) : (\n          <p className={styles.dropdownButtonPlaceholder}>{title}</p>\n        )}\n        <ChevronDownIcon className={styles.dropdownButtonIcon} />\n      </button>\n\n      <div\n        className={`${isOpen ? \"block \" : \"hidden\"}  ${\n          styles.dropdownListContainer\n        }`}\n        id=\"dropdown\"\n      >\n        <ul className={styles.dropdownList} aria-labelledby=\"dropdown\">\n          {items.map((item) => (\n            <li\n              key={item.value}\n              value={item.value}\n              onClick={() => handleOnSelectItem(item)}\n              className={styles.dropdownListItem}\n            >\n              {item.name}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","export const flattenObj = (ob: any) => {\n\n    // The object which contains the\n    // final result\n    let result: any = {};\n\n    // loop through the object \"ob\"\n    for (const i in ob) {\n\n        // We check the type of the i using\n        // typeof() function and recursively\n        // call the function again\n        if ((typeof ob[i]) === 'object' && !Array.isArray(ob[i])) {\n            const temp = flattenObj(ob[i]);\n            for (const j in temp) {\n\n                // Store temp in result\n                result[i + '.' + j] = temp[j];\n            }\n        }\n\n        // Else store ob[i] in result directly\n        else {\n            result[i] = ob[i];\n        }\n    }\n    return result;\n};","import { useCallback, useEffect, useState } from \"react\";\nimport { FieldValues, useForm } from \"react-hook-form\";\nimport agent from \"../../api/agent\";\nimport {\n  IssueNature,\n  IssueOccurrence,\n  IssueSeverity,\n  TicketPriority,\n  TicketStatus,\n} from \"../../models/enums\";\nimport { ProjectMember } from \"../../models/member\";\nimport { Project } from \"../../models/project\";\nimport { ProjectTicketFull } from \"../../models/ticket\";\nimport { EnumToArray } from \"../../util/enumToArray\";\nimport { flattenObj } from \"../../util/flattenObject\";\nimport Dropdown from \"../common/Dropdown\";\nimport MediaDropZone from \"../common/MediaDropZone\";\nimport AppTextArea from \"../common/TextArea\";\nimport AppTextInput from \"../common/TextInput\";\n\ninterface Props {\n  projectSlug: string;\n  ticketId?: number | null;\n  isFullScreen?: boolean;\n  onClose: () => void;\n}\n\nexport default function TicketForm({ projectSlug, ticketId, onClose }: Props) {\n  const [ticket, setTicket] = useState<ProjectTicketFull | null>(null);\n  const isEdit = !!ticket;\n  const [project, setProject] = useState<Project | null>(null);\n  const projectLoaded = !!project;\n  const [members, setMembers] = useState<{ name: string; value: string }[]>([]);\n  const {\n    control,\n    watch,\n    handleSubmit,\n    reset,\n    setValue,\n    formState: { isDirty },\n  } = useForm({\n    mode: \"all\",\n  });\n  const watchFile = watch(\"file\", null);\n  const loadMembers = useCallback(async (id: string) => {\n    try {\n      const result = await agent.Projects.listMembers(id);\n      const items = result.map((member: ProjectMember) => ({\n        name: member.userName,\n        value: member.userId,\n      }));\n      setMembers(items);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  const loadProject = useCallback(\n    async (slug: string) => {\n      try {\n        const project = await agent.Projects.details(slug);\n        setProject(project);\n        setValue(\"projectId\", project.id);\n        await loadMembers(project.id);\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    [loadMembers, setValue]\n  );\n\n  const loadTicket = useCallback(async (id: number) => {\n    try {\n      const result = await agent.Tickets.details(id);\n      setTicket(result);\n      console.log(\"ticket\", result);\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (projectSlug) {\n      loadProject(projectSlug);\n    }\n  }, [loadProject, projectSlug]);\n\n  useEffect(() => {\n    if (ticketId) {\n      loadTicket(ticketId);\n    }\n  }, [loadTicket, ticketId]);\n\n  useEffect(() => {\n    if (ticket && !watchFile && !isDirty) {\n      reset(ticket);\n    }\n\n    return () => {\n      if (watchFile) URL.revokeObjectURL(watchFile.preview);\n    };\n  }, [isDirty, reset, ticket, watchFile]);\n\n  const handleOnChange = (name: any, value: any) => {\n    setValue(name, value);\n  };\n\n  async function handleSubmitData(data: FieldValues) {\n    if (!projectLoaded) return;\n    const { file, description } = data; //{ ...data, projectId: project.id };\n\n    const obj = {\n      id: ticket ? ticket.id : 0,\n      subject: data.subject,\n      body: data.body,\n      priority: data.priority,\n      projectId: project.id,\n      status: data.status,\n      assignedMemberId: data.assignedMemberId,\n      description,\n    };\n\n    const flatObj = { ...flattenObj(obj), \"description.file\": file };\n\n    console.log(\"obj:\", flatObj);\n\n    if (!project) return;\n\n    const itemChanged = true; //ticket && ticket !== obj;\n\n    try {\n      if (isEdit && itemChanged) {\n        await agent.Tickets.update(flatObj);\n      }\n\n      if (!isEdit) {\n        await agent.Tickets.create(flatObj);\n      }\n    } catch (error) {\n      console.log(error);\n    } finally {\n      onClose();\n    }\n  }\n\n  return (\n    <div className=\"fixed top-0 left-0 h-screen w-screen bg-slate-600 z-[5] flex items-center  py-20\">\n      <div className=\"container mx-auto flex flex-col text-white max-w-4xl\">\n        <div className=\"flex flex-row justify-between border-b border-b-white py-1 items-end \">\n          <p className=\"font-Oswald text-5xl uppercase\">\n            {isEdit ? \"Edit Ticket\" : \"New Ticket\"}\n          </p>\n          <p className=\"font-Oswald text-xl uppercase font-thin\">\n            {project?.title}\n          </p>\n        </div>\n\n        <form\n          onSubmit={handleSubmit(handleSubmitData)}\n          className=\"w-full flex flex-col gap-y-5\"\n        >\n          <div className=\"grid grid-cols-2  gap-x-10\">\n            <div className=\"flex flex-col gap-y-5 py-5\">\n              <AppTextInput\n                type=\"text\"\n                control={control}\n                label=\"Ticket Title\"\n                placeholder=\"Ticket Title\"\n                name=\"subject\"\n                fullWidth\n                rules={{\n                  required: \"Subject is required\",\n                }}\n              />\n              <AppTextInput\n                type=\"text\"\n                control={control}\n                label=\"Operating System\"\n                placeholder=\"Operating System\"\n                name=\"description.operatingSystem\"\n                fullWidth\n              />\n\n              <AppTextInput\n                type=\"text\"\n                control={control}\n                label=\"Browser\"\n                placeholder=\"Browser\"\n                name=\"description.browser\"\n                fullWidth\n              />\n\n              <AppTextArea\n                rows={4}\n                type=\"text\"\n                control={control}\n                label=\"Ticket Description\"\n                placeholder=\"Ticket Description\"\n                name=\"body\"\n                fullWidth\n                rules={{\n                  required: \"Description is required\",\n                }}\n              />\n            </div>\n            <div className=\"flex flex-col gap-y-5 py-5\">\n              <div className=\" w-full flex flex-col  gap-y-5 \">\n                <Dropdown\n                  title=\"Priority\"\n                  fullWidth\n                  items={EnumToArray(TicketPriority)}\n                  onChange={(value) => handleOnChange(\"priority\", value)}\n                  selectedValue={ticket?.priority}\n                />\n                {isEdit && (\n                  <Dropdown\n                    title=\"Status\"\n                    fullWidth\n                    items={EnumToArray(TicketStatus)}\n                    onChange={(value) => handleOnChange(\"status\", value)}\n                    selectedValue={ticket?.status}\n                  />\n                )}\n                {isEdit && (\n                  <Dropdown\n                    title=\"Assigned Member\"\n                    fullWidth\n                    items={members}\n                    onChange={(value) =>\n                      handleOnChange(\"assignedMemberId\", value)\n                    }\n                    selectedValue={ticket?.assignedMember}\n                  />\n                )}\n                <Dropdown\n                  title=\"Occurrence\"\n                  fullWidth\n                  items={EnumToArray(IssueOccurrence)}\n                  onChange={(value) =>\n                    handleOnChange(\"description.occurrence\", value)\n                  }\n                  selectedValue={ticket?.description.occurrence}\n                />\n                <Dropdown\n                  title=\"Severity\"\n                  fullWidth\n                  items={EnumToArray(IssueSeverity)}\n                  onChange={(value) =>\n                    handleOnChange(\"description.severity\", value)\n                  }\n                  selectedValue={ticket?.description.severity}\n                />\n                <Dropdown\n                  title=\"Nature\"\n                  fullWidth\n                  items={EnumToArray(IssueNature)}\n                  onChange={(value) =>\n                    handleOnChange(\"description.nature\", value)\n                  }\n                  selectedValue={ticket?.description.nature}\n                />\n              </div>\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-x-10 h-[200px]\">\n            <div className=\"h-auto border-x-2 px-5 border-x-white text-white bg-slate-500 bg-opacity-50 flex-auto\">\n              <MediaDropZone control={control} name=\"file\" />\n            </div>\n            <div className=\"flex flex-row h-full w-full border-x-2 px-5 border-x-white text-white bg-slate-500 bg-opacity-50\">\n              <div className=\" mx-auto flex items-center justify-center\">\n                {watchFile ? (\n                  <img\n                    className=\" object-auto w-auto object-center max-h-[200px]\"\n                    src={watchFile.preview}\n                    alt=\"preview\"\n                  />\n                ) : (\n                  <img\n                    className=\" object-auto w-auto object-center max-h-[200px]\"\n                    src={ticket?.description.photo}\n                    alt={ticket?.subject}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-row gap-x-2 mx-auto w-full justify-end py-5\">\n            <input\n              className=\"cursor-pointer border-slate-500 border-2 text-slate-300 py-1 px-5 uppercase font-Oswald text-xl font-thin\"\n              type=\"button\"\n              value=\"Cancel\"\n              onClick={onClose}\n            />\n            <input\n              className=\"cursor-pointer bg-slate-800 text-white py-1 px-5 uppercase font-Oswald text-xl font-thin\"\n              type=\"submit\"\n              value={isEdit ? \"Update Ticket\" : \"Create Ticket\"}\n            />\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n","import { lazy, useCallback, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport agent from \"../../../api/agent\";\nimport { ProjectTicket } from \"../../../models/ticket\";\nimport TicketForm from \"../../Tickets/TicketForm\";\n\nconst TicketsList = lazy(() => import(\"../../Tickets/TicketsList\"));\n\ninterface Props {\n  projectId: string;\n  projectSlug: string;\n  isPermitted: boolean;\n}\n\nexport default function ProjectRecentTickets({\n  projectId,\n  projectSlug,\n  isPermitted,\n}: Props) {\n  const [tickets, setTickets] = useState<ProjectTicket[]>([]);\n  const [loaded, setLoaded] = useState(false);\n  const [selectedTicketId, setSelectedTicketId] = useState<number | null>(null);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const loadProjectTickets = useCallback(() => {\n    agent.Projects.listRecentTickets(projectId)\n      .then((response) => {\n        setTickets(response);\n      })\n      .catch((err) => console.log(err))\n      .finally(() => setLoaded(false));\n  }, [projectId]);\n\n  useEffect(() => {\n    if (projectId && !loaded) {\n      loadProjectTickets();\n    }\n    return () => {\n      setTickets([]);\n    };\n  }, [loadProjectTickets, loaded, projectId]);\n\n  const handleOnClose = () => {\n    loadProjectTickets();\n    if (selectedTicketId) setSelectedTicketId(null);\n    setIsOpen(false);\n  };\n\n  function handleOnTicketSelect(id: number) {\n    setSelectedTicketId(id);\n    setIsOpen(true);\n  }\n\n  if (isOpen && projectId)\n    return (\n      <TicketForm\n        projectSlug={projectSlug}\n        onClose={handleOnClose}\n        ticketId={selectedTicketId}\n      />\n    );\n  return (\n    <div className=\"relative pb-5 h-full flex flex-col bg-slate-200 rounded-md overflow-hidden\">\n      <div className=\"flex-initial bg-slate-700 px-10 text-white  py-2 flex flex-row items-center justify-between\">\n        <p className=\"font-Oswald text-xl uppercase \">Recent Tickets</p>\n        <div className=\"flex flex-row gap-x-5\">\n          {isPermitted && (\n            <button\n              onClick={() => setIsOpen(true)}\n              className=\"text-Montserrat text-sm uppercase underline underline-offset-2\"\n              type=\"button\"\n            >\n              Add\n            </button>\n          )}\n          <Link\n            className=\"text-Montserrat text-sm uppercase underline underline-offset-2\"\n            to={{\n              pathname: `/tickets`,\n              search: `?projectId=${projectId}`,\n            }}\n          >\n            view all\n          </Link>\n        </div>\n      </div>\n      <div className=\"px-10\">\n        {tickets.length > 0 ? (\n          <TicketsList\n            tickets={tickets}\n            onActionSelected={handleOnTicketSelect}\n          />\n        ) : (\n          <div className=\"h-40 w-full flex items-center justify-center\">\n            <p className=\"font-Montserrat text-xl text-gray-400\">EMPTY</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","export enum IssueOccurrence {\n    Persistent,\n    Frequent,\n    Random,\n    Rare\n}\n\nexport enum TicketStatus {\n    New,\n    Assigned,\n    Open,\n    Fixed,\n    Pending,\n    Retest,\n    Verified,\n    Reopen,\n    Closed,\n    Duplicate,\n    Rejected,\n    Deferred,\n    NotBug\n}\n\nexport enum TicketPriority {\n    Low,\n    Medium,\n    High,\n    Urgent\n}\n\nexport enum IssueSeverity {\n    Low,\n    Medium,\n    High,\n    Critical\n}\n\nexport enum IssueNature {\n    Functional,\n    Performance,\n    Usability,\n    Compatibility,\n    Security\n}","export function EnumToArray(object: any): { name: string, value: any }[] {\n    const arrayObjects = [];\n\n    for (const [propertyKey, propertyValue] of Object.entries(object)) {\n        if (!Number.isNaN(Number(propertyKey))) {\n            continue;\n        }\n        arrayObjects.push({ name: propertyKey, value: propertyValue });\n    }\n    return arrayObjects;\n}"],"names":["React","props","svgRef","Object","assign","xmlns","viewBox","fill","ref","fillRule","d","clipRule","styles","Dropdown","title","items","fullWidth","onChange","selectedValue","useState","isOpen","setIsOpen","selectedItem","setSelectedItem","useEffect","item","find","i","name","className","type","onClick","prev","id","map","value","handleOnSelectItem","flattenObj","ob","result","Array","isArray","temp","j","TicketForm","projectSlug","ticketId","onClose","ticket","setTicket","isEdit","project","setProject","projectLoaded","members","setMembers","useForm","mode","control","watch","handleSubmit","reset","setValue","isDirty","formState","watchFile","loadMembers","useCallback","agent","member","userName","userId","console","log","loadProject","slug","loadTicket","URL","revokeObjectURL","preview","handleOnChange","data","file","description","obj","subject","body","priority","projectId","status","assignedMemberId","flatObj","onSubmit","label","placeholder","rules","required","rows","EnumToArray","TicketPriority","TicketStatus","assignedMember","IssueOccurrence","occurrence","IssueSeverity","severity","IssueNature","nature","MediaDropZone","src","alt","photo","TicketsList","lazy","ProjectRecentTickets","isPermitted","tickets","setTickets","loaded","setLoaded","selectedTicketId","setSelectedTicketId","loadProjectTickets","then","response","catch","err","finally","to","pathname","search","length","onActionSelected","object","arrayObjects","entries","propertyKey","propertyValue","Number","isNaN","push"],"sourceRoot":""}