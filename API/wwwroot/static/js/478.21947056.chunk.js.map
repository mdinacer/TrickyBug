{"version":3,"file":"static/js/478.21947056.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","app/pages/account/registerValidation.ts","app/pages/account/RegisterPage.tsx"],"sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import * as yup from \"yup\";\n\nexport const registerValidationSchema = yup.object({\n  displayName: yup.string().required(\"Email is required\"),\n  username: yup.string().required(\"Email is required\"),\n  email: yup.string().email().required(\"Email is required\"),\n  password: yup\n    .string()\n    .required(\"Password is required\")\n    .matches(\n      /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/,\n      \"Password must at least 8 characters long and must contain: \" +\n        \"one uppercase,one lowercase and one alphanumeric character.\"\n    ),\n  password2: yup\n    .string()\n    .when(\"password\", (password, field) =>\n      password ? field.required().oneOf([yup.ref(\"password\")]) : field\n    ),\n});\n","import { FieldValues, useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport { registerValidationSchema } from \"./registerValidation\";\nimport { yupResolver } from \"@hookform/resolvers/yup/dist/yup\";\nimport agent from \"../../api/agent\";\n\nexport default function RegisterPage() {\n  const {\n    register,\n    handleSubmit,\n    formState: { isSubmitting, isValid },\n  } = useForm({ mode: \"all\", resolver: yupResolver(registerValidationSchema) });\n\n  async function submitForm(data: FieldValues) {\n    const { password2, ...user } = data;\n    console.log(\"user\", user);\n    agent.Account.register(user)\n      .then((response) => {\n        console.log(response);\n      })\n      .catch((err) => console.log(err));\n  }\n  return (\n    <div className=\"py-20 h-screen w-screen flex items-center justify-center\">\n      <div className=\"h-auto p-20 w-full max-w-xl bg-gray-300 drop-shadow-md rounded-md flex items-center justify-center\">\n        <div className=\"max-w-lg w-full \">\n          <p className=\" font-Oswald text-7xl text-center pb-5 uppercase\">\n            Sign Up\n          </p>\n\n          <form\n            autoComplete=\"off\"\n            onSubmit={handleSubmit(submitForm)}\n            className=\"flex flex-col gap-y-2 mx-auto\"\n          >\n            <label\n              className=\"font-Montserrat text-sm uppercase font-bold\"\n              htmlFor=\"fullNameInput\"\n            >\n              Full Name\n            </label>\n            <input\n              autoComplete=\"off\"\n              id=\"fullNameInput\"\n              type={\"text\"}\n              placeholder=\"Type your full name\"\n              className=\"max-w-md w-full py-2 px-5 rounded-md font-Montserrat mb-4\"\n              {...register(\"displayName\")}\n            />\n            <label\n              className=\"font-Montserrat text-sm uppercase font-bold\"\n              htmlFor=\"userNameInput\"\n            >\n              User Name\n            </label>\n            <input\n              autoComplete=\"off\"\n              id=\"userNameInput\"\n              type={\"text\"}\n              placeholder=\"Type your username\"\n              className=\"max-w-md w-full py-2 px-5 rounded-md font-Montserrat mb-4\"\n              {...register(\"username\")}\n            />\n            <label\n              className=\"font-Montserrat text-sm uppercase font-bold\"\n              htmlFor=\"emailInput\"\n            >\n              Email\n            </label>\n            <input\n              autoComplete=\"off\"\n              id=\"emailInput\"\n              type={\"email\"}\n              placeholder=\"Type your email\"\n              className=\"max-w-md w-full py-2 px-5 rounded-md font-Montserrat mb-4\"\n              {...register(\"email\", { required: \"Email is required\" })}\n            />\n\n            <label\n              className=\"font-Montserrat text-sm uppercase font-bold\"\n              htmlFor=\"passwordInput\"\n            >\n              Password\n            </label>\n\n            <input\n              autoComplete=\"off\"\n              id=\"passwordInput\"\n              type={\"password\"}\n              placeholder=\"Type your password\"\n              className=\"max-w-md w-full py-2 px-5 rounded-md font-Montserrat\"\n              {...register(\"password\", { required: \"Password is required\" })}\n            />\n\n            <label\n              className=\"font-Montserrat text-sm uppercase font-bold\"\n              htmlFor=\"password2Input\"\n            >\n              Confirm Password\n            </label>\n\n            <input\n              autoComplete=\"off\"\n              id=\"password2Input\"\n              type={\"password\"}\n              placeholder=\"Confirm your password\"\n              className=\"max-w-md w-full py-2 px-5 rounded-md font-Montserrat\"\n              {...register(\"password2\")}\n            />\n\n            <input\n              disabled={!isValid}\n              className={`${\n                isValid ? \"bg-orange-600\" : \"bg-orange-300\"\n              } text-white uppercase font-Montserrat font-bold  py-2 px-5 rounded-md my-5`}\n              type=\"submit\"\n              value={isSubmitting ? \"Please wait\" : \"Validate\"}\n            />\n          </form>\n          <Link\n            to={loginPath}\n            className=\"underline underline-offset-2 text-center\"\n          >\n            <p className=\" font-Montserrat text-sm \">\n              Have an account!, Sign Up\n            </p>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst loginPath = \"/account/login\";\n"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","registerValidationSchema","yup","displayName","required","username","email","password","matches","password2","when","field","oneOf","RegisterPage","useForm","mode","resolver","yupResolver","register","handleSubmit","formState","isSubmitting","isValid","data","user","console","log","agent","then","response","catch","err","className","autoComplete","onSubmit","htmlFor","id","type","placeholder","disabled","value","to","loginPath"],"sourceRoot":""}